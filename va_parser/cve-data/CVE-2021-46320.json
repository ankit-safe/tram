{
    "title": "In OpenZeppelin <=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution.",
    "score": 7.5,
    "severity": "HIGH",
    "cwe_id": "CWE-665",
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
    "cpe_match": [
        "cpe:2.3:a:openzeppelin:openzeppelin:*:*:*:*:*:*:*:*"
    ],
    "cve_source": [
        "NVD"
    ],
    "ttpMapping": [
        {
            "techniqueId": "T1106",
            "confidence": "10.3",
            "techniqueName": "Native API"
        },
        {
            "techniqueId": "T1489",
            "confidence": "11.1",
            "techniqueName": "Service Stop"
        }
    ]
}
