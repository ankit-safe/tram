{
    "title": "Restund is an open source NAT traversal server. The restund TURN server can be instructed to open a relay to the loopback address range. This allows you to reach any other service running on localhost which you might consider private. In the configuration that we ship (https://github.com/wireapp/ansible-restund/blob/master/templates/restund.conf.j2#L40-L43) the `status` interface of restund is enabled and is listening on `127.0.0.1`.The `status` interface allows users to issue administrative commands to `restund` like listing open relays or draining connections. It would be possible for an attacker to contact the status interface and issue administrative commands by setting `XOR-PEER-ADDRESS` to `127.0.0.1:{{restund_udp_status_port}}` when opening a TURN channel. We now explicitly disallow relaying to loopback addresses, any addresses, link local addresses, and the broadcast address. As a workaround disable the `status` module in your restund configuration. However there might still be other services running on `127.0.0.0/8` that you do not want to have exposed. The `turn` module can be disabled. Restund will still perform STUN and this might already be enough for initiating calls in your environments. TURN is only used as a last resort when other NAT traversal options do not work. One should also make sure that the TURN server is set up with firewall rules so that it cannot relay to other addresses that you dont want the TURN server to relay to. For example other services in the same VPC where the TURN server is running. Ideally TURN servers should be deployed in an isolated fashion where they can only reach what they need to reach to perform their task of assisting NAT-traversal.",
    "score": 9.6,
    "severity": "CRITICAL",
    "cwe_id": "CWE-862",
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:N",
    "cpe_match": [
        "cpe:2.3:a:wire:restund:*:*:*:*:*:*:*:*"
    ],
    "cve_source": [
        "NVD"
    ],
    "ttpMapping": [
        {
            "techniqueId": "T1016",
            "confidence": "24.7",
            "techniqueName": "System Network Configuration Discovery"
        },
        {
            "techniqueId": "T1543",
            "confidence": "14.4",
            "techniqueName": "Create or Modify System Process"
        },
        {
            "techniqueId": "T1016",
            "confidence": "32.1",
            "techniqueName": "System Network Configuration Discovery"
        },
        {
            "techniqueId": "T1546.004",
            "confidence": "21.1",
            "techniqueName": "Unix Shell Configuration Modification"
        },
        {
            "techniqueId": "T1129",
            "confidence": "22.4",
            "techniqueName": "Shared Modules"
        },
        {
            "techniqueId": "T1106",
            "confidence": "30.9",
            "techniqueName": "Native API"
        },
        {
            "techniqueId": "T1129",
            "confidence": "15.5",
            "techniqueName": "Shared Modules"
        },
        {
            "techniqueId": "T1482",
            "confidence": "10.3",
            "techniqueName": "Domain Trust Discovery"
        },
        {
            "techniqueId": "T1056",
            "confidence": "11.2",
            "techniqueName": "Input Capture"
        },
        {
            "techniqueId": "T1106",
            "confidence": "16.4",
            "techniqueName": "Native API"
        },
        {
            "techniqueId": "T1057",
            "confidence": "19.9",
            "techniqueName": "Process Discovery"
        },
        {
            "techniqueId": "T1106",
            "confidence": "11.7",
            "techniqueName": "Native API"
        },
        {
            "techniqueId": "T1053",
            "confidence": "35.4",
            "techniqueName": "Scheduled Task/Job"
        }
    ]
}
