{
    "title": "mstdlib (aka the M Standard Library for C) 1.2.0 has incorrect file access control in situations where M_fs_perms_can_access attempts to delete an existing file (that lacks public read/write access) during a copy operation, related to fs/m_fs.c and fs/m_fs_path.c. An attacker could create the file and then would have access to the data.",
    "score": 9.8,
    "severity": "CRITICAL",
    "cwe_id": "CWE-732",
    "cvss_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cpe_match": [
        "cpe:2.3:a:monetra:mstdlib:1.2.0:*:*:*:*:*:*:*"
    ],
    "cve_source": [
        "NVD"
    ],
    "ttpMapping": [
        {
            "technique_id": "T1021.002",
            "confidence": "3.4",
            "technique_name": "SMB/Windows Admin Shares"
        },
        {
            "technique_id": "T1033",
            "confidence": "3.9",
            "technique_name": "System Owner/User Discovery"
        },
        {
            "technique_id": "T1041",
            "confidence": "4.9",
            "technique_name": "Exfiltration Over C2 Channel"
        },
        {
            "technique_id": "T1056",
            "confidence": "3.2",
            "technique_name": "Input Capture"
        },
        {
            "technique_id": "T1083",
            "confidence": "12.7",
            "technique_name": "File and Directory Discovery"
        },
        {
            "technique_id": "T1134",
            "confidence": "2.0",
            "technique_name": "Access Token Manipulation"
        },
        {
            "technique_id": "T1485",
            "confidence": "7.0",
            "technique_name": "Data Destruction"
        }
    ]
}
