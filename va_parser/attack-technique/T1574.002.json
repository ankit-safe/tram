{
    "id": "T1574.002",
    "name": "DLL Side-Loading",
    "x_mitre_is_subtechnique": true,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",
    "x_mitre_platforms": [
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [
        "Anti-virus",
        "Application Control"
    ],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1574/002",
            "external_id": "T1574.002"
        },
        {
            "source_name": "FireEye DLL Side-Loading",
            "description": "Amanda Steward. (2014). FireEye DLL Side-Loading: A Thorn in the Side of the Anti-Virus Industry. Retrieved March 13, 2020.",
            "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf"
        },
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/641.html",
            "external_id": "CAPEC-641"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "persistence"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "privilege-escalation"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "tactic": [
        "persistence",
        "privilege-escalation",
        "defense-evasion"
    ],
    "x_mitre_detection": "Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
    "x_mitre_data_sources": [
        "Module: Module Load",
        "Process: Process Creation",
        "File: File Modification",
        "File: File Creation"
    ],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Update Software",
                "description": "Perform regular software updates to mitigate exploitation risk.",
                "type": "course-of-action",
                "id": "M1051"
            },
            {
                "name": "Application Developer Guidance",
                "description": "This mitigation describes any guidance or training given to developers of applications to avoid introducing security weaknesses that an adversary may be able to take advantage of.",
                "type": "course-of-action",
                "id": "M1013"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that the program sxstrace.exe along with manual inspection is used to check manifest files for side-loading vulnerabilities in software",
                "acid": "98580862"
            },
            {
                "description": "Ensure that softwares are installed in write-protected locations",
                "acid": "98580863"
            },
            {
                "description": "Ensure that software is updated regularly to include patches that fix DLL side-loading vulnerabilities",
                "acid": "98580864"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that processes are monitored for unusual activity such as a process that does not use the network begins to do so",
                "acid": "98580859"
            },
            {
                "description": "Ensure that DLL metadata, such as a hash is tracked and analyzed",
                "acid": "98580860"
            },
            {
                "description": "Ensure that DLLs loaded at process execution time are compared against previous executions",
                "acid": "98580861"
            }
        ]
    },
    "cspcontrolIds": [
        "40000117",
        "40000521",
        "40000522"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [],
    "cveIds": [
        "CVE-2010-1592",
        "CVE-2020-3153"
    ]
}
