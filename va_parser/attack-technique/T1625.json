{
    "id": "T1625",
    "name": "Hijack Execution Flow",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur over time. \n\nThere are many ways an adversary may hijack the flow of execution. A primary way is by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs or resources, such as file directories, could also be poisoned to include malicious payloads.",
    "x_mitre_platforms": [
        "Android"
    ],
    "x_mitre_domains": [
        "mobile-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "external_id": "T1625",
            "url": "https://attack.mitre.org/techniques/T1625"
        },
        {
            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
            "source_name": "NIST Mobile Threat Catalogue",
            "external_id": "APP-27"
        }
    ],
    "kill_chain_phases": [
        {
            "phase_name": "persistence",
            "kill_chain_name": "mitre-mobile-attack"
        }
    ],
    "tactic": [
        "persistence"
    ],
    "x_mitre_detection": "Mobile threat defense agents could detect unauthorized operating system modifications by using attestation.",
    "x_mitre_data_sources": [],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "System Partition Integrity",
                "description": "Ensure that Android devices being used include and enable the Verified Boot capability, which cryptographically ensures the integrity of the system partition.",
                "type": "course-of-action",
                "id": "M1004"
            },
            {
                "name": "Attestation",
                "description": "Enable remote attestation capabilities when available (such as Android SafetyNet or Samsung Knox TIMA Attestation) and prohibit devices that fail the attestation from accessing enterprise resources.",
                "type": "course-of-action",
                "id": "M1002"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": []
    },
    "detectionRequirements": {
        "requirements": []
    },
    "cspcontrolIds": [],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [],
    "cveIds": [],
    "subTechniques": [
        "T1625.001"
    ]
}
