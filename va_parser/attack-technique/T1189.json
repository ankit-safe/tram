{
    "id": "T1189",
    "name": "Drive-by Compromise",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)",
    "x_mitre_platforms": [
        "Windows",
        "Linux",
        "macOS",
        "SaaS"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1189",
            "external_id": "T1189"
        },
        {
            "source_name": "Shadowserver Strategic Web Compromise",
            "description": "Adair, S., Moran, N. (2012, May 15). Cyber Espionage & Strategic Web Compromises \u2013 Trusted Websites Serving Dangerous Results. Retrieved March 13, 2018.",
            "url": "http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/"
        },
        {
            "source_name": "Volexity OceanLotus Nov 2017",
            "description": "Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017.",
            "url": "https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "initial-access"
        }
    ],
    "tactic": [
        "initial-access"
    ],
    "x_mitre_detection": "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
    "x_mitre_data_sources": [
        "Application Log: Application Log Content",
        "Process: Process Creation",
        "File: File Creation",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content"
    ],
    "x_mitre_permissions_required": [
        "User"
    ],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Exploit Protection",
                "description": "Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.",
                "type": "course-of-action",
                "id": "M1050"
            },
            {
                "name": "Update Software",
                "description": "Perform regular software updates to mitigate exploitation risk.",
                "type": "course-of-action",
                "id": "M1051"
            },
            {
                "name": "Application Isolation and Sandboxing",
                "description": "Restrict execution of code to a virtual environment on or in transit to an endpoint system.",
                "type": "course-of-action",
                "id": "M1048"
            },
            {
                "name": "Restrict Web-Based Content",
                "description": "Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.",
                "type": "course-of-action",
                "id": "M1021"
            },
            {
                "name": "Drive-by Compromise Mitigation",
                "description": "Drive-by compromise relies on there being a vulnerable piece of software on the client end systems. Use modern browsers with security features turned on. Ensure all browsers and plugins kept updated can help prevent the exploit phase of this technique.\n\nFor malicious code served up through ads, adblockers can help prevent that code from executing in the first place. Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.\n\nBrowser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist. (Citation: Windows Blogs Microsoft Edge Sandbox) (Citation: Ars Technica Pwn2Own 2017 VM Escape)\n\nOther types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. The risks of additional exploits and weaknesses in implementation may still exist. (Citation: Ars Technica Pwn2Own 2017 VM Escape)\n\nSecurity applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. (Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. (Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility.",
                "type": "course-of-action",
                "id": "T1189"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that Browser sandboxes are implemented to mitigate the exploitation impact",
                "acid": "98580007"
            },
            {
                "description": "Ensure that Virtualization (sandboxing) is implemented in the organization to mitigate the risk of client-side exploitation",
                "acid": "98580008"
            },
            {
                "description": "Ensure that application micro-segmentation is implemented as a security mechanism to mitigate the impact of client-side exploitation",
                "acid": "98580009"
            },
            {
                "description": "Ensure that security applications (Eg. Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET)) are configured to identify and mitigate exploitation events",
                "acid": "98580010"
            },
            {
                "description": "Ensure that Control flow integrity checking is implemented to identify and prevent software exploitation",
                "acid": "98580011"
            },
            {
                "description": "Ensure that adblockers are configured to prevent ads with malicious codes",
                "acid": "98580012"
            },
            {
                "description": "Ensure that Script blocking extensions are configured to prevent the execution of JavaScripts",
                "acid": "98580013"
            },
            {
                "description": "Ensure that all Browsers and Plugins are kept up-to-date to the latest patch",
                "acid": "98580014"
            },
            {
                "description": "Ensure that Browsers are configured to have all the security features enabled",
                "acid": "98580015"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that Firewalls and proxies are configured to inspect URLs for known-bad domains or parameters",
                "acid": "98580001"
            },
            {
                "description": "Ensure that Firewalls and proxies are configured to perform reputation-based analytics on websites and their requested resources",
                "acid": "98580002"
            },
            {
                "description": "Ensure that the Network Intrusion Detection System is configured for MITM inspection to identify known malicious scripts",
                "acid": "98580003"
            },
            {
                "description": "Ensure that an endpoint security solution is implemented to monitor abnormal behavior on endpoint systems",
                "acid": "98580004"
            },
            {
                "description": "Ensure that endpoint security solution is implemented to monitor abnormal behavior of browser processes",
                "acid": "98580005"
            },
            {
                "description": "Ensure that an endpoint security solution is implemented to monitor abnormal behavior on suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic",
                "acid": "98580006"
            }
        ]
    },
    "cspcontrolIds": [
        "40000117",
        "40000208",
        "40000521",
        "40000522"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [
        "PACR00004",
        "PACR00007",
        "PACR00009"
    ],
    "policycontrolIds": [
        "50106007",
        "50106010",
        "50106020",
        "50106023",
        "50106032",
        "50106110"
    ],
    "technologycontrolIds": [
        "10101009",
        "10101027",
        "101040070",
        "101040073",
        "10240031",
        "10860024",
        "10960039",
        "10960070",
        "10960108",
        "10960109",
        "10960110",
        "11060042",
        "11100041",
        "11490009",
        "11490010",
        "16390052",
        "16390053",
        "16390055",
        "16460388",
        "18410002",
        "18650006",
        "19920438"
    ],
    "cveIds": [
        "CVE-1999-0005",
        "CVE-1999-0021",
        "CVE-1999-0148",
        "CVE-1999-0267",
        "CVE-1999-0404",
        "CVE-2009-1136",
        "CVE-2009-1151",
        "CVE-2009-1807",
        "CVE-2009-1862",
        "CVE-2009-3023",
        "CVE-2009-3459",
        "CVE-2010-1165",
        "CVE-2010-1423",
        "CVE-2010-1885",
        "CVE-2010-3971",
        "CVE-2011-1996",
        "CVE-2011-1999",
        "CVE-2011-3402",
        "CVE-2011-3544",
        "CVE-2012-0003",
        "CVE-2012-0158",
        "CVE-2012-1875",
        "CVE-2012-1876",
        "CVE-2012-2539",
        "CVE-2012-3213",
        "CVE-2012-4681",
        "CVE-2013-0422",
        "CVE-2013-0625",
        "CVE-2013-0707",
        "CVE-2013-0810",
        "CVE-2013-1493",
        "CVE-2013-2423",
        "CVE-2013-2465",
        "CVE-2013-2471",
        "CVE-2013-3918",
        "CVE-2013-5211",
        "CVE-2013-6225",
        "CVE-2014-0266",
        "CVE-2014-0307",
        "CVE-2014-0324",
        "CVE-2014-1776",
        "CVE-2014-1815",
        "CVE-2014-2817",
        "CVE-2014-4123",
        "CVE-2014-5083",
        "CVE-2014-5084",
        "CVE-2014-5085",
        "CVE-2014-5086",
        "CVE-2014-6332",
        "CVE-2014-6352",
        "CVE-2014-7187",
        "CVE-2015-0008",
        "CVE-2015-0064",
        "CVE-2015-0065",
        "CVE-2015-0071",
        "CVE-2015-0081",
        "CVE-2015-1641",
        "CVE-2015-2419",
        "CVE-2015-2424",
        "CVE-2015-2425",
        "CVE-2015-2426",
        "CVE-2015-2431",
        "CVE-2015-2502",
        "CVE-2015-2509",
        "CVE-2015-2590",
        "CVE-2015-5119",
        "CVE-2015-5123",
        "CVE-2015-5254",
        "CVE-2015-6103",
        "CVE-2015-6104",
        "CVE-2015-6131",
        "CVE-2015-7450",
        "CVE-2015-7756",
        "CVE-2015-8103",
        "CVE-2016-0034",
        "CVE-2016-0170",
        "CVE-2016-10174",
        "CVE-2016-1409",
        "CVE-2016-3298",
        "CVE-2016-3393",
        "CVE-2016-3510",
        "CVE-2016-3714",
        "CVE-2016-4372",
        "CVE-2016-4656",
        "CVE-2016-7189",
        "CVE-2016-7256",
        "CVE-2016-8377",
        "CVE-2016-9079",
        "CVE-2017-0022",
        "CVE-2017-0070",
        "CVE-2017-0072",
        "CVE-2017-0083",
        "CVE-2017-0084",
        "CVE-2017-0086",
        "CVE-2017-0087",
        "CVE-2017-0088",
        "CVE-2017-0089",
        "CVE-2017-0090",
        "CVE-2017-0149",
        "CVE-2017-0199",
        "CVE-2017-0202",
        "CVE-2017-0222",
        "CVE-2017-0262",
        "CVE-2017-0283",
        "CVE-2017-0561",
        "CVE-2017-0781",
        "CVE-2017-1000251",
        "CVE-2017-1000353",
        "CVE-2017-1000486",
        "CVE-2017-10271",
        "CVE-2017-12500",
        "CVE-2017-12542",
        "CVE-2017-12557",
        "CVE-2017-12629",
        "CVE-2017-14094",
        "CVE-2017-14459",
        "CVE-2017-15919",
        "CVE-2017-17405",
        "CVE-2017-17562",
        "CVE-2017-17976",
        "CVE-2017-5173",
        "CVE-2017-5638",
        "CVE-2017-5792",
        "CVE-2017-5799",
        "CVE-2017-5815",
        "CVE-2017-5816",
        "CVE-2017-5817",
        "CVE-2017-6327",
        "CVE-2017-7411",
        "CVE-2017-7494",
        "CVE-2017-7692",
        "CVE-2017-8464",
        "CVE-2017-8682",
        "CVE-2017-8895",
        "CVE-2017-9080",
        "CVE-2017-9101",
        "CVE-2017-9791",
        "CVE-2017-9805",
        "CVE-2017-9822",
        "CVE-2018-0798",
        "CVE-2018-0802",
        "CVE-2018-0824",
        "CVE-2018-0834",
        "CVE-2018-0835",
        "CVE-2018-0837",
        "CVE-2018-0838",
        "CVE-2018-0840",
        "CVE-2018-0860",
        "CVE-2018-0866",
        "CVE-2018-0933",
        "CVE-2018-0934",
        "CVE-2018-0935",
        "CVE-2018-0946",
        "CVE-2018-0953",
        "CVE-2018-0980",
        "CVE-2018-0986",
        "CVE-2018-1000006",
        "CVE-2018-1000094",
        "CVE-2018-1000811",
        "CVE-2018-1000888",
        "CVE-2018-10517",
        "CVE-2018-11059",
        "CVE-2018-11073",
        "CVE-2018-1133",
        "CVE-2018-11510",
        "CVE-2018-11776",
        "CVE-2018-12465",
        "CVE-2018-13415",
        "CVE-2018-13416",
        "CVE-2018-13417",
        "CVE-2018-13981",
        "CVE-2018-14009",
        "CVE-2018-14933",
        "CVE-2018-15133",
        "CVE-2018-15137",
        "CVE-2018-15576",
        "CVE-2018-15685",
        "CVE-2018-17553",
        "CVE-2018-19524",
        "CVE-2018-20221",
        "CVE-2018-20434",
        "CVE-2018-2628",
        "CVE-2018-5997",
        "CVE-2018-6941",
        "CVE-2018-6961",
        "CVE-2018-7297",
        "CVE-2018-7890",
        "CVE-2018-8021",
        "CVE-2018-8120",
        "CVE-2018-8133",
        "CVE-2018-8139",
        "CVE-2018-8174",
        "CVE-2018-8229",
        "CVE-2018-8248",
        "CVE-2018-8279",
        "CVE-2018-8288",
        "CVE-2018-8291",
        "CVE-2018-8298",
        "CVE-2018-8353",
        "CVE-2018-8355",
        "CVE-2018-8384",
        "CVE-2018-8466",
        "CVE-2018-8467",
        "CVE-2018-8544",
        "CVE-2018-8617",
        "CVE-2018-8619",
        "CVE-2018-8625",
        "CVE-2018-8631",
        "CVE-2018-8735",
        "CVE-2018-9206",
        "CVE-2019-0230",
        "CVE-2019-0232",
        "CVE-2019-0539",
        "CVE-2019-0541",
        "CVE-2019-0567",
        "CVE-2019-0568",
        "CVE-2019-0604",
        "CVE-2019-0667",
        "CVE-2019-0752",
        "CVE-2019-0911",
        "CVE-2019-0926",
        "CVE-2019-1052",
        "CVE-2019-10969",
        "CVE-2019-1106",
        "CVE-2019-11080",
        "CVE-2019-1117",
        "CVE-2019-1118",
        "CVE-2019-1119",
        "CVE-2019-1120",
        "CVE-2019-1121",
        "CVE-2019-1122",
        "CVE-2019-1123",
        "CVE-2019-1124",
        "CVE-2019-1127",
        "CVE-2019-1128",
        "CVE-2019-11409",
        "CVE-2019-1144",
        "CVE-2019-11445",
        "CVE-2019-1145",
        "CVE-2019-1149",
        "CVE-2019-1150",
        "CVE-2019-1151",
        "CVE-2019-1152",
        "CVE-2019-11886",
        "CVE-2019-12185",
        "CVE-2019-12725",
        "CVE-2019-12744",
        "CVE-2019-1284",
        "CVE-2019-13294",
        "CVE-2019-13597",
        "CVE-2019-13720",
        "CVE-2019-1429",
        "CVE-2019-15276",
        "CVE-2019-15280",
        "CVE-2019-15715",
        "CVE-2019-15846",
        "CVE-2019-15949",
        "CVE-2019-15974",
        "CVE-2019-16112",
        "CVE-2019-16113",
        "CVE-2019-16662",
        "CVE-2019-16759",
        "CVE-2019-17026",
        "CVE-2019-18578",
        "CVE-2019-18873",
        "CVE-2019-18935",
        "CVE-2019-1915",
        "CVE-2019-1943",
        "CVE-2019-19509",
        "CVE-2019-2107",
        "CVE-2019-5420",
        "CVE-2019-6453",
        "CVE-2019-6714",
        "CVE-2019-7265",
        "CVE-2019-7286",
        "CVE-2019-8942",
        "CVE-2019-9760",
        "CVE-2019-9978",
        "CVE-2020-0646",
        "CVE-2020-0674",
        "CVE-2020-0688",
        "CVE-2020-10189",
        "CVE-2020-10257",
        "CVE-2020-11036",
        "CVE-2020-11054",
        "CVE-2020-11108",
        "CVE-2020-11749",
        "CVE-2020-11819",
        "CVE-2020-11901",
        "CVE-2020-13125",
        "CVE-2020-14008",
        "CVE-2020-14011",
        "CVE-2020-14947",
        "CVE-2020-15920",
        "CVE-2020-15922",
        "CVE-2020-1745",
        "CVE-2020-24186",
        "CVE-2020-2555",
        "CVE-2020-28337",
        "CVE-2020-29607",
        "CVE-2020-3153",
        "CVE-2020-3198",
        "CVE-2020-35754",
        "CVE-2020-3956",
        "CVE-2020-4068",
        "CVE-2020-5266",
        "CVE-2020-5290",
        "CVE-2020-5339",
        "CVE-2020-5340",
        "CVE-2020-5902",
        "CVE-2020-6418",
        "CVE-2020-6819",
        "CVE-2020-6820",
        "CVE-2020-7209",
        "CVE-2020-7246",
        "CVE-2020-8163",
        "CVE-2020-8515",
        "CVE-2020-8518",
        "CVE-2020-9374",
        "CVE-2020-9484",
        "CVE-2021-22205",
        "CVE-2021-24040",
        "CVE-2021-24155",
        "CVE-2021-26855",
        "CVE-2021-31761",
        "CVE-2021-31933",
        "CVE-2021-35464",
        "CVE-2021-36711",
        "CVE-2021-39608",
        "CVE-2021-42071",
        "CVE-2021-42362",
        "CVE-2021-42580",
        "CVE-2021-44664",
        "CVE-2021-44673",
        "CVE-2021-46398",
        "CVE-2022-23642",
        "CVE-2022-24734",
        "CVE-2022-26965",
        "CVE-2022-27226"
    ],
    "subTechniques": []
}
