{
    "id": "T1550.001",
    "name": "Application Access Token",
    "x_mitre_is_subtechnique": true,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nIn AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim's primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
    "x_mitre_platforms": [
        "Office 365",
        "SaaS",
        "Google Workspace",
        "Containers",
        "IaaS",
        "Azure AD"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [
        "System Access Controls"
    ],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1550/001",
            "external_id": "T1550.001"
        },
        {
            "source_name": "Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019",
            "description": "Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.",
            "url": "https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"
        },
        {
            "source_name": "AWS Logging IAM Calls",
            "description": "AWS. (n.d.). Logging IAM and AWS STS API calls with AWS CloudTrail. Retrieved April 1, 2022.",
            "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html"
        },
        {
            "source_name": "AWS Temporary Security Credentials",
            "description": "AWS. (n.d.). Requesting temporary security credentials. Retrieved April 1, 2022.",
            "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html"
        },
        {
            "source_name": "Microsoft Identity Platform Access 2019",
            "description": "Cai, S., Flores, J., de Guzman, C., et. al.. (2019, August 27). Microsoft identity platform access tokens. Retrieved October 4, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens"
        },
        {
            "source_name": "Google Cloud Service Account Credentials",
            "description": "Google Cloud. (2022, March 31). Creating short-lived service account credentials. Retrieved April 1, 2022.",
            "url": "https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials"
        },
        {
            "source_name": "GCP Monitoring Service Account Usage",
            "description": "Google Cloud. (2022, March 31). Monitor usage patterns for service accounts and keys . Retrieved April 1, 2022.",
            "url": "https://cloud.google.com/iam/docs/service-account-monitoring"
        },
        {
            "source_name": "okta",
            "description": "okta. (n.d.). What Happens If Your JWT Is Stolen?. Retrieved September 12, 2019.",
            "url": "https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen"
        },
        {
            "source_name": "Rhino Security Labs Enumerating AWS Roles",
            "description": "Spencer Gietzen. (2018, August 8). Assume the Worst: Enumerating AWS Roles through \u2018AssumeRole\u2019. Retrieved April 1, 2022.",
            "url": "https://rhinosecuritylabs.com/aws/assume-worst-aws-assume-role-enumeration"
        },
        {
            "source_name": "Staaldraad Phishing with OAuth 2017",
            "description": "Stalmans, E.. (2017, August 2). Phishing with OAuth and o365/Azure. Retrieved October 4, 2019.",
            "url": "https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/"
        },
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/593.html",
            "external_id": "CAPEC-593"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "lateral-movement"
        }
    ],
    "tactic": [
        "defense-evasion",
        "lateral-movement"
    ],
    "x_mitre_detection": "Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)",
    "x_mitre_data_sources": [
        "Web Credential: Web Credential Usage",
        "Application Log: Application Log Content"
    ],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Audit",
                "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.",
                "type": "course-of-action",
                "id": "M1047"
            },
            {
                "name": "Restrict Web-Based Content",
                "description": "Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.",
                "type": "course-of-action",
                "id": "M1021"
            },
            {
                "name": "Encrypt Sensitive Information",
                "description": "Protect sensitive information with strong encryption.",
                "type": "course-of-action",
                "id": "M1041"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that audit tools are implemented to monitor access to OAuth 2.0.",
                "acid": "98581795"
            },
            {
                "description": "Ensure that audit reports are examined properly to identify role creations or policy modifications performed after initial access.",
                "acid": "98581796"
            },
            {
                "description": "Ensure that File encryption is implemented across all email communications containing sensitive information.",
                "acid": "98581797"
            },
            {
                "description": "Ensure that corporate policies are updated to restrict types of third-party applications which should be added to any online service or tool linked to the company's information, accounts or network.",
                "acid": "98581798"
            },
            {
                "description": "Ensure that a per-approved application list is used to deny all other application that are not in the list.",
                "acid": "98581799"
            },
            {
                "description": "Ensure that Administrator has blocked end-user consent through administrative portals (e.g. the Azure Portal to restrict web based content).",
                "acid": "98581800"
            },
            {
                "description": "Ensure that user are disabled from authorizing third-party apps through OAuth protocol and forcing administrative consent.",
                "acid": "98581801"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that access token activity is monitored for abnormal usage.",
                "acid": "98581793"
            },
            {
                "description": "Ensure that access token activity is monitored to check if unusual permissions granted to suspicious applications and APIs.",
                "acid": "98581794"
            }
        ]
    },
    "cspcontrolIds": [],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [
        "50102144",
        "50102145",
        "50102146",
        "50102147"
    ],
    "technologycontrolIds": [
        "11060042",
        "11100041"
    ],
    "cveIds": [
        "CVE-2018-15801"
    ]
}
