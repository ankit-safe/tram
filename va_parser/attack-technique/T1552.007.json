{
    "id": "T1552.007",
    "name": "Container API",
    "x_mitre_is_subtechnique": true,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ",
    "x_mitre_platforms": [
        "Containers"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1552/007",
            "external_id": "T1552.007"
        },
        {
            "source_name": "Docker API",
            "description": "Docker. (n.d.). Docker Engine API v1.41 Reference. Retrieved March 31, 2021.",
            "url": "https://docs.docker.com/engine/api/v1.41/"
        },
        {
            "source_name": "Kubernetes API",
            "description": "The Kubernetes Authors. (n.d.). The Kubernetes API. Retrieved March 29, 2021.",
            "url": "https://kubernetes.io/docs/concepts/overview/kubernetes-api/"
        },
        {
            "source_name": "Unit 42 Unsecured Docker Daemons",
            "description": "Chen, J.. (2020, January 29). Attacker's Tactics and Techniques in Unsecured Docker Daemons Revealed. Retrieved March 31, 2021.",
            "url": "https://unit42.paloaltonetworks.com/attackers-tactics-and-techniques-in-unsecured-docker-daemons-revealed/"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "credential-access"
        }
    ],
    "tactic": [
        "credential-access"
    ],
    "x_mitre_detection": "Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
    "x_mitre_data_sources": [
        "User Account: User Account Authentication",
        "Command: Command Execution",
        "File: File Access"
    ],
    "x_mitre_permissions_required": [
        "User",
        "Administrator"
    ],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Privileged Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.",
                "type": "course-of-action",
                "id": "M1026"
            },
            {
                "name": "Limit Access to Resource Over Network",
                "description": "Prevent access to file shares, remote access to systems, unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.",
                "type": "course-of-action",
                "id": "M1035"
            },
            {
                "name": "Network Segmentation",
                "description": "Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.",
                "type": "course-of-action",
                "id": "M1030"
            },
            {
                "name": "User Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to user accounts.",
                "type": "course-of-action",
                "id": "M1018"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": []
    },
    "detectionRequirements": {
        "requirements": []
    },
    "cspcontrolIds": [
        "40000097",
        "40000205",
        "40000490",
        "40000499"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [
        "19350019",
        "19350021"
    ],
    "cveIds": []
}
