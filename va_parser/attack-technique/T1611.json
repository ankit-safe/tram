{
    "id": "T1611",
    "name": "Escape to Host",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host's filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, or setting up a command and control channel on the host.",
    "x_mitre_platforms": [
        "Windows",
        "Linux",
        "Containers"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1611",
            "external_id": "T1611"
        },
        {
            "source_name": "Container Escape",
            "description": "0xn3va. (n.d.). Escaping. Retrieved May 27, 2022.",
            "url": "https://0xn3va.gitbook.io/cheat-sheets/container/escaping"
        },
        {
            "source_name": "Windows Server Containers Are Open",
            "description": "Daniel Prizmant. (2020, July 15). Windows Server Containers Are Open, and Here's How You Can Break Out. Retrieved October 1, 2021.",
            "url": "https://unit42.paloaltonetworks.com/windows-server-containers-vulnerabilities/"
        },
        {
            "source_name": "Docker Overview",
            "description": "Docker. (n.d.). Docker Overview. Retrieved March 30, 2021.",
            "url": "https://docs.docker.com/get-started/overview/"
        },
        {
            "source_name": "Docker Bind Mounts",
            "description": "Docker. (n.d.). Use Bind Mounts. Retrieved March 30, 2021.",
            "url": "https://docs.docker.com/storage/bind-mounts/"
        },
        {
            "source_name": "Trend Micro Privileged Container",
            "description": "Fiser, D., Oliveira, A.. (2019, December 20). Why a Privileged Container in Docker is a Bad Idea. Retrieved March 30, 2021.",
            "url": "https://www.trendmicro.com/en_us/research/19/l/why-running-a-privileged-container-in-docker-is-a-bad-idea.html"
        },
        {
            "source_name": "Intezer Doki July 20",
            "description": "Fishbein, N., Kajiloti, M.. (2020, July 28). Watch Your Containers: Doki Infecting Docker Servers in the Cloud. Retrieved March 30, 2021.",
            "url": "https://www.intezer.com/blog/cloud-security/watch-your-containers-doki-infecting-docker-servers-in-the-cloud/"
        },
        {
            "source_name": "Crowdstrike Kubernetes Container Escape",
            "description": "Manoj Ahuje. (2022, January 31). CVE-2022-0185: Kubernetes Container Escape Using Linux Kernel Exploit. Retrieved July 6, 2022.",
            "url": "https://www.crowdstrike.com/blog/cve-2022-0185-kubernetes-container-escape-using-linux-kernel-exploit/"
        },
        {
            "source_name": "Keyctl-unmask",
            "description": "Mark Manning. (2020, July 23). Keyctl-unmask: \"Going Florida\" on The State Of Containerizing Linux Keyrings. Retrieved July 6, 2022.",
            "url": "https://www.antitree.com/2020/07/keyctl-unmask-going-florida-on-the-state-of-containerizing-linux-keyrings/"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "privilege-escalation"
        }
    ],
    "tactic": [
        "privilege-escalation"
    ],
    "x_mitre_detection": "Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Additionally, monitor for unexpected usage of syscalls such as <code>mount</code> (as well as resulting process activity) that may indicate an attempt to escape from a privileged container to host. In Kubernetes, monitor for cluster-level events associated with changing containers' volume configurations.",
    "x_mitre_data_sources": [
        "Kernel: Kernel Module Load",
        "Volume: Volume Modification",
        "Process: OS API Execution",
        "Container: Container Creation",
        "Process: Process Creation"
    ],
    "x_mitre_permissions_required": [
        "Administrator",
        "User",
        "root"
    ],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Execution Prevention",
                "description": "Block execution of code on a system through application control, and/or script blocking.",
                "type": "course-of-action",
                "id": "M1038"
            },
            {
                "name": "Application Isolation and Sandboxing",
                "description": "Restrict execution of code to a virtual environment on or in transit to an endpoint system.",
                "type": "course-of-action",
                "id": "M1048"
            },
            {
                "name": "Privileged Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.",
                "type": "course-of-action",
                "id": "M1026"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": []
    },
    "detectionRequirements": {
        "requirements": []
    },
    "cspcontrolIds": [
        "40000205",
        "40000499"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [
        "50106000",
        "50106008"
    ],
    "technologycontrolIds": [],
    "cveIds": [],
    "subTechniques": []
}
