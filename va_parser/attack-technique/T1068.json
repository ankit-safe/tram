{
    "id": "T1068",
    "name": "Exploitation for Privilege Escalation",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Containers"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1068",
            "external_id": "T1068"
        },
        {
            "source_name": "ESET InvisiMole June 2020",
            "description": "Hromcova, Z. and Cherpanov, A. (2020, June). INVISIMOLE: THE HIDDEN PART OF THE STORY. Retrieved July 16, 2020.",
            "url": "https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf"
        },
        {
            "source_name": "Microsoft Driver Block Rules",
            "description": "Microsoft. (2020, October 15). Microsoft recommended driver block rules. Retrieved March 16, 2021.",
            "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules"
        },
        {
            "source_name": "Unit42 AcidBox June 2020",
            "description": "Reichel, D. and Idrizovic, E. (2020, June 17). AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations. Retrieved March 16, 2021.",
            "url": "https://unit42.paloaltonetworks.com/acidbox-rare-malware/"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "privilege-escalation"
        }
    ],
    "tactic": [
        "privilege-escalation"
    ],
    "x_mitre_detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.(Citation: Microsoft Driver Block Rules)\n\nHigher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges.",
    "x_mitre_data_sources": [
        "Process: Process Creation",
        "Driver: Driver Load"
    ],
    "x_mitre_permissions_required": [
        "User"
    ],
    "x_mitre_effective_permissions": [
        "User"
    ],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Update Software",
                "description": "Perform regular software updates to mitigate exploitation risk.",
                "type": "course-of-action",
                "id": "M1051"
            },
            {
                "name": "Exploit Protection",
                "description": "Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.",
                "type": "course-of-action",
                "id": "M1050"
            },
            {
                "name": "Application Isolation and Sandboxing",
                "description": "Restrict execution of code to a virtual environment on or in transit to an endpoint system.",
                "type": "course-of-action",
                "id": "M1048"
            },
            {
                "name": "Threat Intelligence Program",
                "description": "A threat intelligence program helps an organization generate their own threat intelligence information and track trends to inform defensive priorities to mitigate risk.",
                "type": "course-of-action",
                "id": "M1019"
            },
            {
                "name": "Exploitation for Privilege Escalation Mitigation",
                "description": "Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, if available. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of client-side exploitation. The risks of additional exploits and weaknesses in implementation may still exist. (Citation: Ars Technica Pwn2Own 2017 VM Escape)\n\nSecurity applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. (Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. (Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility and may not work for software components targeted for privilege escalation.",
                "type": "course-of-action",
                "id": "T1068"
            },
            {
                "name": "Execution Prevention",
                "description": "Block execution of code on a system through application control, and/or script blocking.",
                "type": "course-of-action",
                "id": "M1038"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that application sandboxing is implemented to mitigate the impact of exploitation by making it difficult to advance their operation through the exploitation of undiscovered or unpatched vulnerabilities",
                "acid": "98581082"
            },
            {
                "description": "Ensure that application virtualization and micro-segmentation is implemented to mitigate the impact of exploitation.",
                "acid": "98581083"
            },
            {
                "description": "Ensure that Windows Defender Exploit Guard (WDEG) is configured to identify malicious behaviors and mitigate the exploitation impact",
                "acid": "98581084"
            },
            {
                "description": "Ensure that the Enhanced Mitigation Experience Toolkit (EMET) is to identify malicious behaviors and mitigate the exploitation impact",
                "acid": "98581085"
            },
            {
                "description": "Ensure that Control flow integrity checking is performed to potentially identify and prevent software exploitation",
                "acid": "98581086"
            },
            {
                "description": "Ensure that a robust cyber threat intelligence capability is developed to determine what types and levels of threat may use software exploits and 0-days against a particular organization",
                "acid": "98581087"
            },
            {
                "description": "Ensure that softwares are updated regularly by employing patch management for internal enterprise endpoints and servers",
                "acid": "98581088"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that the endpoint system is monitored for abnormal behavior of the processes indicating successful compromise",
                "acid": "98581078"
            },
            {
                "description": "Ensure that the endpoint system is monitored for suspicious files written to disk",
                "acid": "98581079"
            },
            {
                "description": "Ensure that the endpoint system is monitored for evidence of Process Injection for attempts to hide execution or evidence of Discovery",
                "acid": "98581080"
            },
            {
                "description": "Ensure that the endpoint system is monitored for activities such as OS Credential Dumping which may indicate that an adversary has gained higher privileges",
                "acid": "98581081"
            }
        ]
    },
    "cspcontrolIds": [
        "40000102",
        "40000117",
        "40000187",
        "40000491",
        "40000521",
        "40000522"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [
        "50106000",
        "50106007",
        "50106008",
        "50106009",
        "50106010",
        "50106016",
        "50106020",
        "50106023",
        "50106025",
        "50106032",
        "50106109",
        "50106110"
    ],
    "technologycontrolIds": [
        "10101029",
        "10101030",
        "15040032",
        "15040033",
        "16360170",
        "16460169",
        "18380047",
        "18380054",
        "18380055",
        "18410001",
        "19920454"
    ],
    "cveIds": [
        "CVE-2004-1389",
        "CVE-2007-3280",
        "CVE-2008-0655",
        "CVE-2008-4250",
        "CVE-2008-4996",
        "CVE-2009-1612",
        "CVE-2010-0840",
        "CVE-2010-1225",
        "CVE-2010-1592",
        "CVE-2010-2743",
        "CVE-2010-2884",
        "CVE-2011-1331",
        "CVE-2011-2921",
        "CVE-2012-0181",
        "CVE-2012-4681",
        "CVE-2013-0640",
        "CVE-2013-0707",
        "CVE-2013-4810",
        "CVE-2013-5065",
        "CVE-2014-0322",
        "CVE-2014-1807",
        "CVE-2014-4113",
        "CVE-2014-4114",
        "CVE-2014-4148",
        "CVE-2014-6278",
        "CVE-2014-6324",
        "CVE-2015-0016",
        "CVE-2015-0096",
        "CVE-2015-1494",
        "CVE-2015-1701",
        "CVE-2015-1769",
        "CVE-2015-1805",
        "CVE-2015-2360",
        "CVE-2015-2387",
        "CVE-2015-2945",
        "CVE-2015-7910",
        "CVE-2016-5195",
        "CVE-2016-6367",
        "CVE-2016-6754",
        "CVE-2016-9269",
        "CVE-2017-0213",
        "CVE-2017-0263",
        "CVE-2017-12611",
        "CVE-2017-12635",
        "CVE-2017-1274",
        "CVE-2017-13289",
        "CVE-2017-15211",
        "CVE-2017-5638",
        "CVE-2017-6326",
        "CVE-2017-6526",
        "CVE-2017-7533",
        "CVE-2018-10093",
        "CVE-2018-10636",
        "CVE-2018-11060",
        "CVE-2018-11088",
        "CVE-2018-11220",
        "CVE-2018-11686",
        "CVE-2018-11776",
        "CVE-2018-15758",
        "CVE-2018-15761",
        "CVE-2018-15774",
        "CVE-2018-15782",
        "CVE-2018-15797",
        "CVE-2018-16763",
        "CVE-2018-17908",
        "CVE-2018-19830",
        "CVE-2018-19831",
        "CVE-2018-5463",
        "CVE-2018-7500",
        "CVE-2018-7602",
        "CVE-2018-8575",
        "CVE-2018-8599",
        "CVE-2018-8736",
        "CVE-2018-9488",
        "CVE-2018-9862",
        "CVE-2019-0708",
        "CVE-2019-0808",
        "CVE-2019-0859",
        "CVE-2019-10149",
        "CVE-2019-1021",
        "CVE-2019-1086",
        "CVE-2019-1087",
        "CVE-2019-11229",
        "CVE-2019-1214",
        "CVE-2019-1215",
        "CVE-2019-1402",
        "CVE-2019-1423",
        "CVE-2019-15821",
        "CVE-2019-15976",
        "CVE-2019-1609",
        "CVE-2019-1611",
        "CVE-2019-1612",
        "CVE-2019-16405",
        "CVE-2019-1663",
        "CVE-2019-16784",
        "CVE-2019-1753",
        "CVE-2019-17558",
        "CVE-2019-1764",
        "CVE-2019-1790",
        "CVE-2019-1863",
        "CVE-2019-1876",
        "CVE-2019-1879",
        "CVE-2019-1889",
        "CVE-2019-1915",
        "CVE-2019-2215",
        "CVE-2019-3704",
        "CVE-2019-3727",
        "CVE-2019-3735",
        "CVE-2019-3780",
        "CVE-2019-3798",
        "CVE-2019-5786",
        "CVE-2019-5954",
        "CVE-2019-8387",
        "CVE-2019-9081",
        "CVE-2020-0636",
        "CVE-2020-0688",
        "CVE-2020-0758",
        "CVE-2020-0981",
        "CVE-2020-1027",
        "CVE-2020-10751",
        "CVE-2020-10817",
        "CVE-2020-11107",
        "CVE-2020-1111",
        "CVE-2020-11608",
        "CVE-2020-11651",
        "CVE-2020-1190",
        "CVE-2020-12652",
        "CVE-2020-12653",
        "CVE-2020-12659",
        "CVE-2020-1347",
        "CVE-2020-14510",
        "CVE-2020-1471",
        "CVE-2020-15182",
        "CVE-2020-24949",
        "CVE-2020-28328",
        "CVE-2020-3216",
        "CVE-2020-3387",
        "CVE-2020-3403",
        "CVE-2020-35606",
        "CVE-2020-5300",
        "CVE-2020-5326",
        "CVE-2020-5328",
        "CVE-2020-5358",
        "CVE-2020-5362",
        "CVE-2020-5369",
        "CVE-2020-5371",
        "CVE-2020-5539",
        "CVE-2020-5847",
        "CVE-2020-6964",
        "CVE-2020-7004",
        "CVE-2020-8467",
        "CVE-2020-8649",
        "CVE-2020-8835",
        "CVE-2021-42840",
        "CVE-2021-44596",
        "CVE-2022-24562"
    ],
    "subTechniques": []
}
