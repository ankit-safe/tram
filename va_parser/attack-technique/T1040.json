{
    "id": "T1040",
    "name": "Network Sniffing",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring) (Citation: GCP Packet Mirroring) (Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring) (Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic. (Citation: Rhino Security Labs AWS VPC Traffic Mirroring)",
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network",
        "IaaS"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1040",
            "external_id": "T1040"
        },
        {
            "source_name": "AWS Traffic Mirroring",
            "description": "Amazon Web Services. (n.d.). How Traffic Mirroring works. Retrieved March 17, 2022.",
            "url": "https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-how-it-works.html"
        },
        {
            "source_name": "GCP Packet Mirroring",
            "description": "Google Cloud. (n.d.). Packet Mirroring overview. Retrieved March 17, 2022.",
            "url": "https://cloud.google.com/vpc/docs/packet-mirroring"
        },
        {
            "source_name": "SpecterOps AWS Traffic Mirroring",
            "description": "Luke Paine. (2020, March 11). Through the Looking Glass \u2014 Part 1. Retrieved March 17, 2022.",
            "url": "https://posts.specterops.io/through-the-looking-glass-part-1-f539ae308512"
        },
        {
            "source_name": "Azure Virtual Network TAP",
            "description": "Microsoft. (2022, February 9). Virtual network TAP. Retrieved March 17, 2022.",
            "url": "https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-tap-overview"
        },
        {
            "source_name": "Rhino Security Labs AWS VPC Traffic Mirroring",
            "description": "Spencer Gietzen. (2019, September 17). Abusing VPC Traffic Mirroring in AWS. Retrieved March 17, 2022.",
            "url": "https://rhinosecuritylabs.com/aws/abusing-vpc-traffic-mirroring-in-aws/"
        },
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/158.html",
            "external_id": "CAPEC-158"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "credential-access"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "discovery"
        }
    ],
    "tactic": [
        "credential-access",
        "discovery"
    ],
    "x_mitre_detection": "Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\n\nIn cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors.",
    "x_mitre_data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
    ],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [
        "Network interface access and packet capture driver"
    ],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "User Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to user accounts.",
                "type": "course-of-action",
                "id": "M1018"
            },
            {
                "name": "Multi-factor Authentication",
                "description": "Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.",
                "type": "course-of-action",
                "id": "M1032"
            },
            {
                "name": "Encrypt Sensitive Information",
                "description": "Protect sensitive information with strong encryption.",
                "type": "course-of-action",
                "id": "M1041"
            },
            {
                "name": "Network Sniffing Mitigation",
                "description": "Ensure that all wireless traffic is encrypted appropriately. Use Kerberos, SSL, and multifactor authentication wherever possible. Monitor switches and network for span port usage, ARP/DNS poisoning, and router reconfiguration.\n\nIdentify and block potentially malicious software that may be used to sniff or analyze network traffic by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
                "type": "course-of-action",
                "id": "T1040"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that Strong Encryption is implemented on all wired/ wireless traffic",
                "acid": "98581901"
            },
            {
                "description": "Ensure that multi-factor authentication is implemented in the organization for the authentication of systems in the network",
                "acid": "98581902"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that administrator logins, configuration changes, and device images are monitored for changes through auditing",
                "acid": "98581899"
            },
            {
                "description": "Ensure that ARP spoofing and gratuitous ARP broadcasts are monitored using Network monitoring solutions",
                "acid": "98581900"
            }
        ]
    },
    "cspcontrolIds": [
        "40000097",
        "40000178",
        "40000490"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [
        "50106009",
        "50106023",
        "50106025",
        "50106027",
        "50106031",
        "50106115"
    ],
    "technologycontrolIds": [
        "10101011",
        "10101031",
        "101020040",
        "101040005",
        "101050005",
        "101060005",
        "10110040",
        "101540058",
        "101540059",
        "101550058",
        "101550059",
        "101560035",
        "101560059",
        "101560060",
        "101570035",
        "101570059",
        "101570060",
        "101600063",
        "101600064",
        "10190018",
        "10240019",
        "103900035",
        "103900059",
        "103900060",
        "10460061",
        "10460062",
        "10860001",
        "10960032",
        "10960035",
        "10960048",
        "10960060",
        "10960063",
        "10960067",
        "10960076",
        "11010061",
        "11010062",
        "14010041",
        "14010043",
        "14020051",
        "14020054",
        "14080057",
        "14080060",
        "15010321",
        "15010324",
        "15020327",
        "15020330",
        "15030297",
        "15030301",
        "15040305",
        "15040306",
        "15200313",
        "15200316",
        "16010284",
        "16010417",
        "16020295",
        "16020427",
        "16100267",
        "16100334",
        "16100387",
        "16100469",
        "16100731",
        "16110271",
        "16110404",
        "16120290",
        "16120422",
        "16360285",
        "16360347",
        "16360351",
        "16460282",
        "16460342",
        "18270001",
        "18380047",
        "18810001",
        "18990001",
        "19010018",
        "19310001",
        "19370001",
        "19370002",
        "19500001",
        "19510001",
        "19520001",
        "19920268",
        "19920432",
        "19920434",
        "19920479",
        "21808001",
        "21811001"
    ],
    "cveIds": [
        "CVE-2018-11749",
        "CVE-2018-14781",
        "CVE-2018-7259",
        "CVE-2019-1715",
        "CVE-2020-0884",
        "CVE-2020-11035",
        "CVE-2020-15093",
        "CVE-2020-15094",
        "CVE-2020-5261"
    ],
    "subTechniques": []
}
