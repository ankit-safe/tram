{
    "id": "T0857",
    "name": "System Firmware",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "System firmware on modern assets is often designed with an update feature. Older device firmware may be factory installed and require special reprograming equipment. When available, the firmware update feature enables vendors to remotely patch bugs and perform upgrades. Device firmware updates are often delegated to the user and may be done using a software update package. It may also be possible to perform this task over the network.  An adversary may exploit the firmware update feature on accessible devices to upload malicious or out-of-date firmware. Malicious modification of device firmware may provide an adversary with root access to a device, given firmware is one of the lowest programming abstraction layers. (Citation: Basnight, Zachry, et al.)",
    "x_mitre_platforms": [
        "Safety Instrumented System/Protection Relay",
        "Field Controller/RTU/PLC/IED",
        "Input/Output Server"
    ],
    "x_mitre_domains": [
        "ics-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-ics-attack",
            "url": "https://attack.mitre.org/techniques/T0857",
            "external_id": "T0857"
        },
        {
            "source_name": "Basnight, Zachry, et al.",
            "description": "Basnight, Zachry, et al. 2013 Retrieved. 2017/10/17 ",
            "url": "http://www.sciencedirect.com/science/article/pii/S1874548213000231"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-ics-attack",
            "phase_name": "persistence-ics"
        },
        {
            "kill_chain_name": "mitre-ics-attack",
            "phase_name": "inhibit-response-function"
        }
    ],
    "tactic": [
        "persistence-ics",
        "inhibit-response-function"
    ],
    "x_mitre_detection": [],
    "x_mitre_data_sources": [
        "Firmware: Firmware Modification",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
    ],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Audit",
                "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses. Perform periodic integrity checks of the device to validate the correctness of the firmware, software, programs, and configurations. Integrity checks, which typically include cryptographic hashes or digital signatures, should be compared to those obtained at known valid states, especially after events like device reboots, program downloads, or program restarts.",
                "type": "course-of-action",
                "id": "M0947"
            },
            {
                "name": "Human User Authentication",
                "description": "Require user authentication before allowing access to data or accepting commands to a device. While strong multi-factor authentication is preferable, it is not always feasible within ICS environments. Performing strong user authentication also requires additional security controls and processes which are often the target of related adversarial techniques (e.g., Valid Accounts, Default Credentials). Therefore, associated ATT&CK mitigations should be considered in addition to this, including [Multi-factor Authentication](https://attack.mitre.org/mitigations/M0932), [Account Use Policies](https://attack.mitre.org/mitigations/M0936), [Password Policies](https://attack.mitre.org/mitigations/M0927), [User Account Management](https://attack.mitre.org/mitigations/M0918), [Privileged Account Management](https://attack.mitre.org/mitigations/M0926), and [https://attack.mitre.org/mitigations/M1052/ User Account Control].",
                "type": "course-of-action",
                "id": "M0804"
            },
            {
                "name": "Communication Authenticity",
                "description": "When communicating over an untrusted network, utilize secure network protocols that both authenticate the message sender and can verify its integrity. This can be done either through message authentication codes (MACs) or digital signatures, to detect spoofed network messages and unauthorized connections.",
                "type": "course-of-action",
                "id": "M0802"
            },
            {
                "name": "Code Signing",
                "description": "Enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.",
                "type": "course-of-action",
                "id": "M0945"
            },
            {
                "name": "Network Allowlists",
                "description": "Network allowlists can be implemented through either host-based files or system hosts files to specify what connections (e.g., IP address, MAC address, port, protocol) can be made from a device. Allowlist techniques that operate at the  application layer (e.g., DNP3, Modbus, HTTP) are addressed in [Filter Network Traffic](https://attack.mitre.org/mitigations/M0937) mitigation.",
                "type": "course-of-action",
                "id": "M0807"
            },
            {
                "name": "Encrypt Network Traffic",
                "description": "Utilize strong cryptographic techniques and protocols to prevent eavesdropping on network communications.",
                "type": "course-of-action",
                "id": "M0808"
            },
            {
                "name": "Access Management",
                "description": "Access Management technologies can be used to enforce authorization polices and decisions, especially when existing field devices do not provided sufficient capabilities to support user identification and authentication. (Citation: McCarthy, J et al. July 2018) These technologies typically utilize an in-line network device or gateway system to prevent access to unauthenticated users, while also integrating with an authentication service to first verify user credentials. (Citation: Centre for the Protection of National Infrastructure November 2010)",
                "type": "course-of-action",
                "id": "M0801"
            },
            {
                "name": "Boot Integrity",
                "description": "Use secure methods to boot a system and verify the integrity of the operating system and loading mechanisms.",
                "type": "course-of-action",
                "id": "M0946"
            },
            {
                "name": "Network Segmentation",
                "description": "Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.  Restrict network access to only required systems and services. In addition, prevent systems from other networks or business functions (e.g., enterprise) from accessing critical process control systems. For example, in IEC 62443, systems within the same secure level should be grouped into a zone, and access to that zone is restricted by a conduit, or mechanism to restrict data flows between zones by segmenting the network. (Citation: IEC February 2019) (Citation: IEC August 2013)",
                "type": "course-of-action",
                "id": "M0930"
            },
            {
                "name": "Update Software",
                "description": "Perform regular software updates to mitigate exploitation risk. Software updates may need to be scheduled around operational down times.",
                "type": "course-of-action",
                "id": "M0951"
            },
            {
                "name": "Software Process and Device Authentication",
                "description": "Require the authentication of devices and software processes where appropriate. Devices that connect remotely to other systems should require strong authentication to prevent spoofing of communications. Furthermore, software processes should also require authentication when accessing APIs.",
                "type": "course-of-action",
                "id": "M0813"
            },
            {
                "name": "Encrypt Sensitive Information",
                "description": "Protect sensitive data-at-rest with strong encryption.",
                "type": "course-of-action",
                "id": "M0941"
            },
            {
                "name": "Filter Network Traffic",
                "description": "Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.   Perform inline allow/denylisting of network messages based on the application layer (OSI Layer 7) protocol, especially for automation protocols. Application allowlists are beneficial when there are well-defined communication sequences, types, rates, or patterns needed during expected system operations. Application denylists may be needed if all acceptable communication sequences cannot be defined, but instead a set of known malicious uses can be denied (e.g., excessive communication  attempts, shutdown messages, invalid commands).  Devices performing these functions are often referred to as deep-packet inspection (DPI) firewalls, context-aware firewalls, or firewalls blocking specific automation/SCADA protocol aware firewalls. (Citation: Centre for the Protection of National Infrastructure February 2005)",
                "type": "course-of-action",
                "id": "M0937"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": []
    },
    "detectionRequirements": {
        "requirements": []
    },
    "cspcontrolIds": [],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [],
    "cveIds": [],
    "subTechniques": []
}
