{
    "id": "T1528",
    "name": "Steal Application Access Token",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nIn Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container's token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n",
    "x_mitre_platforms": [
        "SaaS",
        "Office 365",
        "Azure AD",
        "Google Workspace",
        "Containers"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1528",
            "external_id": "T1528"
        },
        {
            "source_name": "Amnesty OAuth Phishing Attacks, August 2019",
            "description": "Amnesty International. (2019, August 16). Evolving Phishing Attacks Targeting Journalists and Human Rights Defenders from the Middle-East and North Africa. Retrieved October 8, 2019.",
            "url": "https://www.amnesty.org/en/latest/research/2019/08/evolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa/"
        },
        {
            "source_name": "Auth0 Understanding Refresh Tokens",
            "description": "Auth0 Inc.. (n.d.). Understanding Refresh Tokens. Retrieved December 16, 2021.",
            "url": "https://auth0.com/learn/refresh-tokens/"
        },
        {
            "source_name": "Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019",
            "description": "Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.",
            "url": "https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"
        },
        {
            "source_name": "Trend Micro Pawn Storm OAuth 2017",
            "description": "Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019.",
            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks"
        },
        {
            "source_name": "Kubernetes Service Accounts",
            "description": "Kubernetes. (2022, February 26). Configure Service Accounts for Pods. Retrieved April 1, 2022.",
            "url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
        },
        {
            "source_name": "Microsoft - Azure AD Identity Tokens - Aug 2019",
            "description": "Microsoft. (2019, August 29). Microsoft identity platform access tokens. Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens"
        },
        {
            "source_name": "Microsoft - Azure AD App Registration - May 2019",
            "description": "Microsoft. (2019, May 8). Quickstart: Register an application with the Microsoft identity platform. Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app"
        },
        {
            "source_name": "Microsoft - OAuth Code Authorization flow - June 2019",
            "description": "Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow"
        },
        {
            "source_name": "Microsoft Identity Platform Protocols May 2019",
            "description": "Microsoft. (n.d.). Retrieved September 12, 2019.",
            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "credential-access"
        }
    ],
    "tactic": [
        "credential-access"
    ],
    "x_mitre_detection": "Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a \u201cHigh severity app permissions\u201d policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.\n\nSecurity analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old \u201cLast authorized\u201d fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.\n\nAdministrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.",
    "x_mitre_data_sources": [
        "User Account: User Account Modification"
    ],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Restrict Web-Based Content",
                "description": "Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.",
                "type": "course-of-action",
                "id": "M1021"
            },
            {
                "name": "Audit",
                "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.",
                "type": "course-of-action",
                "id": "M1047"
            },
            {
                "name": "User Training",
                "description": "Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.",
                "type": "course-of-action",
                "id": "M1017"
            },
            {
                "name": "User Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to user accounts.",
                "type": "course-of-action",
                "id": "M1018"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that OAuth applications and the permissions they have been granted to access organizational data are audited regularly by administrators.",
                "acid": "98581990"
            },
            {
                "description": "Ensure that audits for new or updated applications are performed periodically.",
                "acid": "98581991"
            },
            {
                "description": "Ensure that suspicious applications should be investigated and removed after performing audits.",
                "acid": "98581992"
            },
            {
                "description": "Ensure that users are disabled from authorizing third-party apps through OAuth 2.0.",
                "acid": "98581993"
            },
            {
                "description": "Ensure that user are forced to ask administrative consent for all requests.",
                "acid": "98581994"
            },
            {
                "description": "Ensure that admin has blocked end-user registration of applications by their users, to reduce risk.",
                "acid": "98581995"
            },
            {
                "description": "Ensure that Cloud Access Security Broker is configured to ban applications.",
                "acid": "98581996"
            },
            {
                "description": "Ensure that enterprise policy settings in the Azure Management Portal :\n\"Users -> User settings -> App registrations: Users can register applications\" is set to \"no\" to prevent users from registering new applications.",
                "acid": "98581997"
            },
            {
                "description": "Ensure that enterprise policy settings in the Azure Management Portal :\n\"Enterprise applications -> User settings -> Enterprise applications: Users can consent to apps accessing company data on their behalf\" is set to \"no\" to prevent users from consenting to allow third-party multi-tenant applications",
                "acid": "98581998"
            },
            {
                "description": "Ensure that usage policies and manage user permissions on cloud applications are configured by Cloud Access Security Broker (CASB) to prevent access to application access tokens.",
                "acid": "98581999"
            },
            {
                "description": "Ensure that users are trained to not authorize third-party applications they don\u2019t recognize.",
                "acid": "98582000"
            },
            {
                "description": "Ensure that user should be made aware of spoofed service and check if the redirect URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application,",
                "acid": "98582001"
            },
            {
                "description": "Ensure that users are aware of the permissions they are granting to apps.",
                "acid": "98582002"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that Administrators have set up monitoring to trigger automatic alerts when policy criteria are met.",
                "acid": "98581979"
            },
            {
                "description": "Ensure that using a Cloud Access Security Broker (CASB) admin has created a \"High severity app permissions\" policy that generates alerts if apps request high severity permission.",
                "acid": "98581980"
            },
            {
                "description": "Ensure that using a Cloud Access Security Broker (CASB) admin has created a \"High severity app permissions\" policy that generates alerts if apps send permissions requests for too many users.",
                "acid": "98581981"
            },
            {
                "description": "Ensure that the tools available in CASB, identity provider, or resource provider (depending on platform.) are used for identifying malicious apps.",
                "acid": "98581982"
            },
            {
                "description": "Ensure that apps that are authorized by a small number of users are identified using tools available in CASB.",
                "acid": "98581983"
            },
            {
                "description": "Ensure that apps requesting high risk permissions are also monitored using tools available in CASB.",
                "acid": "98581984"
            },
            {
                "description": "Ensure that apps requesting permissions incongruous with the app\u2019s purpose, or apps with old \"Last authorized\" fields are monitored using tools available in CASB.",
                "acid": "98581985"
            },
            {
                "description": "Ensure that app stores are analyzed to identify suspicious apps.",
                "acid": "98581986"
            },
            {
                "description": "Ensure that activity log displaying activities the app has performed are monitored to identify suspicious behavior.",
                "acid": "98581987"
            },
            {
                "description": "Ensure that logs and leverage audit tools are set up by admin to monitor actions indicating OAuth 2.0 access.",
                "acid": "98581988"
            },
            {
                "description": "Ensure that audit tools have enabled admins to identify privilege escalation actions such as role creations or policy modifications which could be suspicious.",
                "acid": "98581989"
            }
        ]
    },
    "cspcontrolIds": [
        "40000097",
        "40000211",
        "40000490",
        "40000516"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [
        "50106014",
        "50106015"
    ],
    "technologycontrolIds": [
        "11480011",
        "17880002",
        "17880003",
        "17880005",
        "18240001",
        "18240002",
        "18380025",
        "18420002",
        "18420003",
        "18420004",
        "18420007",
        "18710001",
        "18770001",
        "18770002",
        "18830001",
        "18840002",
        "19120013",
        "19120016",
        "19120024",
        "19120035",
        "19120036",
        "19120037",
        "19120038",
        "19120039",
        "19360003",
        "19360004",
        "19360005",
        "19360006",
        "19360009",
        "19390001",
        "19430006",
        "19450005",
        "19540001",
        "19540002"
    ],
    "cveIds": [
        "CVE-2013-5054",
        "CVE-2015-8562",
        "CVE-2018-18641",
        "CVE-2020-0884",
        "CVE-2020-11651",
        "CVE-2020-5300"
    ],
    "subTechniques": []
}
