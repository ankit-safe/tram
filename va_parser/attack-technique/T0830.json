{
    "id": "T0830",
    "name": "Man in the Middle",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries with privileged network access may seek to modify network traffic in real time using man-in-the-middle (MITM) attacks. (Citation: Gabriel Sanchez October 2017) This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a MITM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  \n\nA MITM attack may allow an adversary to perform the following attacks:  \n[Block Reporting Message](https://attack.mitre.org/techniques/T0804), [Spoof Reporting Message](https://attack.mitre.org/techniques/T0856), [Modify Parameter](https://attack.mitre.org/techniques/T0836), [Unauthorized Command Message](https://attack.mitre.org/techniques/T0855)",
    "x_mitre_platforms": [
        "Control Server",
        "Field Controller/RTU/PLC/IED",
        "Human-Machine Interface"
    ],
    "x_mitre_domains": [
        "ics-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "external_id": "T0830",
            "url": "https://attack.mitre.org/techniques/T0830"
        },
        {
            "source_name": "Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011",
            "url": "http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6142258",
            "description": "Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011 A Taxonomy of Cyber Attacks on SCADA Systems Retrieved. 2018/01/12 "
        },
        {
            "source_name": "Gabriel Sanchez October 2017",
            "url": "https://www.sans.org/reading-room/whitepapers/ICS/man-in-the-middle-attack-modbus-tcp-illustrated-wireshark-38095",
            "description": "Gabriel Sanchez 2017, October Man-In-The-Middle Attack Against Modbus TCP Illustrated with Wireshark Retrieved. 2020/01/05 "
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-ics-attack",
            "phase_name": "collection-ics"
        }
    ],
    "tactic": [
        "collection-ics"
    ],
    "x_mitre_detection": "",
    "x_mitre_data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
    ],
    "x_mitre_permissions_required": [],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Network Segmentation",
                "description": "Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.  Restrict network access to only required systems and services. In addition, prevent systems from other networks or business functions (e.g., enterprise) from accessing critical process control systems. For example, in IEC 62443, systems within the same secure level should be grouped into a zone, and access to that zone is restricted by a conduit, or mechanism to restrict data flows between zones by segmenting the network. (Citation: IEC February 2019) (Citation: IEC August 2013)",
                "type": "course-of-action",
                "id": "M0930"
            },
            {
                "name": "Out-of-Band Communications Channel",
                "description": "Have alternative methods to support communication requirements during communication failures and data integrity attacks. (Citation: National Institute of Standards and Technology April 2013) (Citation: Defense Advanced Research Projects Agency)",
                "type": "course-of-action",
                "id": "M0810"
            },
            {
                "name": "Software Process and Device Authentication",
                "description": "Require the authentication of devices and software processes where appropriate. Devices that connect remotely to other systems should require strong authentication to prevent spoofing of communications. Furthermore, software processes should also require authentication when accessing APIs.",
                "type": "course-of-action",
                "id": "M0813"
            },
            {
                "name": "Static Network Configuration",
                "description": "Configure hosts and devices to use static network configurations when possible, protocols that require dynamic discovery/addressing (e.g., ARP, DHCP, DNS) can be used to manipulate network message forwarding and enable various MitM attacks. This mitigation may not always be usable due to limited device features or challenges introduced with different network configurations.",
                "type": "course-of-action",
                "id": "M0814"
            },
            {
                "name": "Network Intrusion Prevention",
                "description": "Use intrusion detection signatures to block traffic at network boundaries.  In industrial control environments, network intrusion prevention should be configured so it will not disrupt protocols and communications responsible for real-time functions related to control or safety.",
                "type": "course-of-action",
                "id": "M0931"
            },
            {
                "name": "Audit",
                "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses. Perform periodic integrity checks of the device to validate the correctness of the firmware, software, programs, and configurations. Integrity checks, which typically include cryptographic hashes or digital signatures, should be compared to those obtained at known valid states, especially after events like device reboots, program downloads, or program restarts.",
                "type": "course-of-action",
                "id": "M0947"
            },
            {
                "name": "Disable or Remove Feature or Program",
                "description": "Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.",
                "type": "course-of-action",
                "id": "M0942"
            },
            {
                "name": "Communication Authenticity",
                "description": "When communicating over an untrusted network, utilize secure network protocols that both authenticate the message sender and can verify its integrity. This can be done either through message authentication codes (MACs) or digital signatures, to detect spoofed network messages and unauthorized connections.",
                "type": "course-of-action",
                "id": "M0802"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": []
    },
    "detectionRequirements": {
        "requirements": []
    },
    "cspcontrolIds": [],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [],
    "cveIds": [],
    "subTechniques": []
}
