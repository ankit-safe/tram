{
    "id": "T1003",
    "name": "OS Credential Dumping",
    "x_mitre_is_subtechnique": false,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
    "x_mitre_platforms": [
        "Windows",
        "Linux",
        "macOS"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1003",
            "external_id": "T1003"
        },
        {
            "source_name": "Medium Detecting Attempts to Steal Passwords from Memory",
            "description": "French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019.",
            "url": "https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea"
        },
        {
            "source_name": "Powersploit",
            "description": "PowerSploit. (n.d.). Retrieved December 4, 2014.",
            "url": "https://github.com/mattifestation/PowerSploit"
        },
        {
            "source_name": "Microsoft DRSR Dec 2017",
            "description": "Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017.",
            "url": "https://msdn.microsoft.com/library/cc228086.aspx"
        },
        {
            "source_name": "Microsoft GetNCCChanges",
            "description": "Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017.",
            "url": "https://msdn.microsoft.com/library/dd207691.aspx"
        },
        {
            "source_name": "Samba DRSUAPI",
            "description": "SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017.",
            "url": "https://wiki.samba.org/index.php/DRSUAPI"
        },
        {
            "source_name": "Harmj0y DCSync Sept 2015",
            "description": "Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017.",
            "url": "http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/"
        },
        {
            "source_name": "Microsoft NRPC Dec 2017",
            "description": "Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017.",
            "url": "https://msdn.microsoft.com/library/cc237008.aspx"
        },
        {
            "source_name": "Microsoft SAMR",
            "description": "Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017.",
            "url": "https://msdn.microsoft.com/library/cc245496.aspx"
        },
        {
            "source_name": "AdSecurity DCSync Sept 2015",
            "description": "Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017.",
            "url": "https://adsecurity.org/?p=1729"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "credential-access"
        }
    ],
    "tactic": [
        "credential-access"
    ],
    "x_mitre_detection": "### Windows\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\n### Linux\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/<pid>/maps</code>, where the <code><pid></code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",
    "x_mitre_data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution",
        "File: File Access",
        "Process: Process Creation",
        "Active Directory: Active Directory Object Access",
        "Network Traffic: Network Traffic Flow",
        "Windows Registry: Windows Registry Key Access",
        "Process: Process Access",
        "Network Traffic: Network Traffic Content"
    ],
    "x_mitre_permissions_required": [
        "Administrator",
        "SYSTEM",
        "root"
    ],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Encrypt Sensitive Information",
                "description": "Protect sensitive information with strong encryption.",
                "type": "course-of-action",
                "id": "M1041"
            },
            {
                "name": "Behavior Prevention on Endpoint",
                "description": "Use capabilities to prevent suspicious behavior patterns from occurring on endpoint systems. This could include suspicious process, file, API call, etc. behavior.",
                "type": "course-of-action",
                "id": "M1040"
            },
            {
                "name": "Password Policies",
                "description": "Set and enforce secure password policies for accounts.",
                "type": "course-of-action",
                "id": "M1027"
            },
            {
                "name": "User Training",
                "description": "Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.",
                "type": "course-of-action",
                "id": "M1017"
            },
            {
                "name": "Privileged Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.",
                "type": "course-of-action",
                "id": "M1026"
            },
            {
                "name": "Privileged Process Integrity",
                "description": "Protect processes with high privileges that can be used to interact with critical system components through use of protected process light, anti-process injection defenses, or other process integrity enforcement measures.",
                "type": "course-of-action",
                "id": "M1025"
            },
            {
                "name": "Credential Access Protection",
                "description": "Use capabilities to prevent successful credential access by adversaries; including blocking forms of credential dumping.",
                "type": "course-of-action",
                "id": "M1043"
            },
            {
                "name": "Credential Dumping Mitigation",
                "description": "### Windows\nMonitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [Valid Accounts](https://attack.mitre.org/techniques/T1078) if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)\n\nOn Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA. (Citation: Microsoft LSA)\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements. (Citation: TechNet Credential Guard) It also does not protect against all forms of credential dumping. (Citation: GitHub SHB Credential Guard)\n\nManage the access control list for \u201cReplicating Directory Changes\u201d and other permissions associated with domain controller replication. (Citation: AdSecurity DCSync Sept 2015) (Citation: Microsoft Replication ACL)\n\nConsider disabling or restricting NTLM traffic. (Citation: Microsoft Disable NTLM Nov 2012)\n\n### Linux\nScraping the passwords from memory requires root privileges. Follow best practices in restricting access to escalated privileges to avoid hostile programs from accessing such sensitive regions of memory.",
                "type": "course-of-action",
                "id": "T1003"
            },
            {
                "name": "Active Directory Configuration",
                "description": "Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc.",
                "type": "course-of-action",
                "id": "M1015"
            },
            {
                "name": "Operating System Configuration",
                "description": "Make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.",
                "type": "course-of-action",
                "id": "M1028"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that active directory configuration defines an access control list for domain controllers to manage \"Replicating Directory Changes\" and permissions",
                "acid": "98581911"
            },
            {
                "description": "Ensure that Active directory configuration is defined by adding users to the \"Protected Users\" group for limiting and securing the users",
                "acid": "98581912"
            },
            {
                "description": "Ensure that a Credential guard is enabled to protect LSA Secrets",
                "acid": "98581913"
            },
            {
                "description": "Ensure that Doman controllers are backed up and secured",
                "acid": "98581914"
            },
            {
                "description": "Ensure that the New Technology LAN Manager (NTLM) is disabled",
                "acid": "98581915"
            },
            {
                "description": "Ensure that WDigest authentication is disabled",
                "acid": "98581916"
            },
            {
                "description": "Ensure that password policy is defined in the organization which defines complexity and best practices",
                "acid": "98581917"
            },
            {
                "description": "Ensure that local administrator accounts are configured with complex and unique passwords",
                "acid": "98581918"
            },
            {
                "description": "Ensure that Privilege Access Management solutions are configured with appropriate privileges to different levels of administrative tiers",
                "acid": "98581919"
            },
            {
                "description": "Ensure that user or admin domain accounts are not configured under local administrator groups in windows",
                "acid": "98581920"
            },
            {
                "description": "Ensure that root privileges are assigned to users who require permission to prevent password scraping in Linux",
                "acid": "98581921"
            },
            {
                "description": "Ensure that LSA protection is configured to be enabled by Protected Process Light (PPL) feature",
                "acid": "98581922"
            },
            {
                "description": "Ensure that user training is provided for users which provides awareness on password usage,",
                "acid": "98581923"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that processes interacting with lsass.exe are monitored to identify malicious activity",
                "acid": "98581903"
            },
            {
                "description": "Ensure that valid accounts are monitored for traces of compromise by modifications",
                "acid": "98581904"
            },
            {
                "description": "Ensure that the SAM local file system is monitored for access and modifications",
                "acid": "98581905"
            },
            {
                "description": "Ensure that windows logs are monitored for lsass.exe creation to verify the lsass process status",
                "acid": "98581906"
            },
            {
                "description": "Ensure that processes and command-line arguments for program execution are monitored",
                "acid": "98581907"
            },
            {
                "description": "Ensure that domain controller logs are monitored to identify replication requests and unscheduled activity associated with DCSync",
                "acid": "98581908"
            },
            {
                "description": "Ensure that network protocols are monitored to identify replication requests from unknown IPs with known domain controllers",
                "acid": "98581909"
            },
            {
                "description": "Ensure that auditD monitoring tools are configured to identify hostile processes accessing the proc file system",
                "acid": "98581910"
            }
        ]
    },
    "cspcontrolIds": [
        "40000097",
        "40000140",
        "40000201",
        "40000205",
        "40000490",
        "40000497",
        "40000498",
        "40000499",
        "40000507"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [
        "50110001",
        "50110003"
    ],
    "policycontrolIds": [
        "50100281",
        "50100282",
        "50100329",
        "50100333",
        "50100335",
        "50100337",
        "50106014",
        "50106020",
        "50106026"
    ],
    "technologycontrolIds": [
        "15010079",
        "15010080",
        "15010095",
        "15010191",
        "15020083",
        "15020084",
        "15020099",
        "15030083",
        "15030084",
        "15030099",
        "15030203",
        "15040082",
        "15040087",
        "15040090",
        "15180076",
        "15180077",
        "15180088",
        "15200079",
        "15200080",
        "15200095",
        "15200192",
        "16010085",
        "16010086",
        "16010101",
        "16010200",
        "16020085",
        "16020086",
        "16020101",
        "16020204",
        "16100087",
        "16100088",
        "16100104",
        "16100215",
        "16110085",
        "16110086",
        "16110099",
        "16120087",
        "16120088",
        "16120103",
        "16120204",
        "16140076",
        "16140077",
        "16140088",
        "16360087",
        "16360088",
        "16360095",
        "16360104",
        "16360195",
        "16460085",
        "16460086",
        "16460093",
        "16460102",
        "16460193",
        "16460393",
        "16460394",
        "18380052",
        "19920079",
        "19920080",
        "19920095",
        "19920190",
        "19920402",
        "19920420"
    ],
    "cveIds": [
        "CVE-2014-1812",
        "CVE-2019-7751",
        "CVE-2019-8385",
        "CVE-2020-1938",
        "CVE-2020-20277",
        "CVE-2020-3240"
    ],
    "subTechniques": [
        "T1003.001",
        "T1003.002",
        "T1003.003",
        "T1003.004",
        "T1003.005",
        "T1003.006",
        "T1003.007",
        "T1003.008"
    ]
}
