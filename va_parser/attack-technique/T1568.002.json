{
    "id": "T1568.002",
    "name": "Domain Generation Algorithms",
    "x_mitre_is_subtechnique": true,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
    "x_mitre_platforms": [
        "Linux",
        "macOS",
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1568/002",
            "external_id": "T1568.002"
        },
        {
            "source_name": "Cybereason Dissecting DGAs",
            "description": "Sternfeld, U. (2016). Dissecting Domain Generation Algorithms: Eight Real World DGA Variants. Retrieved February 18, 2019.",
            "url": "http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf"
        },
        {
            "source_name": "Cisco Umbrella DGA",
            "description": "Scarfo, A. (2016, October 10). Domain Generation Algorithms \u2013 Why so effective?. Retrieved February 18, 2019.",
            "url": "https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/"
        },
        {
            "source_name": "Unit 42 DGA Feb 2019",
            "description": "Unit 42. (2019, February 7). Threat Brief: Understanding Domain Generation Algorithms (DGA). Retrieved February 19, 2019.",
            "url": "https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/"
        },
        {
            "source_name": "Talos CCleanup 2017",
            "description": "Brumaghin, E. et al. (2017, September 18). CCleanup: A Vast Number of Machines at Risk. Retrieved March 9, 2018.",
            "url": "http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html"
        },
        {
            "source_name": "Akamai DGA Mitigation",
            "description": "Liu, H. and Yuzifovich, Y. (2018, January 9). A Death Match of Domain Generation Algorithms. Retrieved February 18, 2019.",
            "url": "https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html"
        },
        {
            "source_name": "FireEye POSHSPY April 2017",
            "description": "Dunwoody, M.. (2017, April 3). Dissecting One of APT29\u2019s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017.",
            "url": "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html"
        },
        {
            "source_name": "ESET Sednit 2017 Activity",
            "description": "ESET. (2017, December 21). Sednit update: How Fancy Bear Spent the Year. Retrieved February 18, 2019.",
            "url": "https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/"
        },
        {
            "source_name": "Data Driven Security DGA",
            "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.",
            "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/"
        },
        {
            "source_name": "Pace University Detecting DGA May 2017",
            "description": "Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019.",
            "url": "http://csis.pace.edu/~ctappert/srd2017/2017PDF/d4.pdf"
        },
        {
            "source_name": "Elastic Predicting DGA",
            "description": "Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019.",
            "url": "https://arxiv.org/pdf/1611.00791.pdf"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "command-and-control"
        }
    ],
    "tactic": [
        "command-and-control"
    ],
    "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)",
    "x_mitre_data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation"
    ],
    "x_mitre_permissions_required": [
        "User"
    ],
    "x_mitre_effective_permissions": [],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Network Intrusion Prevention",
                "description": "Use intrusion detection signatures to block traffic at network boundaries.",
                "type": "course-of-action",
                "id": "M1031"
            },
            {
                "name": "Restrict Web-Based Content",
                "description": "Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.",
                "type": "course-of-action",
                "id": "M1021"
            },
            {
                "name": "Domain Generation Algorithms Mitigation",
                "description": "This technique may be difficult to mitigate since the domains can be registered just before they are used, and disposed shortly after. Malware researchers can reverse-engineer malware variants that use DGAs and determine future domains that the malware will attempt to contact, but this is a time and resource intensive effort.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA Brute Force) Malware is also increasingly incorporating seed values that can be unique for each instance, which would then need to be determined to extract future generated domains. In some cases, the seed that a particular sample uses can be extracted from DNS traffic.(Citation: Akamai DGA Mitigation) Even so, there can be thousands of possible domains generated per day; this makes it impractical for defenders to preemptively register all possible C2 domains due to the cost. In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. (Citation: University of Birmingham C2)",
                "type": "course-of-action",
                "id": "T1483"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that Network intrusion detection and prevention system(s) is configured to identify malicious network traffic (by using network signatures).",
                "acid": "98582530"
            },
            {
                "description": "Ensure that a local DNS sinkhole is used to help prevent DGA-based command and control at a reduced cost",
                "acid": "98582531"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that frequency analysis is performed to detect a pseudo-randomly generated domain name which could be suspicious.",
                "acid": "98582523"
            },
            {
                "description": "Ensure that different approaches such as Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters is used to detect a pseudo-randomly generated domain name which could be suspicious.",
                "acid": "98582524"
            },
            {
                "description": "Ensure that recently registered names or rarely visited domains are monitored to identify suspicious domain.",
                "acid": "98582525"
            },
            {
                "description": "Ensure that different Machine learning approaches are used to detect DGA domains",
                "acid": "98582526"
            },
            {
                "description": "Ensure that N-Gram methods are used to determine a randomness score for strings used in the domain name and identify suspicious domains.",
                "acid": "98582527"
            },
            {
                "description": "Ensure that domains having high randomness score and not whitelisted is monitored to identify if a domain is related to a legitimate host or DGA.",
                "acid": "98582528"
            },
            {
                "description": "Ensure that deep learning approach is used to classify domains as DGA-generated.",
                "acid": "98582529"
            }
        ]
    },
    "cspcontrolIds": [
        "40000182",
        "40000208"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [],
    "cveIds": []
}
