{
    "id": "T1548.002",
    "name": "Bypass User Account Control",
    "x_mitre_is_subtechnique": true,
    "revoked": false,
    "x_mitre_deprecated": false,
    "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
    "x_mitre_platforms": [
        "Windows"
    ],
    "x_mitre_domains": [
        "enterprise-attack"
    ],
    "x_mitre_defense_bypassed": [
        "Windows User Account Control"
    ],
    "external_references": [
        {
            "source_name": "mitre-attack",
            "url": "https://attack.mitre.org/techniques/T1548/002",
            "external_id": "T1548.002"
        },
        {
            "source_name": "Davidson Windows",
            "description": "Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.",
            "url": "http://www.pretentiousname.com/misc/win7_uac_whitelist2.html"
        },
        {
            "source_name": "TechNet How UAC Works",
            "description": "Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.",
            "url": "https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works"
        },
        {
            "source_name": "SANS UAC Bypass",
            "description": "Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.",
            "url": "http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass"
        },
        {
            "source_name": "MSDN COM Elevation",
            "description": "Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.",
            "url": "https://msdn.microsoft.com/en-us/library/ms679687.aspx"
        },
        {
            "source_name": "enigma0x3 Fileless UAC Bypass",
            "description": "Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.",
            "url": "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/"
        },
        {
            "source_name": "enigma0x3 sdclt app paths",
            "description": "Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.",
            "url": "https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/"
        },
        {
            "source_name": "enigma0x3 sdclt bypass",
            "description": "Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.",
            "url": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/"
        },
        {
            "source_name": "TechNet Inside UAC",
            "description": "Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.",
            "url": "https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx"
        },
        {
            "source_name": "Fortinet Fareit",
            "description": "Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.",
            "url": "https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware"
        },
        {
            "source_name": "Github UACMe",
            "description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.",
            "url": "https://github.com/hfiref0x/UACME"
        }
    ],
    "kill_chain_phases": [
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "privilege-escalation"
        },
        {
            "kill_chain_name": "mitre-attack",
            "phase_name": "defense-evasion"
        }
    ],
    "tactic": [
        "privilege-escalation",
        "defense-evasion"
    ],
    "x_mitre_detection": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\n\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.",
    "x_mitre_data_sources": [
        "Process: Process Metadata",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Process: Process Creation"
    ],
    "x_mitre_permissions_required": [
        "Administrator",
        "User"
    ],
    "x_mitre_effective_permissions": [
        "Administrator"
    ],
    "x_mitre_system_requirements": [],
    "x_mitre_remote_support": false,
    "relation": {
        "mitigates": [
            {
                "name": "Update Software",
                "description": "Perform regular software updates to mitigate exploitation risk.",
                "type": "course-of-action",
                "id": "M1051"
            },
            {
                "name": "Audit",
                "description": "Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.",
                "type": "course-of-action",
                "id": "M1047"
            },
            {
                "name": "User Account Control",
                "description": "Configure Windows User Account Control to mitigate risk of adversaries obtaining elevated process access.",
                "type": "course-of-action",
                "id": "M1052"
            },
            {
                "name": "Privileged Account Management",
                "description": "Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.",
                "type": "course-of-action",
                "id": "M1026"
            }
        ]
    },
    "mitigationRequirements": {
        "requirements": [
            {
                "description": "Ensure that Windows systems are checked regularly for common UAC bypass weaknesses",
                "acid": "98581013"
            },
            {
                "description": "Ensure that users are removed from the local administrator group on systems",
                "acid": "98581014"
            },
            {
                "description": "Ensure that Windows is updated to the latest version and patch level to utilize the latest protective measures against UAC bypass",
                "acid": "98581015"
            },
            {
                "description": "Ensure that the highest enforcement level for User Access Control(UAC) is used to mitigate UAC bypass opportunities",
                "acid": "98581016"
            }
        ]
    },
    "detectionRequirements": {
        "requirements": [
            {
                "description": "Ensure that process API calls monitored for behavior indicating Process Injection",
                "acid": "98581008"
            },
            {
                "description": "Ensure that unusual loaded DLLs through DLL Search Order Hijacking are monitored",
                "acid": "98581009"
            },
            {
                "description": "Ensure that [HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command registry key is monitored for unauthorized changes indicating eventvwr.exe bypass",
                "acid": "98581010"
            },
            {
                "description": "Ensure that [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe registry key is monitored for unauthorized changes indicating sdclt.exe bypass",
                "acid": "98581011"
            },
            {
                "description": "Ensure that  [HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand registry key is monitored for unauthorized changes indicating sdclt.exe bypass",
                "acid": "98581012"
            }
        ]
    },
    "cspcontrolIds": [
        "40000097",
        "40000117",
        "40000205",
        "40000490",
        "40000499",
        "40000521",
        "40000522"
    ],
    "externalcontrolIds": [],
    "peoplecontrolIds": [],
    "policycontrolIds": [],
    "technologycontrolIds": [
        "16100592",
        "16130115",
        "19920475"
    ],
    "cveIds": [
        "CVE-2008-0655",
        "CVE-2013-5065"
    ]
}
